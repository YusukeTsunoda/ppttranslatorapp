{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/1-text-position-fix/lib/db/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\n// グローバル変数の型定義\ndeclare global {\n  // eslint-disable-next-line no-var\n  var prisma: PrismaClient | undefined;\n  var prismaInstances: Record<string, PrismaClient> | undefined;\n}\n\n// サーバーレス環境向けに最適化されたPrismaクライアントオプション\nconst getClientOptions = () => {\n  const isVercel = process.env.VERCEL === '1';\n  \n  return {\n    log: process.env.NODE_ENV === 'development' ? ['error', 'warn'] : ['error'],\n    errorFormat: 'minimal',\n    // ライブラリモードで実行する\n    engineType: 'library',\n  };\n};\n\n// シングルトンパターンの実装強化とパフォーマンスオプション\nexport const createPrismaClient = (options: any = {}) => {\n  // 実行環境とオプションの設定\n  const clientOptions = {\n    ...getClientOptions(),\n    ...options,\n  };\n  \n  const client = new PrismaClient(clientOptions);\n\n  // 必要な場合のみコネクション\n  if (process.env.NODE_ENV !== 'test') {\n    client.$connect().catch(e => {\n      console.error('Prisma connection error:', e);\n    });\n  }\n\n  return client;\n};\n\n// モデル特化クライアント - 遅延初期化パターン\nconst createLazyPrismaInstance = (domain: string): (() => PrismaClient) => {\n  let instance: PrismaClient | undefined = undefined;\n  \n  return () => {\n    if (!instance) {\n      // 最初の呼び出し時にのみインスタンスを作成\n      instance = createPrismaClient();\n    }\n    return instance;\n  };\n};\n\n// 遅延ロードされるドメイン特化型クライアント\nconst getLazyUserPrisma = createLazyPrismaInstance('user');\nconst getLazyFilePrisma = createLazyPrismaInstance('file');\nconst getLazyTranslationPrisma = createLazyPrismaInstance('translation');\nconst getLazyActivityPrisma = createLazyPrismaInstance('activity');\n\n// クライアントを必要なときだけ初期化\nexport const userPrisma = () => getLazyUserPrisma();\nexport const filePrisma = () => getLazyFilePrisma();\nexport const translationPrisma = () => getLazyTranslationPrisma();\nexport const activityPrisma = () => getLazyActivityPrisma();\n\n// メインのPrismaクライアントインスタンス - 遅延初期化\nlet globalPrisma: PrismaClient | undefined;\nexport const prisma = (): PrismaClient => {\n  if (!globalPrisma) {\n    globalPrisma = global.prisma || createPrismaClient();\n    // 開発環境ではグローバル参照を維持（HMRのため）\n    if (process.env.NODE_ENV !== 'production') {\n      global.prisma = globalPrisma;\n    }\n  }\n  return globalPrisma;\n};\n\nexport default (): PrismaClient => prisma();\n\n// バンドルサイズを最小化するためのヘルパー\n// 必要な最小限のモデルのみをロードするためのプロキシ\nexport const getPrismaForModel = (modelName: string): PrismaClient => {\n  switch (modelName) {\n    case 'user':\n    case 'User':\n    case 'Session':\n    case 'Account':\n      return userPrisma();\n    case 'File':\n    case 'Slide':\n    case 'Text':\n      return filePrisma();\n    case 'Translation':\n    case 'TranslationHistory':\n      return translationPrisma();\n    case 'ActivityLog':\n    case 'UsageStatistics':\n    case 'ApiKey':\n    case 'BatchJob':\n      return activityPrisma();\n    default:\n      return prisma();\n  }\n};\n"],"names":["activityPrisma","createPrismaClient","filePrisma","getPrismaForModel","prisma","translationPrisma","userPrisma","getClientOptions","isVercel","process","env","VERCEL","log","NODE_ENV","errorFormat","engineType","options","clientOptions","client","PrismaClient","$connect","catch","e","console","error","createLazyPrismaInstance","domain","instance","undefined","getLazyUserPrisma","getLazyFilePrisma","getLazyTranslationPrisma","getLazyActivityPrisma","globalPrisma","global","modelName"],"mappings":";;;;;;;;;;;IAgEaA,cAAc;eAAdA;;IA1CAC,kBAAkB;eAAlBA;;IAyDb,OAA4C;eAA5C;;IAjBaC,UAAU;eAAVA;;IAqBAC,iBAAiB;eAAjBA;;IAfAC,MAAM;eAANA;;IALAC,iBAAiB;eAAjBA;;IAFAC,UAAU;eAAVA;;;wBA7DgB;AAS7B,qCAAqC;AACrC,MAAMC,mBAAmB;IACvB,MAAMC,WAAWC,QAAQC,GAAG,CAACC,MAAM,KAAK;IAExC,OAAO;QACLC,KAAKH,QAAQC,GAAG,CAACG,QAAQ,KAAK,gBAAgB;YAAC;YAAS;SAAO,GAAG;YAAC;SAAQ;QAC3EC,aAAa;QACb,gBAAgB;QAChBC,YAAY;IACd;AACF;AAGO,MAAMd,qBAAqB,CAACe,UAAe,CAAC,CAAC;IAClD,gBAAgB;IAChB,MAAMC,gBAAgB;QACpB,GAAGV,kBAAkB;QACrB,GAAGS,OAAO;IACZ;IAEA,MAAME,SAAS,IAAIC,oBAAY,CAACF;IAEhC,gBAAgB;IAChB,IAAIR,QAAQC,GAAG,CAACG,QAAQ,KAAK,QAAQ;QACnCK,OAAOE,QAAQ,GAAGC,KAAK,CAACC,CAAAA;YACtBC,QAAQC,KAAK,CAAC,4BAA4BF;QAC5C;IACF;IAEA,OAAOJ;AACT;AAEA,0BAA0B;AAC1B,MAAMO,2BAA2B,CAACC;IAChC,IAAIC,WAAqCC;IAEzC,OAAO;QACL,IAAI,CAACD,UAAU;YACb,uBAAuB;YACvBA,WAAW1B;QACb;QACA,OAAO0B;IACT;AACF;AAEA,wBAAwB;AACxB,MAAME,oBAAoBJ,yBAAyB;AACnD,MAAMK,oBAAoBL,yBAAyB;AACnD,MAAMM,2BAA2BN,yBAAyB;AAC1D,MAAMO,wBAAwBP,yBAAyB;AAGhD,MAAMnB,aAAa,IAAMuB;AACzB,MAAM3B,aAAa,IAAM4B;AACzB,MAAMzB,oBAAoB,IAAM0B;AAChC,MAAM/B,iBAAiB,IAAMgC;AAEpC,iCAAiC;AACjC,IAAIC;AACG,MAAM7B,SAAS;IACpB,IAAI,CAAC6B,cAAc;QACjBA,eAAeC,OAAO9B,MAAM,IAAIH;QAChC,2BAA2B;QAC3B,IAAIQ,QAAQC,GAAG,CAACG,QAAQ,KAAK,cAAc;YACzCqB,OAAO9B,MAAM,GAAG6B;QAClB;IACF;IACA,OAAOA;AACT;MAEA,WAAe,IAAoB7B;AAI5B,MAAMD,oBAAoB,CAACgC;IAChC,OAAQA;QACN,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO7B;QACT,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAOJ;QACT,KAAK;QACL,KAAK;YACH,OAAOG;QACT,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAOL;QACT;YACE,OAAOI;IACX;AACF"}