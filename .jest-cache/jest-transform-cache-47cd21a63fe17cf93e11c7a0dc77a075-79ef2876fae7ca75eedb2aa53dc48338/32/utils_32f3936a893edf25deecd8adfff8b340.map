{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/1-text-position-fix/lib/translation/utils.ts"],"sourcesContent":["interface TranslationRequest {\n  texts: string[];\n  sourceLanguage: string;\n  targetLanguage: string;\n  fileId: string;\n  slides?: any[];\n  model?: string;\n}\n\ninterface ValidationResult {\n  isValid: boolean;\n  error: string | null;\n}\n\n/**\n * 翻訳リクエストのバリデーションを行う\n * @param request 翻訳リクエスト\n * @returns バリデーション結果\n */\nexport function validateTranslationRequest(request: any): ValidationResult {\n  // 必須フィールドの存在チェック\n  if (!request.texts) {\n    return { isValid: false, error: 'テキストが必要です' };\n  }\n  if (!request.sourceLanguage) {\n    return { isValid: false, error: 'ソース言語が必要です' };\n  }\n  if (!request.targetLanguage) {\n    return { isValid: false, error: 'ターゲット言語が必要です' };\n  }\n  if (!request.fileId) {\n    return { isValid: false, error: 'ファイルIDが必要です' };\n  }\n\n  // データ型のチェック\n  if (!Array.isArray(request.texts)) {\n    return { isValid: false, error: 'textsは配列である必要があります' };\n  }\n  if (typeof request.sourceLanguage !== 'string') {\n    return { isValid: false, error: 'sourceLanguageは文字列である必要があります' };\n  }\n  if (typeof request.targetLanguage !== 'string') {\n    return { isValid: false, error: 'targetLanguageは文字列である必要があります' };\n  }\n  if (typeof request.fileId !== 'string') {\n    return { isValid: false, error: 'fileIdは文字列である必要があります' };\n  }\n\n  // 空の値のチェック\n  if (request.texts.length === 0) {\n    return { isValid: false, error: 'テキストが空です' };\n  }\n  if (request.texts.some((text: string) => !text || text.trim() === '')) {\n    return { isValid: false, error: '空のテキストが含まれています' };\n  }\n  if (request.sourceLanguage.trim() === '') {\n    return { isValid: false, error: 'ソース言語が空です' };\n  }\n  if (request.targetLanguage.trim() === '') {\n    return { isValid: false, error: 'ターゲット言語が空です' };\n  }\n  if (request.fileId.trim() === '') {\n    return { isValid: false, error: 'ファイルIDが空です' };\n  }\n\n  return { isValid: true, error: null };\n}\n\n/**\n * 翻訳結果から余分なテキストを削除する\n * @param text 翻訳結果のテキスト\n * @returns クリーニング済みのテキスト\n */\nexport function cleanTranslatedText(text: string): string {\n  let cleanedText = text.trim();\n\n  // 余分なパターンを削除\n  const patterns = [\n    /^Here is the translation from .+ to .+:\\s*/i,\n    /^Translation:\\s*/i,\n    /^Translated text:\\s*/i,\n    /^The translation is:\\s*/i,\n    /^In English:\\s*/i,\n    /^In Japanese:\\s*/i,\n    /^The text \"([^\"]+)\" translates to:\\s*/i,\n    /^The text \"([^\"]+)\" translates to English as:\\s*/i,\n    /^The text \"([^\"]+)\" can be translated to English as:\\s*/i,\n    /^The text \"([^\"]+)\" in English is:\\s*/i,\n    /^The English translation of \"([^\"]+)\" is:\\s*/i,\n    /^\\\"(.+)\\\"$/,\n    /^(.+):$/,\n  ];\n\n  // 各パターンにマッチする場合は削除\n  patterns.forEach(pattern => {\n    cleanedText = cleanedText.replace(pattern, '$1');\n  });\n\n  return cleanedText.trim();\n}\n\n/**\n * 翻訳前のテキストを前処理する\n * @param text 翻訳前のテキスト\n * @returns 前処理済みのテキスト\n */\nexport function preprocessText(text: string): string {\n  return text\n    .trim() // 前後の空白を削除\n    .replace(/\\s+/g, ' ') // 連続する空白を1つに\n    .replace(/[\\r\\n]+/g, '\\n'); // 連続する改行を1つに\n}\n\n/**\n * 翻訳プロンプトを生成する\n * @param text 翻訳対象のテキスト\n * @param sourceLang ソース言語\n * @param targetLang ターゲット言語\n * @returns 翻訳プロンプト\n */\nexport function generateTranslationPrompt(text: string, sourceLang: string, targetLang: string): string {\n  return `あなたは高品質な翻訳エンジンです。以下のテキストを${sourceLang}から${targetLang}に翻訳してください。\n元のテキストの意味を正確に保ちながら、自然な${targetLang}に翻訳してください。\nフォーマットや記号は保持し、翻訳のみを行ってください。\n\nテキスト: \"${text}\"\n\n翻訳:`;\n} "],"names":["cleanTranslatedText","generateTranslationPrompt","preprocessText","validateTranslationRequest","request","texts","isValid","error","sourceLanguage","targetLanguage","fileId","Array","isArray","length","some","text","trim","cleanedText","patterns","forEach","pattern","replace","sourceLang","targetLang"],"mappings":";;;;;;;;;;;IAyEgBA,mBAAmB;eAAnBA;;IA+CAC,yBAAyB;eAAzBA;;IAdAC,cAAc;eAAdA;;IAvFAC,0BAA0B;eAA1BA;;;AAAT,SAASA,2BAA2BC,OAAY;IACrD,iBAAiB;IACjB,IAAI,CAACA,QAAQC,KAAK,EAAE;QAClB,OAAO;YAAEC,SAAS;YAAOC,OAAO;QAAY;IAC9C;IACA,IAAI,CAACH,QAAQI,cAAc,EAAE;QAC3B,OAAO;YAAEF,SAAS;YAAOC,OAAO;QAAa;IAC/C;IACA,IAAI,CAACH,QAAQK,cAAc,EAAE;QAC3B,OAAO;YAAEH,SAAS;YAAOC,OAAO;QAAe;IACjD;IACA,IAAI,CAACH,QAAQM,MAAM,EAAE;QACnB,OAAO;YAAEJ,SAAS;YAAOC,OAAO;QAAc;IAChD;IAEA,YAAY;IACZ,IAAI,CAACI,MAAMC,OAAO,CAACR,QAAQC,KAAK,GAAG;QACjC,OAAO;YAAEC,SAAS;YAAOC,OAAO;QAAqB;IACvD;IACA,IAAI,OAAOH,QAAQI,cAAc,KAAK,UAAU;QAC9C,OAAO;YAAEF,SAAS;YAAOC,OAAO;QAA+B;IACjE;IACA,IAAI,OAAOH,QAAQK,cAAc,KAAK,UAAU;QAC9C,OAAO;YAAEH,SAAS;YAAOC,OAAO;QAA+B;IACjE;IACA,IAAI,OAAOH,QAAQM,MAAM,KAAK,UAAU;QACtC,OAAO;YAAEJ,SAAS;YAAOC,OAAO;QAAuB;IACzD;IAEA,WAAW;IACX,IAAIH,QAAQC,KAAK,CAACQ,MAAM,KAAK,GAAG;QAC9B,OAAO;YAAEP,SAAS;YAAOC,OAAO;QAAW;IAC7C;IACA,IAAIH,QAAQC,KAAK,CAACS,IAAI,CAAC,CAACC,OAAiB,CAACA,QAAQA,KAAKC,IAAI,OAAO,KAAK;QACrE,OAAO;YAAEV,SAAS;YAAOC,OAAO;QAAiB;IACnD;IACA,IAAIH,QAAQI,cAAc,CAACQ,IAAI,OAAO,IAAI;QACxC,OAAO;YAAEV,SAAS;YAAOC,OAAO;QAAY;IAC9C;IACA,IAAIH,QAAQK,cAAc,CAACO,IAAI,OAAO,IAAI;QACxC,OAAO;YAAEV,SAAS;YAAOC,OAAO;QAAc;IAChD;IACA,IAAIH,QAAQM,MAAM,CAACM,IAAI,OAAO,IAAI;QAChC,OAAO;YAAEV,SAAS;YAAOC,OAAO;QAAa;IAC/C;IAEA,OAAO;QAAED,SAAS;QAAMC,OAAO;IAAK;AACtC;AAOO,SAASP,oBAAoBe,IAAY;IAC9C,IAAIE,cAAcF,KAAKC,IAAI;IAE3B,aAAa;IACb,MAAME,WAAW;QACf;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,mBAAmB;IACnBA,SAASC,OAAO,CAACC,CAAAA;QACfH,cAAcA,YAAYI,OAAO,CAACD,SAAS;IAC7C;IAEA,OAAOH,YAAYD,IAAI;AACzB;AAOO,SAASd,eAAea,IAAY;IACzC,OAAOA,KACJC,IAAI,GAAG,WAAW;KAClBK,OAAO,CAAC,QAAQ,KAAK,aAAa;KAClCA,OAAO,CAAC,YAAY,OAAO,aAAa;AAC7C;AASO,SAASpB,0BAA0Bc,IAAY,EAAEO,UAAkB,EAAEC,UAAkB;IAC5F,OAAO,CAAC,yBAAyB,EAAED,WAAW,EAAE,EAAEC,WAAW;sBACzC,EAAEA,WAAW;;;OAG5B,EAAER,KAAK;;GAEX,CAAC;AACJ"}