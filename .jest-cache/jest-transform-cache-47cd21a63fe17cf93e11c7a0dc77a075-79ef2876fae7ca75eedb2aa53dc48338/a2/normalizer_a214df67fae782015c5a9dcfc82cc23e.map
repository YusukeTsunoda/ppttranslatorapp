{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/1-text-position-fix/lib/translation/normalizer.ts"],"sourcesContent":["/**\n * 翻訳結果の正規化と構造化を行うモジュール\n * 翻訳APIからのレスポンスを整形し、余分なテキストを除去する\n */\n\nimport { cleanTranslatedText } from './utils';\n\n/**\n * 翻訳結果の構造化データ型\n */\nexport interface StructuredTranslation {\n  slideIndex: number;\n  texts: {\n    index: number;\n    originalText: string;\n    translatedText: string;\n    position?: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n    style?: Record<string, any>;\n  }[];\n}\n\n/**\n * 翻訳結果を正規化する拡張パターン\n * より多くのAI翻訳モデルの出力パターンに対応\n */\nconst EXTENDED_PATTERNS = [\n  // 基本的な前置きパターン\n  /^Here is the translation from .+ to .+:\\s*/i,\n  /^Translation(s)?:\\s*/i,\n  /^Translated text:\\s*/i,\n  /^The translation is:\\s*/i,\n  \n  // 言語固有の前置きパターン\n  /^In (English|Japanese|Chinese|German|French|Spanish|Russian|Korean|Arabic):\\s*/i,\n  /^(英語|日本語|中国語|ドイツ語|フランス語|スペイン語|ロシア語|韓国語|アラビア語)で(は)?:\\s*/i,\n  \n  // 引用形式のパターン\n  /^The text [\"']([^\"']+)[\"'] translates to:\\s*/i,\n  /^The text [\"']([^\"']+)[\"'] translates to .+ as:\\s*/i,\n  /^The text [\"']([^\"']+)[\"'] can be translated to .+ as:\\s*/i,\n  /^The text [\"']([^\"']+)[\"'] in .+ is:\\s*/i,\n  /^The .+ translation of [\"']([^\"']+)[\"'] is:\\s*/i,\n  \n  // 引用符のみのパターン\n  /^[\"'](.+)[\"']$/,\n  \n  // コロン終わりのパターン\n  /^(.+):$/,\n  \n  // 追加の複雑なパターン\n  /^Translating from .+ to .+:\\s*/i,\n  /^Here's the translation:\\s*/i,\n  /^Translated from .+ to .+:\\s*/i,\n  /^Translation result:\\s*/i,\n  /^The .+ text translated to .+ is:\\s*/i,\n  /^I'll translate this from .+ to .+:\\s*/i,\n  /^Translating [\"']([^\"']+)[\"'] from .+ to .+:\\s*/i,\n  \n  // 翻訳後の余分な説明文\n  /\\s*This is the (accurate|direct|literal) translation.$/i,\n  /\\s*I've maintained the original (meaning|nuance|tone).$/i,\n  /\\s*The translation preserves the original (meaning|nuance|tone).$/i,\n];\n\n/**\n * 翻訳結果から余分なテキストを削除する拡張版\n * @param text 翻訳結果のテキスト\n * @returns クリーニング済みのテキスト\n */\nexport function normalizeTranslatedText(text: string): string {\n  if (!text) return '';\n  \n  let cleanedText = text.trim();\n  \n  // 拡張パターンを適用\n  EXTENDED_PATTERNS.forEach(pattern => {\n    cleanedText = cleanedText.replace(pattern, '$1');\n  });\n  \n  // 二重引用符の削除 (引用符で囲まれたテキスト全体の場合)\n  if ((cleanedText.startsWith('\"') && cleanedText.endsWith('\"')) || \n      (cleanedText.startsWith(\"'\") && cleanedText.endsWith(\"'\"))) {\n    cleanedText = cleanedText.substring(1, cleanedText.length - 1);\n  }\n  \n  // 末尾のコロンを削除\n  if (cleanedText.endsWith(':')) {\n    cleanedText = cleanedText.substring(0, cleanedText.length - 1);\n  }\n  \n  // 改行の正規化\n  cleanedText = cleanedText.replace(/\\r\\n/g, '\\n');\n  \n  return cleanedText.trim();\n}\n\n/**\n * 翻訳結果を構造化する\n * @param rawTranslations 生の翻訳結果\n * @param originalTexts 元のテキスト\n * @param slides スライドデータ\n * @returns 構造化された翻訳結果\n */\nexport function structureTranslations(\n  rawTranslations: string[],\n  originalTexts: string[],\n  slides: any[]\n): StructuredTranslation[] {\n  // スライドデータがない場合は空配列を返す\n  if (!slides || !Array.isArray(slides)) {\n    return [];\n  }\n  \n  // 構造化された翻訳結果を格納する配列\n  const structuredTranslations: StructuredTranslation[] = [];\n  \n  // 翻訳インデックスのカウンター\n  let translationIndex = 0;\n  \n  // 各スライドごとに処理\n  slides.forEach((slide, slideIndex) => {\n    // スライドの翻訳データを初期化\n    const slideTranslation: StructuredTranslation = {\n      slideIndex,\n      texts: []\n    };\n    \n    // スライド内のテキストを処理\n    if (slide.texts && Array.isArray(slide.texts)) {\n      slide.texts.forEach((textData: any, textIndex: number) => {\n        // 翻訳インデックスが範囲内かチェック\n        if (translationIndex < rawTranslations.length) {\n          // 翻訳テキストを正規化\n          const normalizedTranslation = normalizeTranslatedText(rawTranslations[translationIndex]);\n          \n          // テキストデータを構造化\n          slideTranslation.texts.push({\n            index: textIndex,\n            originalText: textData.text || '',\n            translatedText: normalizedTranslation,\n            position: textData.position || undefined,\n            style: textData.style || undefined\n          });\n          \n          // 翻訳インデックスをインクリメント\n          translationIndex++;\n        }\n      });\n    }\n    \n    // スライドの翻訳データを追加\n    structuredTranslations.push(slideTranslation);\n  });\n  \n  return structuredTranslations;\n}\n\n/**\n * エラー発生時の部分的な翻訳結果を生成\n * @param rawTranslations 生の翻訳結果\n * @param originalTexts 元のテキスト\n * @param slides スライドデータ\n * @param error エラー情報\n * @returns 部分的な翻訳結果\n */\nexport function createPartialTranslationResult(\n  rawTranslations: string[],\n  originalTexts: string[],\n  slides: any[],\n  error: Error\n): {\n  translatedSlides: StructuredTranslation[];\n  error: string;\n  isPartial: boolean;\n} {\n  // 可能な限りの翻訳結果を構造化\n  const partialTranslations = structureTranslations(\n    rawTranslations,\n    originalTexts,\n    slides\n  );\n  \n  return {\n    translatedSlides: partialTranslations,\n    error: error.message,\n    isPartial: true\n  };\n}\n\n/**\n * 翻訳結果の品質をチェック\n * @param translatedText 翻訳されたテキスト\n * @param originalText 元のテキスト\n * @returns 品質チェック結果\n */\nexport function checkTranslationQuality(\n  translatedText: string,\n  originalText: string\n): { isValid: boolean; issues: string[] } {\n  const issues: string[] = [];\n  \n  // 空の翻訳結果をチェック\n  if (!translatedText || translatedText.trim() === '') {\n    issues.push('翻訳結果が空です');\n    return { isValid: false, issues };\n  }\n  \n  // 元のテキストと同じ場合をチェック（翻訳されていない可能性）\n  if (translatedText.trim() === originalText.trim()) {\n    issues.push('翻訳結果が元のテキストと同じです');\n  }\n  \n  // 翻訳結果が極端に短い場合をチェック\n  if (translatedText.length < originalText.length * 0.3 && originalText.length > 10) {\n    issues.push('翻訳結果が元のテキストに比べて極端に短いです');\n  }\n  \n  // 翻訳結果に余分なパターンが含まれていないかチェック\n  for (const pattern of EXTENDED_PATTERNS) {\n    if (pattern.test(translatedText)) {\n      issues.push('翻訳結果に余分なパターンが含まれています');\n      break;\n    }\n  }\n  \n  return {\n    isValid: issues.length === 0,\n    issues\n  };\n}\n"],"names":["checkTranslationQuality","createPartialTranslationResult","normalizeTranslatedText","structureTranslations","EXTENDED_PATTERNS","text","cleanedText","trim","forEach","pattern","replace","startsWith","endsWith","substring","length","rawTranslations","originalTexts","slides","Array","isArray","structuredTranslations","translationIndex","slide","slideIndex","slideTranslation","texts","textData","textIndex","normalizedTranslation","push","index","originalText","translatedText","position","undefined","style","error","partialTranslations","translatedSlides","message","isPartial","issues","isValid","test"],"mappings":"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"}