80ee0678df45d59eeaa2a7787634a907
"use strict";
var ListCache = require('./_ListCache'), Map = require('./_Map'), MapCache = require('./_MapCache');
/** Used as the size to enable large array optimizations. */ var LARGE_ARRAY_SIZE = 200;
/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */ function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([
                key,
                value
            ]);
            this.size = ++data.size;
            return this;
        }
        data = this.__data__ = new MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
}
module.exports = stackSet;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXN1a2V0c3Vub2RhL0RvY3VtZW50cy9jdXJzb3IvcHB0dHJhbnNsYXRvcmFwcC9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja1NldC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTGlzdENhY2hlID0gcmVxdWlyZSgnLi9fTGlzdENhY2hlJyksXG4gICAgTWFwID0gcmVxdWlyZSgnLi9fTWFwJyksXG4gICAgTWFwQ2FjaGUgPSByZXF1aXJlKCcuL19NYXBDYWNoZScpO1xuXG4vKiogVXNlZCBhcyB0aGUgc2l6ZSB0byBlbmFibGUgbGFyZ2UgYXJyYXkgb3B0aW1pemF0aW9ucy4gKi9cbnZhciBMQVJHRV9BUlJBWV9TSVpFID0gMjAwO1xuXG4vKipcbiAqIFNldHMgdGhlIHN0YWNrIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIFN0YWNrXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIHN0YWNrIGNhY2hlIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBzdGFja1NldChrZXksIHZhbHVlKSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXztcbiAgaWYgKGRhdGEgaW5zdGFuY2VvZiBMaXN0Q2FjaGUpIHtcbiAgICB2YXIgcGFpcnMgPSBkYXRhLl9fZGF0YV9fO1xuICAgIGlmICghTWFwIHx8IChwYWlycy5sZW5ndGggPCBMQVJHRV9BUlJBWV9TSVpFIC0gMSkpIHtcbiAgICAgIHBhaXJzLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgICAgIHRoaXMuc2l6ZSA9ICsrZGF0YS5zaXplO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRhdGEgPSB0aGlzLl9fZGF0YV9fID0gbmV3IE1hcENhY2hlKHBhaXJzKTtcbiAgfVxuICBkYXRhLnNldChrZXksIHZhbHVlKTtcbiAgdGhpcy5zaXplID0gZGF0YS5zaXplO1xuICByZXR1cm4gdGhpcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdGFja1NldDtcbiJdLCJuYW1lcyI6WyJMaXN0Q2FjaGUiLCJyZXF1aXJlIiwiTWFwIiwiTWFwQ2FjaGUiLCJMQVJHRV9BUlJBWV9TSVpFIiwic3RhY2tTZXQiLCJrZXkiLCJ2YWx1ZSIsImRhdGEiLCJfX2RhdGFfXyIsInBhaXJzIiwibGVuZ3RoIiwicHVzaCIsInNpemUiLCJzZXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsWUFBWUMsUUFBUSxpQkFDcEJDLE1BQU1ELFFBQVEsV0FDZEUsV0FBV0YsUUFBUTtBQUV2QiwwREFBMEQsR0FDMUQsSUFBSUcsbUJBQW1CO0FBRXZCOzs7Ozs7Ozs7Q0FTQyxHQUNELFNBQVNDLFNBQVNDLEdBQUcsRUFBRUMsS0FBSztJQUMxQixJQUFJQyxPQUFPLElBQUksQ0FBQ0MsUUFBUTtJQUN4QixJQUFJRCxnQkFBZ0JSLFdBQVc7UUFDN0IsSUFBSVUsUUFBUUYsS0FBS0MsUUFBUTtRQUN6QixJQUFJLENBQUNQLE9BQVFRLE1BQU1DLE1BQU0sR0FBR1AsbUJBQW1CLEdBQUk7WUFDakRNLE1BQU1FLElBQUksQ0FBQztnQkFBQ047Z0JBQUtDO2FBQU07WUFDdkIsSUFBSSxDQUFDTSxJQUFJLEdBQUcsRUFBRUwsS0FBS0ssSUFBSTtZQUN2QixPQUFPLElBQUk7UUFDYjtRQUNBTCxPQUFPLElBQUksQ0FBQ0MsUUFBUSxHQUFHLElBQUlOLFNBQVNPO0lBQ3RDO0lBQ0FGLEtBQUtNLEdBQUcsQ0FBQ1IsS0FBS0M7SUFDZCxJQUFJLENBQUNNLElBQUksR0FBR0wsS0FBS0ssSUFBSTtJQUNyQixPQUFPLElBQUk7QUFDYjtBQUVBRSxPQUFPQyxPQUFPLEdBQUdYIn0=