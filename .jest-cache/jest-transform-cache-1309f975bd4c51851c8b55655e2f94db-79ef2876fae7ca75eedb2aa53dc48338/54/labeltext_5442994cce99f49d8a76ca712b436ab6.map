{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/queries/label-text.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByLabelText = exports.queryAllByLabelText = exports.getByLabelText = exports.getAllByLabelText = exports.findByLabelText = exports.findAllByLabelText = void 0;\nvar _config = require(\"../config\");\nvar _helpers = require(\"../helpers\");\nvar _labelHelpers = require(\"../label-helpers\");\nvar _allUtils = require(\"./all-utils\");\nfunction queryAllLabels(container) {\n  return Array.from(container.querySelectorAll('label,input')).map(node => {\n    return {\n      node,\n      textToMatch: (0, _labelHelpers.getLabelContent)(node)\n    };\n  }).filter(({\n    textToMatch\n  }) => textToMatch !== null);\n}\nconst queryAllLabelsByText = (container, text, {\n  exact = true,\n  trim,\n  collapseWhitespace,\n  normalizer\n} = {}) => {\n  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  const textToMatchByLabels = queryAllLabels(container);\n  return textToMatchByLabels.filter(({\n    node,\n    textToMatch\n  }) => matcher(textToMatch, node, text, matchNormalizer)).map(({\n    node\n  }) => node);\n};\nconst queryAllByLabelText = (container, text, {\n  selector = '*',\n  exact = true,\n  collapseWhitespace,\n  trim,\n  normalizer\n} = {}) => {\n  (0, _helpers.checkContainerType)(container);\n  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  const matchingLabelledElements = Array.from(container.querySelectorAll('*')).filter(element => {\n    return (0, _labelHelpers.getRealLabels)(element).length || element.hasAttribute('aria-labelledby');\n  }).reduce((labelledElements, labelledElement) => {\n    const labelList = (0, _labelHelpers.getLabels)(container, labelledElement, {\n      selector\n    });\n    labelList.filter(label => Boolean(label.formControl)).forEach(label => {\n      if (matcher(label.content, label.formControl, text, matchNormalizer) && label.formControl) {\n        labelledElements.push(label.formControl);\n      }\n    });\n    const labelsValue = labelList.filter(label => Boolean(label.content)).map(label => label.content);\n    if (matcher(labelsValue.join(' '), labelledElement, text, matchNormalizer)) {\n      labelledElements.push(labelledElement);\n    }\n    if (labelsValue.length > 1) {\n      labelsValue.forEach((labelValue, index) => {\n        if (matcher(labelValue, labelledElement, text, matchNormalizer)) {\n          labelledElements.push(labelledElement);\n        }\n        const labelsFiltered = [...labelsValue];\n        labelsFiltered.splice(index, 1);\n        if (labelsFiltered.length > 1) {\n          if (matcher(labelsFiltered.join(' '), labelledElement, text, matchNormalizer)) {\n            labelledElements.push(labelledElement);\n          }\n        }\n      });\n    }\n    return labelledElements;\n  }, []).concat((0, _allUtils.queryAllByAttribute)('aria-label', container, text, {\n    exact,\n    normalizer: matchNormalizer\n  }));\n  return Array.from(new Set(matchingLabelledElements)).filter(element => element.matches(selector));\n};\n\n// the getAll* query would normally look like this:\n// const getAllByLabelText = makeGetAllQuery(\n//   queryAllByLabelText,\n//   (c, text) => `Unable to find a label with the text of: ${text}`,\n// )\n// however, we can give a more helpful error message than the generic one,\n// so we're writing this one out by hand.\nconst getAllByLabelText = (container, text, ...rest) => {\n  const els = queryAllByLabelText(container, text, ...rest);\n  if (!els.length) {\n    const labels = queryAllLabelsByText(container, text, ...rest);\n    if (labels.length) {\n      const tagNames = labels.map(label => getTagNameOfElementAssociatedWithLabelViaFor(container, label)).filter(tagName => !!tagName);\n      if (tagNames.length) {\n        throw (0, _config.getConfig)().getElementError(tagNames.map(tagName => `Found a label with the text of: ${text}, however the element associated with this label (<${tagName} />) is non-labellable [https://html.spec.whatwg.org/multipage/forms.html#category-label]. If you really need to label a <${tagName} />, you can use aria-label or aria-labelledby instead.`).join('\\n\\n'), container);\n      } else {\n        throw (0, _config.getConfig)().getElementError(`Found a label with the text of: ${text}, however no form control was found associated to that label. Make sure you're using the \"for\" attribute or \"aria-labelledby\" attribute correctly.`, container);\n      }\n    } else {\n      throw (0, _config.getConfig)().getElementError(`Unable to find a label with the text of: ${text}`, container);\n    }\n  }\n  return els;\n};\nfunction getTagNameOfElementAssociatedWithLabelViaFor(container, label) {\n  const htmlFor = label.getAttribute('for');\n  if (!htmlFor) {\n    return null;\n  }\n  const element = container.querySelector(`[id=\"${htmlFor}\"]`);\n  return element ? element.tagName.toLowerCase() : null;\n}\n\n// the reason mentioned above is the same reason we're not using buildQueries\nconst getMultipleError = (c, text) => `Found multiple elements with the text of: ${text}`;\nconst queryByLabelText = exports.queryByLabelText = (0, _allUtils.wrapSingleQueryWithSuggestion)((0, _allUtils.makeSingleQuery)(queryAllByLabelText, getMultipleError), queryAllByLabelText.name, 'query');\nconst getByLabelText = (0, _allUtils.makeSingleQuery)(getAllByLabelText, getMultipleError);\nconst findAllByLabelText = exports.findAllByLabelText = (0, _allUtils.makeFindQuery)((0, _allUtils.wrapAllByQueryWithSuggestion)(getAllByLabelText, getAllByLabelText.name, 'findAll'));\nconst findByLabelText = exports.findByLabelText = (0, _allUtils.makeFindQuery)((0, _allUtils.wrapSingleQueryWithSuggestion)(getByLabelText, getAllByLabelText.name, 'find'));\nconst getAllByLabelTextWithSuggestions = exports.getAllByLabelText = (0, _allUtils.wrapAllByQueryWithSuggestion)(getAllByLabelText, getAllByLabelText.name, 'getAll');\nconst getByLabelTextWithSuggestions = exports.getByLabelText = (0, _allUtils.wrapSingleQueryWithSuggestion)(getByLabelText, getAllByLabelText.name, 'get');\nconst queryAllByLabelTextWithSuggestions = exports.queryAllByLabelText = (0, _allUtils.wrapAllByQueryWithSuggestion)(queryAllByLabelText, queryAllByLabelText.name, 'queryAll');"],"names":["Object","defineProperty","exports","value","queryByLabelText","queryAllByLabelText","getByLabelText","getAllByLabelText","findByLabelText","findAllByLabelText","_config","require","_helpers","_labelHelpers","_allUtils","queryAllLabels","container","Array","from","querySelectorAll","map","node","textToMatch","getLabelContent","filter","queryAllLabelsByText","text","exact","trim","collapseWhitespace","normalizer","matcher","matches","fuzzyMatches","matchNormalizer","makeNormalizer","textToMatchByLabels","selector","checkContainerType","matchingLabelledElements","element","getRealLabels","length","hasAttribute","reduce","labelledElements","labelledElement","labelList","getLabels","label","Boolean","formControl","forEach","content","push","labelsValue","join","labelValue","index","labelsFiltered","splice","concat","queryAllByAttribute","Set","rest","els","labels","tagNames","getTagNameOfElementAssociatedWithLabelViaFor","tagName","getConfig","getElementError","htmlFor","getAttribute","querySelector","toLowerCase","getMultipleError","c","wrapSingleQueryWithSuggestion","makeSingleQuery","name","makeFindQuery","wrapAllByQueryWithSuggestion","getAllByLabelTextWithSuggestions","getByLabelTextWithSuggestions","queryAllByLabelTextWithSuggestions"],"mappings":"AAAA;AAEAA,OAAOC,cAAc,CAACC,SAAS,cAAc;IAC3CC,OAAO;AACT;AACAD,QAAQE,gBAAgB,GAAGF,QAAQG,mBAAmB,GAAGH,QAAQI,cAAc,GAAGJ,QAAQK,iBAAiB,GAAGL,QAAQM,eAAe,GAAGN,QAAQO,kBAAkB,GAAG,KAAK;AAC1K,IAAIC,UAAUC,QAAQ;AACtB,IAAIC,WAAWD,QAAQ;AACvB,IAAIE,gBAAgBF,QAAQ;AAC5B,IAAIG,YAAYH,QAAQ;AACxB,SAASI,eAAeC,SAAS;IAC/B,OAAOC,MAAMC,IAAI,CAACF,UAAUG,gBAAgB,CAAC,gBAAgBC,GAAG,CAACC,CAAAA;QAC/D,OAAO;YACLA;YACAC,aAAa,AAAC,CAAA,GAAGT,cAAcU,eAAe,AAAD,EAAGF;QAClD;IACF,GAAGG,MAAM,CAAC,CAAC,EACTF,WAAW,EACZ,GAAKA,gBAAgB;AACxB;AACA,MAAMG,uBAAuB,CAACT,WAAWU,MAAM,EAC7CC,QAAQ,IAAI,EACZC,IAAI,EACJC,kBAAkB,EAClBC,UAAU,EACX,GAAG,CAAC,CAAC;IACJ,MAAMC,UAAUJ,QAAQb,UAAUkB,OAAO,GAAGlB,UAAUmB,YAAY;IAClE,MAAMC,kBAAkB,AAAC,CAAA,GAAGpB,UAAUqB,cAAc,AAAD,EAAG;QACpDN;QACAD;QACAE;IACF;IACA,MAAMM,sBAAsBrB,eAAeC;IAC3C,OAAOoB,oBAAoBZ,MAAM,CAAC,CAAC,EACjCH,IAAI,EACJC,WAAW,EACZ,GAAKS,QAAQT,aAAaD,MAAMK,MAAMQ,kBAAkBd,GAAG,CAAC,CAAC,EAC5DC,IAAI,EACL,GAAKA;AACR;AACA,MAAMhB,sBAAsB,CAACW,WAAWU,MAAM,EAC5CW,WAAW,GAAG,EACdV,QAAQ,IAAI,EACZE,kBAAkB,EAClBD,IAAI,EACJE,UAAU,EACX,GAAG,CAAC,CAAC;IACH,CAAA,GAAGlB,SAAS0B,kBAAkB,AAAD,EAAGtB;IACjC,MAAMe,UAAUJ,QAAQb,UAAUkB,OAAO,GAAGlB,UAAUmB,YAAY;IAClE,MAAMC,kBAAkB,AAAC,CAAA,GAAGpB,UAAUqB,cAAc,AAAD,EAAG;QACpDN;QACAD;QACAE;IACF;IACA,MAAMS,2BAA2BtB,MAAMC,IAAI,CAACF,UAAUG,gBAAgB,CAAC,MAAMK,MAAM,CAACgB,CAAAA;QAClF,OAAO,AAAC,CAAA,GAAG3B,cAAc4B,aAAa,AAAD,EAAGD,SAASE,MAAM,IAAIF,QAAQG,YAAY,CAAC;IAClF,GAAGC,MAAM,CAAC,CAACC,kBAAkBC;QAC3B,MAAMC,YAAY,AAAC,CAAA,GAAGlC,cAAcmC,SAAS,AAAD,EAAGhC,WAAW8B,iBAAiB;YACzET;QACF;QACAU,UAAUvB,MAAM,CAACyB,CAAAA,QAASC,QAAQD,MAAME,WAAW,GAAGC,OAAO,CAACH,CAAAA;YAC5D,IAAIlB,QAAQkB,MAAMI,OAAO,EAAEJ,MAAME,WAAW,EAAEzB,MAAMQ,oBAAoBe,MAAME,WAAW,EAAE;gBACzFN,iBAAiBS,IAAI,CAACL,MAAME,WAAW;YACzC;QACF;QACA,MAAMI,cAAcR,UAAUvB,MAAM,CAACyB,CAAAA,QAASC,QAAQD,MAAMI,OAAO,GAAGjC,GAAG,CAAC6B,CAAAA,QAASA,MAAMI,OAAO;QAChG,IAAItB,QAAQwB,YAAYC,IAAI,CAAC,MAAMV,iBAAiBpB,MAAMQ,kBAAkB;YAC1EW,iBAAiBS,IAAI,CAACR;QACxB;QACA,IAAIS,YAAYb,MAAM,GAAG,GAAG;YAC1Ba,YAAYH,OAAO,CAAC,CAACK,YAAYC;gBAC/B,IAAI3B,QAAQ0B,YAAYX,iBAAiBpB,MAAMQ,kBAAkB;oBAC/DW,iBAAiBS,IAAI,CAACR;gBACxB;gBACA,MAAMa,iBAAiB;uBAAIJ;iBAAY;gBACvCI,eAAeC,MAAM,CAACF,OAAO;gBAC7B,IAAIC,eAAejB,MAAM,GAAG,GAAG;oBAC7B,IAAIX,QAAQ4B,eAAeH,IAAI,CAAC,MAAMV,iBAAiBpB,MAAMQ,kBAAkB;wBAC7EW,iBAAiBS,IAAI,CAACR;oBACxB;gBACF;YACF;QACF;QACA,OAAOD;IACT,GAAG,EAAE,EAAEgB,MAAM,CAAC,AAAC,CAAA,GAAG/C,UAAUgD,mBAAmB,AAAD,EAAG,cAAc9C,WAAWU,MAAM;QAC9EC;QACAG,YAAYI;IACd;IACA,OAAOjB,MAAMC,IAAI,CAAC,IAAI6C,IAAIxB,2BAA2Bf,MAAM,CAACgB,CAAAA,UAAWA,QAAQR,OAAO,CAACK;AACzF;AAEA,mDAAmD;AACnD,6CAA6C;AAC7C,yBAAyB;AACzB,qEAAqE;AACrE,IAAI;AACJ,0EAA0E;AAC1E,yCAAyC;AACzC,MAAM9B,oBAAoB,CAACS,WAAWU,MAAM,GAAGsC;IAC7C,MAAMC,MAAM5D,oBAAoBW,WAAWU,SAASsC;IACpD,IAAI,CAACC,IAAIvB,MAAM,EAAE;QACf,MAAMwB,SAASzC,qBAAqBT,WAAWU,SAASsC;QACxD,IAAIE,OAAOxB,MAAM,EAAE;YACjB,MAAMyB,WAAWD,OAAO9C,GAAG,CAAC6B,CAAAA,QAASmB,6CAA6CpD,WAAWiC,QAAQzB,MAAM,CAAC6C,CAAAA,UAAW,CAAC,CAACA;YACzH,IAAIF,SAASzB,MAAM,EAAE;gBACnB,MAAM,AAAC,CAAA,GAAGhC,QAAQ4D,SAAS,AAAD,IAAKC,eAAe,CAACJ,SAAS/C,GAAG,CAACiD,CAAAA,UAAW,CAAC,gCAAgC,EAAE3C,KAAK,mDAAmD,EAAE2C,QAAQ,0HAA0H,EAAEA,QAAQ,uDAAuD,CAAC,EAAEb,IAAI,CAAC,SAASxC;YAC1X,OAAO;gBACL,MAAM,AAAC,CAAA,GAAGN,QAAQ4D,SAAS,AAAD,IAAKC,eAAe,CAAC,CAAC,gCAAgC,EAAE7C,KAAK,kJAAkJ,CAAC,EAAEV;YAC9O;QACF,OAAO;YACL,MAAM,AAAC,CAAA,GAAGN,QAAQ4D,SAAS,AAAD,IAAKC,eAAe,CAAC,CAAC,yCAAyC,EAAE7C,MAAM,EAAEV;QACrG;IACF;IACA,OAAOiD;AACT;AACA,SAASG,6CAA6CpD,SAAS,EAAEiC,KAAK;IACpE,MAAMuB,UAAUvB,MAAMwB,YAAY,CAAC;IACnC,IAAI,CAACD,SAAS;QACZ,OAAO;IACT;IACA,MAAMhC,UAAUxB,UAAU0D,aAAa,CAAC,CAAC,KAAK,EAAEF,QAAQ,EAAE,CAAC;IAC3D,OAAOhC,UAAUA,QAAQ6B,OAAO,CAACM,WAAW,KAAK;AACnD;AAEA,6EAA6E;AAC7E,MAAMC,mBAAmB,CAACC,GAAGnD,OAAS,CAAC,0CAA0C,EAAEA,MAAM;AACzF,MAAMtB,mBAAmBF,QAAQE,gBAAgB,GAAG,AAAC,CAAA,GAAGU,UAAUgE,6BAA6B,AAAD,EAAG,AAAC,CAAA,GAAGhE,UAAUiE,eAAe,AAAD,EAAG1E,qBAAqBuE,mBAAmBvE,oBAAoB2E,IAAI,EAAE;AAClM,MAAM1E,iBAAiB,AAAC,CAAA,GAAGQ,UAAUiE,eAAe,AAAD,EAAGxE,mBAAmBqE;AACzE,MAAMnE,qBAAqBP,QAAQO,kBAAkB,GAAG,AAAC,CAAA,GAAGK,UAAUmE,aAAa,AAAD,EAAG,AAAC,CAAA,GAAGnE,UAAUoE,4BAA4B,AAAD,EAAG3E,mBAAmBA,kBAAkByE,IAAI,EAAE;AAC5K,MAAMxE,kBAAkBN,QAAQM,eAAe,GAAG,AAAC,CAAA,GAAGM,UAAUmE,aAAa,AAAD,EAAG,AAAC,CAAA,GAAGnE,UAAUgE,6BAA6B,AAAD,EAAGxE,gBAAgBC,kBAAkByE,IAAI,EAAE;AACpK,MAAMG,mCAAmCjF,QAAQK,iBAAiB,GAAG,AAAC,CAAA,GAAGO,UAAUoE,4BAA4B,AAAD,EAAG3E,mBAAmBA,kBAAkByE,IAAI,EAAE;AAC5J,MAAMI,gCAAgClF,QAAQI,cAAc,GAAG,AAAC,CAAA,GAAGQ,UAAUgE,6BAA6B,AAAD,EAAGxE,gBAAgBC,kBAAkByE,IAAI,EAAE;AACpJ,MAAMK,qCAAqCnF,QAAQG,mBAAmB,GAAG,AAAC,CAAA,GAAGS,UAAUoE,4BAA4B,AAAD,EAAG7E,qBAAqBA,oBAAoB2E,IAAI,EAAE"}