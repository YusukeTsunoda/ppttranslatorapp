{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/swr/dist/_internal/config-context-client-BXAm5QZy.js"],"sourcesContent":["'use client';\nvar React = require('react');\nvar revalidateEvents = require('./events.js');\nvar lite = require('dequal/lite');\n\nfunction _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return n;\n}\n\nvar React__default = /*#__PURE__*/_interopDefault(React);\nvar revalidateEvents__namespace = /*#__PURE__*/_interopNamespace(revalidateEvents);\n\n// Global state used to deduplicate requests and store listeners\nconst SWRGlobalState = new WeakMap();\n\n// Shared state between server components and client components\nconst noop = ()=>{};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nconst UNDEFINED = /*#__NOINLINE__*/ noop();\nconst OBJECT = Object;\nconst isUndefined = (v)=>v === UNDEFINED;\nconst isFunction = (v)=>typeof v == 'function';\nconst mergeObjects = (a, b)=>({\n        ...a,\n        ...b\n    });\nconst isPromiseLike = (x)=>isFunction(x.then);\n\nconst EMPTY_CACHE = {};\nconst INITIAL_CACHE = {};\nconst STR_UNDEFINED = 'undefined';\n// NOTE: Use the function to guarantee it's re-evaluated between jsdom and node runtime for tests.\nconst isWindowDefined = typeof window != STR_UNDEFINED;\nconst isDocumentDefined = typeof document != STR_UNDEFINED;\nconst isLegacyDeno = isWindowDefined && 'Deno' in window;\nconst hasRequestAnimationFrame = ()=>isWindowDefined && typeof window['requestAnimationFrame'] != STR_UNDEFINED;\nconst createCacheHelper = (cache, key)=>{\n    const state = SWRGlobalState.get(cache);\n    return [\n        // Getter\n        ()=>!isUndefined(key) && cache.get(key) || EMPTY_CACHE,\n        // Setter\n        (info)=>{\n            if (!isUndefined(key)) {\n                const prev = cache.get(key);\n                // Before writing to the store, we keep the value in the initial cache\n                // if it's not there yet.\n                if (!(key in INITIAL_CACHE)) {\n                    INITIAL_CACHE[key] = prev;\n                }\n                state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE);\n            }\n        },\n        // Subscriber\n        state[6],\n        // Get server cache snapshot\n        ()=>{\n            if (!isUndefined(key)) {\n                // If the cache was updated on the client, we return the stored initial value.\n                if (key in INITIAL_CACHE) return INITIAL_CACHE[key];\n            }\n            // If we haven't done any client-side updates, we return the current value.\n            return !isUndefined(key) && cache.get(key) || EMPTY_CACHE;\n        }\n    ];\n} // export { UNDEFINED, OBJECT, isUndefined, isFunction, mergeObjects, isPromiseLike }\n;\n\n/**\n * Due to the bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a workaround, we always assume it's online on the first load, and change\n * the status upon `online` or `offline` events.\n */ let online = true;\nconst isOnline = ()=>online;\n// For node and React Native, `add/removeEventListener` doesn't exist on window.\nconst [onWindowEvent, offWindowEvent] = isWindowDefined && window.addEventListener ? [\n    window.addEventListener.bind(window),\n    window.removeEventListener.bind(window)\n] : [\n    noop,\n    noop\n];\nconst isVisible = ()=>{\n    const visibilityState = isDocumentDefined && document.visibilityState;\n    return isUndefined(visibilityState) || visibilityState !== 'hidden';\n};\nconst initFocus = (callback)=>{\n    // focus revalidate\n    if (isDocumentDefined) {\n        document.addEventListener('visibilitychange', callback);\n    }\n    onWindowEvent('focus', callback);\n    return ()=>{\n        if (isDocumentDefined) {\n            document.removeEventListener('visibilitychange', callback);\n        }\n        offWindowEvent('focus', callback);\n    };\n};\nconst initReconnect = (callback)=>{\n    // revalidate on reconnected\n    const onOnline = ()=>{\n        online = true;\n        callback();\n    };\n    // nothing to revalidate, just update the status\n    const onOffline = ()=>{\n        online = false;\n    };\n    onWindowEvent('online', onOnline);\n    onWindowEvent('offline', onOffline);\n    return ()=>{\n        offWindowEvent('online', onOnline);\n        offWindowEvent('offline', onOffline);\n    };\n};\nconst preset = {\n    isOnline,\n    isVisible\n};\nconst defaultConfigOptions = {\n    initFocus,\n    initReconnect\n};\n\nconst IS_REACT_LEGACY = !React__default.default.useId;\nconst IS_SERVER = !isWindowDefined || isLegacyDeno;\n// Polyfill requestAnimationFrame\nconst rAF = (f)=>hasRequestAnimationFrame() ? window['requestAnimationFrame'](f) : setTimeout(f, 1);\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? React.useEffect : React.useLayoutEffect;\n// This assignment is to extend the Navigator type to use effectiveType.\nconst navigatorConnection = typeof navigator !== 'undefined' && navigator.connection;\n// Adjust the config based on slow connection status (<= 70Kbps).\nconst slowConnection = !IS_SERVER && navigatorConnection && ([\n    'slow-2g',\n    '2g'\n].includes(navigatorConnection.effectiveType) || navigatorConnection.saveData);\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\nconst isObjectType = (value, type)=>OBJECT.prototype.toString.call(value) === `[object ${type}]`;\n// counter of the key\nlet counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nconst stableHash = (arg)=>{\n    const type = typeof arg;\n    const isDate = isObjectType(arg, 'Date');\n    const isRegex = isObjectType(arg, 'RegExp');\n    const isPlainObject = isObjectType(arg, 'Object');\n    let result;\n    let index;\n    if (OBJECT(arg) === arg && !isDate && !isRegex) {\n        // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n        // If it's already hashed, directly return the result.\n        result = table.get(arg);\n        if (result) return result;\n        // Store the hash first for circular reference detection before entering the\n        // recursive `stableHash` calls.\n        // For other objects like set and map, we use this id directly as the hash.\n        result = ++counter + '~';\n        table.set(arg, result);\n        if (Array.isArray(arg)) {\n            // Array.\n            result = '@';\n            for(index = 0; index < arg.length; index++){\n                result += stableHash(arg[index]) + ',';\n            }\n            table.set(arg, result);\n        }\n        if (isPlainObject) {\n            // Object, sort keys.\n            result = '#';\n            const keys = OBJECT.keys(arg).sort();\n            while(!isUndefined(index = keys.pop())){\n                if (!isUndefined(arg[index])) {\n                    result += index + ':' + stableHash(arg[index]) + ',';\n                }\n            }\n            table.set(arg, result);\n        }\n    } else {\n        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n    }\n    return result;\n};\n\nconst serialize = (key)=>{\n    if (isFunction(key)) {\n        try {\n            key = key();\n        } catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    // Use the original key as the argument of fetcher. This can be a string or an\n    // array of values.\n    const args = key;\n    // If key is not falsy, or not an empty array, hash it.\n    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n    return [\n        key,\n        args\n    ];\n};\n\n// Global timestamp.\nlet __timestamp = 0;\nconst getTimestamp = ()=>++__timestamp;\n\nasync function internalMutate(...args) {\n    const [cache, _key, _data, _opts] = args;\n    // When passing as a boolean, it's explicitly used to disable/enable\n    // revalidation.\n    const options = mergeObjects({\n        populateCache: true,\n        throwOnError: true\n    }, typeof _opts === 'boolean' ? {\n        revalidate: _opts\n    } : _opts || {});\n    let populateCache = options.populateCache;\n    const rollbackOnErrorOption = options.rollbackOnError;\n    let optimisticData = options.optimisticData;\n    const rollbackOnError = (error)=>{\n        return typeof rollbackOnErrorOption === 'function' ? rollbackOnErrorOption(error) : rollbackOnErrorOption !== false;\n    };\n    const throwOnError = options.throwOnError;\n    // If the second argument is a key filter, return the mutation results for all\n    // filtered keys.\n    if (isFunction(_key)) {\n        const keyFilter = _key;\n        const matchedKeys = [];\n        const it = cache.keys();\n        for (const key of it){\n            if (// Skip the special useSWRInfinite and useSWRSubscription keys.\n            !/^\\$(inf|sub)\\$/.test(key) && keyFilter(cache.get(key)._k)) {\n                matchedKeys.push(key);\n            }\n        }\n        return Promise.all(matchedKeys.map(mutateByKey));\n    }\n    return mutateByKey(_key);\n    async function mutateByKey(_k) {\n        // Serialize key\n        const [key] = serialize(_k);\n        if (!key) return;\n        const [get, set] = createCacheHelper(cache, key);\n        const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n        const startRevalidate = ()=>{\n            const revalidators = EVENT_REVALIDATORS[key];\n            const revalidate = isFunction(options.revalidate) ? options.revalidate(get().data, _k) : options.revalidate !== false;\n            if (revalidate) {\n                // Invalidate the key by deleting the concurrent request markers so new\n                // requests will not be deduped.\n                delete FETCH[key];\n                delete PRELOAD[key];\n                if (revalidators && revalidators[0]) {\n                    return revalidators[0](revalidateEvents__namespace.MUTATE_EVENT).then(()=>get().data);\n                }\n            }\n            return get().data;\n        };\n        // If there is no new data provided, revalidate the key with current state.\n        if (args.length < 3) {\n            // Revalidate and broadcast state.\n            return startRevalidate();\n        }\n        let data = _data;\n        let error;\n        // Update global timestamps.\n        const beforeMutationTs = getTimestamp();\n        MUTATION[key] = [\n            beforeMutationTs,\n            0\n        ];\n        const hasOptimisticData = !isUndefined(optimisticData);\n        const state = get();\n        // `displayedData` is the current value on screen. It could be the optimistic value\n        // that is going to be overridden by a `committedData`, or get reverted back.\n        // `committedData` is the validated value that comes from a fetch or mutation.\n        const displayedData = state.data;\n        const currentData = state._c;\n        const committedData = isUndefined(currentData) ? displayedData : currentData;\n        // Do optimistic data update.\n        if (hasOptimisticData) {\n            optimisticData = isFunction(optimisticData) ? optimisticData(committedData, displayedData) : optimisticData;\n            // When we set optimistic data, backup the current committedData data in `_c`.\n            set({\n                data: optimisticData,\n                _c: committedData\n            });\n        }\n        if (isFunction(data)) {\n            // `data` is a function, call it passing current cache value.\n            try {\n                data = data(committedData);\n            } catch (err) {\n                // If it throws an error synchronously, we shouldn't update the cache.\n                error = err;\n            }\n        }\n        // `data` is a promise/thenable, resolve the final data first.\n        if (data && isPromiseLike(data)) {\n            // This means that the mutation is async, we need to check timestamps to\n            // avoid race conditions.\n            data = await data.catch((err)=>{\n                error = err;\n            });\n            // Check if other mutations have occurred since we've started this mutation.\n            // If there's a race we don't update cache or broadcast the change,\n            // just return the data.\n            if (beforeMutationTs !== MUTATION[key][0]) {\n                if (error) throw error;\n                return data;\n            } else if (error && hasOptimisticData && rollbackOnError(error)) {\n                // Rollback. Always populate the cache in this case but without\n                // transforming the data.\n                populateCache = true;\n                // Reset data to be the latest committed data, and clear the `_c` value.\n                set({\n                    data: committedData,\n                    _c: UNDEFINED\n                });\n            }\n        }\n        // If we should write back the cache after request.\n        if (populateCache) {\n            if (!error) {\n                // Transform the result into data.\n                if (isFunction(populateCache)) {\n                    const populateCachedData = populateCache(data, committedData);\n                    set({\n                        data: populateCachedData,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                } else {\n                    // Only update cached data and reset the error if there's no error. Data can be `undefined` here.\n                    set({\n                        data,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                }\n            }\n        }\n        // Reset the timestamp to mark the mutation has ended.\n        MUTATION[key][1] = getTimestamp();\n        // Update existing SWR Hooks' internal states:\n        Promise.resolve(startRevalidate()).then(()=>{\n            // The mutation and revalidation are ended, we can clear it since the data is\n            // not an optimistic value anymore.\n            set({\n                _c: UNDEFINED\n            });\n        });\n        // Throw error or return data\n        if (error) {\n            if (throwOnError) throw error;\n            return;\n        }\n        return data;\n    }\n}\n\nconst revalidateAllKeys = (revalidators, type)=>{\n    for(const key in revalidators){\n        if (revalidators[key][0]) revalidators[key][0](type);\n    }\n};\nconst initCache = (provider, options)=>{\n    // The global state for a specific provider will be used to deduplicate\n    // requests and store listeners. As well as a mutate function that is bound to\n    // the cache.\n    // The provider's global state might be already initialized. Let's try to get the\n    // global state associated with the provider first.\n    if (!SWRGlobalState.has(provider)) {\n        const opts = mergeObjects(defaultConfigOptions, options);\n        // If there's no global state bound to the provider, create a new one with the\n        // new mutate function.\n        const EVENT_REVALIDATORS = Object.create(null);\n        const mutate = internalMutate.bind(UNDEFINED, provider);\n        let unmount = noop;\n        const subscriptions = Object.create(null);\n        const subscribe = (key, callback)=>{\n            const subs = subscriptions[key] || [];\n            subscriptions[key] = subs;\n            subs.push(callback);\n            return ()=>subs.splice(subs.indexOf(callback), 1);\n        };\n        const setter = (key, value, prev)=>{\n            provider.set(key, value);\n            const subs = subscriptions[key];\n            if (subs) {\n                for (const fn of subs){\n                    fn(value, prev);\n                }\n            }\n        };\n        const initProvider = ()=>{\n            if (!SWRGlobalState.has(provider)) {\n                // Update the state if it's new, or if the provider has been extended.\n                SWRGlobalState.set(provider, [\n                    EVENT_REVALIDATORS,\n                    Object.create(null),\n                    Object.create(null),\n                    Object.create(null),\n                    mutate,\n                    setter,\n                    subscribe\n                ]);\n                if (!IS_SERVER) {\n                    // When listening to the native events for auto revalidations,\n                    // we intentionally put a delay (setTimeout) here to make sure they are\n                    // fired after immediate JavaScript executions, which can be\n                    // React's state updates.\n                    // This avoids some unnecessary revalidations such as\n                    // https://github.com/vercel/swr/issues/1680.\n                    const releaseFocus = opts.initFocus(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, revalidateEvents__namespace.FOCUS_EVENT)));\n                    const releaseReconnect = opts.initReconnect(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, revalidateEvents__namespace.RECONNECT_EVENT)));\n                    unmount = ()=>{\n                        releaseFocus && releaseFocus();\n                        releaseReconnect && releaseReconnect();\n                        // When un-mounting, we need to remove the cache provider from the state\n                        // storage too because it's a side-effect. Otherwise, when re-mounting we\n                        // will not re-register those event listeners.\n                        SWRGlobalState.delete(provider);\n                    };\n                }\n            }\n        };\n        initProvider();\n        // This is a new provider, we need to initialize it and setup DOM events\n        // listeners for `focus` and `reconnect` actions.\n        // We might want to inject an extra layer on top of `provider` in the future,\n        // such as key serialization, auto GC, etc.\n        // For now, it's just a `Map` interface without any modifications.\n        return [\n            provider,\n            mutate,\n            initProvider,\n            unmount\n        ];\n    }\n    return [\n        provider,\n        SWRGlobalState.get(provider)[4]\n    ];\n};\n\n// error retry\nconst onErrorRetry = (_, __, config, revalidate, opts)=>{\n    const maxRetryCount = config.errorRetryCount;\n    const currentRetryCount = opts.retryCount;\n    // Exponential backoff\n    const timeout = ~~((Math.random() + 0.5) * (1 << (currentRetryCount < 8 ? currentRetryCount : 8))) * config.errorRetryInterval;\n    if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {\n        return;\n    }\n    setTimeout(revalidate, timeout, opts);\n};\nconst compare = lite.dequal;\n// Default cache provider\nconst [cache, mutate] = initCache(new Map());\n// Default config\nconst defaultConfig = mergeObjects({\n    // events\n    onLoadingSlow: noop,\n    onSuccess: noop,\n    onError: noop,\n    onErrorRetry,\n    onDiscarded: noop,\n    // switches\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    revalidateIfStale: true,\n    shouldRetryOnError: true,\n    // timeouts\n    errorRetryInterval: slowConnection ? 10000 : 5000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: slowConnection ? 5000 : 3000,\n    // providers\n    compare,\n    isPaused: ()=>false,\n    cache,\n    mutate,\n    fallback: {}\n}, // use web preset by default\npreset);\n\nconst mergeConfigs = (a, b)=>{\n    // Need to create a new object to avoid mutating the original here.\n    const v = mergeObjects(a, b);\n    // If two configs are provided, merge their `use` and `fallback` options.\n    if (b) {\n        const { use: u1, fallback: f1 } = a;\n        const { use: u2, fallback: f2 } = b;\n        if (u1 && u2) {\n            v.use = u1.concat(u2);\n        }\n        if (f1 && f2) {\n            v.fallback = mergeObjects(f1, f2);\n        }\n    }\n    return v;\n};\n\nconst SWRConfigContext = React.createContext({});\nconst SWRConfig = (props)=>{\n    const { value } = props;\n    const parentConfig = React.useContext(SWRConfigContext);\n    const isFunctionalConfig = isFunction(value);\n    const config = React.useMemo(()=>isFunctionalConfig ? value(parentConfig) : value, [\n        isFunctionalConfig,\n        parentConfig,\n        value\n    ]);\n    // Extend parent context values and middleware.\n    const extendedConfig = React.useMemo(()=>isFunctionalConfig ? config : mergeConfigs(parentConfig, config), [\n        isFunctionalConfig,\n        parentConfig,\n        config\n    ]);\n    // Should not use the inherited provider.\n    const provider = config && config.provider;\n    // initialize the cache only on first access.\n    const cacheContextRef = React.useRef(UNDEFINED);\n    if (provider && !cacheContextRef.current) {\n        cacheContextRef.current = initCache(provider(extendedConfig.cache || cache), config);\n    }\n    const cacheContext = cacheContextRef.current;\n    // Override the cache if a new provider is given.\n    if (cacheContext) {\n        extendedConfig.cache = cacheContext[0];\n        extendedConfig.mutate = cacheContext[1];\n    }\n    // Unsubscribe events.\n    useIsomorphicLayoutEffect(()=>{\n        if (cacheContext) {\n            cacheContext[2] && cacheContext[2]();\n            return cacheContext[3];\n        }\n    }, []);\n    return React.createElement(SWRConfigContext.Provider, mergeObjects(props, {\n        value: extendedConfig\n    }));\n};\n\nexports.IS_REACT_LEGACY = IS_REACT_LEGACY;\nexports.IS_SERVER = IS_SERVER;\nexports.OBJECT = OBJECT;\nexports.SWRConfig = SWRConfig;\nexports.SWRConfigContext = SWRConfigContext;\nexports.SWRGlobalState = SWRGlobalState;\nexports.UNDEFINED = UNDEFINED;\nexports.cache = cache;\nexports.compare = compare;\nexports.createCacheHelper = createCacheHelper;\nexports.defaultConfig = defaultConfig;\nexports.defaultConfigOptions = defaultConfigOptions;\nexports.getTimestamp = getTimestamp;\nexports.hasRequestAnimationFrame = hasRequestAnimationFrame;\nexports.initCache = initCache;\nexports.internalMutate = internalMutate;\nexports.isDocumentDefined = isDocumentDefined;\nexports.isFunction = isFunction;\nexports.isLegacyDeno = isLegacyDeno;\nexports.isPromiseLike = isPromiseLike;\nexports.isUndefined = isUndefined;\nexports.isWindowDefined = isWindowDefined;\nexports.mergeConfigs = mergeConfigs;\nexports.mergeObjects = mergeObjects;\nexports.mutate = mutate;\nexports.noop = noop;\nexports.preset = preset;\nexports.rAF = rAF;\nexports.serialize = serialize;\nexports.slowConnection = slowConnection;\nexports.stableHash = stableHash;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;\n"],"names":["React","require","revalidateEvents","lite","_interopDefault","e","__esModule","default","_interopNamespace","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","React__default","revalidateEvents__namespace","SWRGlobalState","WeakMap","noop","UNDEFINED","OBJECT","isUndefined","v","isFunction","mergeObjects","a","b","isPromiseLike","x","then","EMPTY_CACHE","INITIAL_CACHE","STR_UNDEFINED","isWindowDefined","window","isDocumentDefined","document","isLegacyDeno","hasRequestAnimationFrame","createCacheHelper","cache","key","state","info","prev","online","isOnline","onWindowEvent","offWindowEvent","addEventListener","bind","removeEventListener","isVisible","visibilityState","initFocus","callback","initReconnect","onOnline","onOffline","preset","defaultConfigOptions","IS_REACT_LEGACY","useId","IS_SERVER","rAF","f","setTimeout","useIsomorphicLayoutEffect","useEffect","useLayoutEffect","navigatorConnection","navigator","connection","slowConnection","includes","effectiveType","saveData","table","isObjectType","value","type","prototype","toString","call","counter","stableHash","arg","isDate","isRegex","isPlainObject","result","index","set","Array","isArray","length","sort","pop","toJSON","JSON","stringify","serialize","err","args","__timestamp","getTimestamp","internalMutate","_key","_data","_opts","options","populateCache","throwOnError","revalidate","rollbackOnErrorOption","rollbackOnError","optimisticData","error","keyFilter","matchedKeys","it","test","_k","push","Promise","all","map","mutateByKey","EVENT_REVALIDATORS","MUTATION","FETCH","PRELOAD","startRevalidate","revalidators","data","MUTATE_EVENT","beforeMutationTs","hasOptimisticData","displayedData","currentData","_c","committedData","catch","populateCachedData","resolve","revalidateAllKeys","initCache","provider","has","opts","mutate","unmount","subscriptions","subscribe","subs","splice","indexOf","setter","fn","initProvider","releaseFocus","FOCUS_EVENT","releaseReconnect","RECONNECT_EVENT","delete","onErrorRetry","_","__","config","maxRetryCount","errorRetryCount","currentRetryCount","retryCount","timeout","Math","random","errorRetryInterval","compare","dequal","Map","defaultConfig","onLoadingSlow","onSuccess","onError","onDiscarded","revalidateOnFocus","revalidateOnReconnect","revalidateIfStale","shouldRetryOnError","focusThrottleInterval","dedupingInterval","loadingTimeout","isPaused","fallback","mergeConfigs","use","u1","f1","u2","f2","concat","SWRConfigContext","createContext","SWRConfig","props","parentConfig","useContext","isFunctionalConfig","useMemo","extendedConfig","cacheContextRef","useRef","current","cacheContext","createElement","Provider","exports"],"mappings":"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"}