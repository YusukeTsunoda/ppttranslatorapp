{"version":3,"file":"is-disabled.js","sources":["../sources/is-disabled.ts"],"sourcesContent":["import { getLocalName } from \"./getRole\";\n\nconst elementsSupportingDisabledAttribute = new Set([\n\t\"button\",\n\t\"fieldset\",\n\t\"input\",\n\t\"optgroup\",\n\t\"option\",\n\t\"select\",\n\t\"textarea\",\n]);\n\n/**\n * Check if an element is disabled\n * https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n * https://www.w3.org/TR/wai-aria-1.1/#aria-disabled\n *\n * @param element\n * @returns {boolean} true if disabled, otherwise false\n */\nexport function isDisabled(element: Element): boolean {\n\tconst localName = getLocalName(element);\n\treturn elementsSupportingDisabledAttribute.has(localName) &&\n\t\telement.hasAttribute(\"disabled\")\n\t\t? true\n\t\t: element.getAttribute(\"aria-disabled\") === \"true\";\n}\n"],"names":["_getRole","require","elementsSupportingDisabledAttribute","Set","isDisabled","element","localName","getLocalName","has","hasAttribute","getAttribute"],"mappings":";;;AAAA,IAAAA,QAAA,GAAAC,OAAA,CAAA;AAEA,IAAMC,mCAAmC,GAAG,IAAIC,GAAG,CAAC;IACnD,QAAQ;IACR,UAAU;IACV,OAAO;IACP,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,UAAU;CACV,CAAC;AAEF;;;;;;;CAOA,GACO,SAASC,UAAUA,CAACC,OAAgB,EAAW;IACrD,IAAMC,SAAS,GAAG,CAAA,GAAAC,SAAAA,YAAAA,AAAY,EAACF,OAAO,CAAC;IACvC,OAAOH,mCAAmC,CAACM,GAAG,CAACF,SAAS,CAAC,IACxDD,OAAO,CAACI,YAAY,CAAC,UAAU,CAAC,GAC9B,IAAI,GACJJ,OAAO,CAACK,YAAY,CAAC,eAAe,CAAC,KAAK,MAAM;AACpD"}