{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/4-test-automation/lib/utils/error-handler.ts"],"sourcesContent":["import { toast } from '@/components/ui/use-toast';\n\n// エラーの種類\nexport type ErrorType = 'AUTH' | 'VALIDATION' | 'SERVER' | 'NETWORK' | 'NOT_FOUND' | 'PERMISSION' | 'UNKNOWN';\n\n// エラーの詳細情報\nexport interface ErrorDetails {\n  type: ErrorType;\n  message: string;\n  code?: string;\n  context?: Record<string, any>;\n  originalError?: Error;\n}\n\n// カスタムエラークラス\nexport class AppError extends Error {\n  type: ErrorType;\n  code?: string;\n  context?: Record<string, any>;\n  originalError?: Error;\n\n  constructor(details: ErrorDetails) {\n    super(details.message);\n    Object.setPrototypeOf(this, AppError.prototype);\n    this.name = 'AppError';\n    this.type = details.type;\n    this.code = details.code;\n    this.context = details.context;\n    this.originalError = details.originalError;\n  }\n}\n\nexport const ErrorCodes = {\n  UNAUTHORIZED: 'UNAUTHORIZED',\n  FORBIDDEN: 'FORBIDDEN',\n  NOT_FOUND: 'NOT_FOUND',\n  VALIDATION_ERROR: 'VALIDATION_ERROR',\n  RATE_LIMIT_EXCEEDED: 'RATE_LIMIT_EXCEEDED',\n  DATABASE_ERROR: 'DATABASE_ERROR',\n  API_ERROR: 'API_ERROR',\n  NETWORK_ERROR: 'NETWORK_ERROR',\n  UNKNOWN_ERROR: 'UNKNOWN_ERROR',\n} as const;\n\nexport type ErrorCode = (typeof ErrorCodes)[keyof typeof ErrorCodes];\n\nexport function isAppError(error: unknown): error is AppError {\n  return error instanceof AppError;\n}\n\nexport function handleError(error: unknown): AppError {\n  if (isAppError(error)) {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    // ネットワークエラーの検出\n    if (error.name === 'NetworkError' || error.message.includes('network')) {\n      return new AppError({\n        type: 'NETWORK',\n        message: 'ネットワークエラーが発生しました。インターネット接続を確認してください。',\n        originalError: error,\n      });\n    }\n\n    // データベースエラーの検出\n    if (error.message.includes('prisma') || error.message.includes('database')) {\n      return new AppError({\n        type: 'SERVER',\n        message: 'データベースエラーが発生しました。しばらく待ってから再試行してください。',\n        code: ErrorCodes.DATABASE_ERROR,\n        originalError: error,\n      });\n    }\n\n    // API関連エラーの検出\n    if (error.message.includes('api') || error.message.includes('status')) {\n      return new AppError({\n        type: 'SERVER',\n        message: 'APIエラーが発生しました。しばらく待ってから再試行してください。',\n        code: ErrorCodes.API_ERROR,\n        originalError: error,\n      });\n    }\n  }\n\n  // 不明なエラー\n  return new AppError({\n    type: 'UNKNOWN',\n    message: '予期せぬエラーが発生しました。しばらく待ってから再試行してください。',\n    code: ErrorCodes.UNKNOWN_ERROR,\n  });\n}\n\nexport function getErrorMessage(error: unknown): string {\n  if (error instanceof Error && error.message) {\n    return error.message;\n  }\n  return 'Unknown error occurred';\n}\n\n// バリデーションエラーの作成\nexport function createValidationError(message: string, context?: Record<string, any>): AppError {\n  return new AppError({\n    type: 'VALIDATION',\n    message,\n    code: ErrorCodes.VALIDATION_ERROR,\n    context,\n  });\n}\n\n// 認証エラーの作成\nexport function createAuthError(message: string, code?: string, context?: Record<string, any>): AppError {\n  return new AppError({\n    type: 'AUTH',\n    message,\n    code,\n    context,\n  });\n}\n\n// 権限エラーの作成\nexport function createForbiddenError(message = 'この操作を実行する権限がありません。'): AppError {\n  return new AppError({\n    type: 'PERMISSION',\n    message,\n    code: ErrorCodes.FORBIDDEN,\n  });\n}\n\n// 未検出エラーの作成\nexport function createNotFoundError(message: string): AppError {\n  return new AppError({\n    type: 'NOT_FOUND',\n    message,\n    code: ErrorCodes.NOT_FOUND,\n  });\n}\n\n// レート制限エラーの作成\nexport function createRateLimitError(\n  message = 'リクエスト制限を超えました。しばらく待ってから再試行してください。',\n): AppError {\n  return new AppError({\n    type: 'SERVER',\n    message,\n    code: ErrorCodes.RATE_LIMIT_EXCEEDED,\n  });\n}\n\n// データベースエラーの作成\nexport function createDatabaseError(message: string, originalError?: Error): AppError {\n  return new AppError({\n    type: 'SERVER',\n    message,\n    code: ErrorCodes.DATABASE_ERROR,\n    originalError,\n  });\n}\n\n// セッションエラーをAppErrorに変換\nexport function mapSessionErrorToAppError(sessionError: SessionError, message: string): AppError {\n  switch (sessionError) {\n    case 'EXPIRED':\n      return createAuthError('セッションの有効期限が切れました', 'SESSION_EXPIRED');\n    case 'INVALID':\n      return createAuthError('無効なセッションです', 'SESSION_INVALID');\n    case 'UNAUTHORIZED':\n      return createAuthError('認証が必要です', 'UNAUTHORIZED');\n    case 'NETWORK':\n      return new AppError({\n        type: 'NETWORK',\n        message: 'ネットワークエラーが発生しました',\n        originalError: new Error(message),\n      });\n    default:\n      return createAuthError(message, 'AUTH_ERROR');\n  }\n}\n\n// エラーハンドリング関数（クライアント側）\nexport function handleClientError(error: unknown, defaultMessage = '予期しないエラーが発生しました'): void {\n  console.error('Client error:', error);\n\n  let errorMessage = defaultMessage;\n  let errorType: 'default' | 'destructive' = 'destructive';\n\n  if (error instanceof AppError) {\n    errorMessage = error.message;\n\n    // エラータイプに応じた処理\n    switch (error.type) {\n      case 'AUTH':\n        // 認証エラーの場合はリダイレクトなどの処理を追加できる\n        break;\n      case 'VALIDATION':\n        // バリデーションエラーは警告として表示\n        errorType = 'default';\n        break;\n      case 'NETWORK':\n        // ネットワークエラーの場合は再試行オプションを提供できる\n        break;\n      default:\n        break;\n    }\n  } else if (error instanceof Error) {\n    errorMessage = error.message;\n  }\n\n  // トースト通知\n  toast({\n    title: 'エラー',\n    description: errorMessage,\n    variant: errorType,\n  });\n}\n\n// エラーハンドリング関数（API側）\nexport function handleApiError(\n  error: unknown,\n  defaultMessage = 'Internal Server Error',\n): {\n  error: string;\n  code?: string;\n  status: number;\n} {\n  console.error('API error:', error);\n\n  if (error instanceof AppError) {\n    // エラータイプに応じたステータスコードを設定\n    let status = 500;\n\n    switch (error.type) {\n      case 'AUTH':\n        status = 401;\n        break;\n      case 'VALIDATION':\n        status = 400;\n        break;\n      case 'NOT_FOUND':\n        status = 404;\n        break;\n      case 'PERMISSION':\n        status = 403;\n        break;\n      case 'NETWORK':\n        status = 502;\n        break;\n      default:\n        status = 500;\n    }\n\n    return {\n      error: error.message,\n      code: error.code,\n      status,\n    };\n  }\n\n  if (error instanceof Error) {\n    return {\n      error: error.message,\n      status: 500,\n    };\n  }\n\n  return {\n    error: defaultMessage,\n    status: 500,\n  };\n}\n\n// セッションエラーの種類\nexport type SessionError = 'EXPIRED' | 'INVALID' | 'NETWORK' | 'UNAUTHORIZED' | 'UNKNOWN';\n"],"names":["AppError","ErrorCodes","createAuthError","createDatabaseError","createForbiddenError","createNotFoundError","createRateLimitError","createValidationError","getErrorMessage","handleApiError","handleClientError","handleError","isAppError","mapSessionErrorToAppError","Error","type","code","context","originalError","constructor","details","message","Object","setPrototypeOf","prototype","name","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","VALIDATION_ERROR","RATE_LIMIT_EXCEEDED","DATABASE_ERROR","API_ERROR","NETWORK_ERROR","UNKNOWN_ERROR","error","includes","sessionError","defaultMessage","console","errorMessage","errorType","toast","title","description","variant","status"],"mappings":"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"}