{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/query-helpers.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildQueries = buildQueries;\nexports.getElementError = getElementError;\nexports.getMultipleElementsFoundError = getMultipleElementsFoundError;\nexports.makeFindQuery = makeFindQuery;\nexports.makeGetAllQuery = makeGetAllQuery;\nexports.makeSingleQuery = makeSingleQuery;\nexports.queryAllByAttribute = queryAllByAttribute;\nexports.queryByAttribute = queryByAttribute;\nexports.wrapSingleQueryWithSuggestion = exports.wrapAllByQueryWithSuggestion = void 0;\nvar _suggestions = require(\"./suggestions\");\nvar _matches = require(\"./matches\");\nvar _waitFor = require(\"./wait-for\");\nvar _config = require(\"./config\");\nfunction getElementError(message, container) {\n  return (0, _config.getConfig)().getElementError(message, container);\n}\nfunction getMultipleElementsFoundError(message, container) {\n  return getElementError(`${message}\\n\\n(If this is intentional, then use the \\`*AllBy*\\` variant of the query (like \\`queryAllByText\\`, \\`getAllByText\\`, or \\`findAllByText\\`)).`, container);\n}\nfunction queryAllByAttribute(attribute, container, text, {\n  exact = true,\n  collapseWhitespace,\n  trim,\n  normalizer\n} = {}) {\n  const matcher = exact ? _matches.matches : _matches.fuzzyMatches;\n  const matchNormalizer = (0, _matches.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  return Array.from(container.querySelectorAll(`[${attribute}]`)).filter(node => matcher(node.getAttribute(attribute), node, text, matchNormalizer));\n}\nfunction queryByAttribute(attribute, container, text, options) {\n  const els = queryAllByAttribute(attribute, container, text, options);\n  if (els.length > 1) {\n    throw getMultipleElementsFoundError(`Found multiple elements by [${attribute}=${text}]`, container);\n  }\n  return els[0] || null;\n}\n\n// this accepts a query function and returns a function which throws an error\n// if more than one elements is returned, otherwise it returns the first\n// element or null\nfunction makeSingleQuery(allQuery, getMultipleError) {\n  return (container, ...args) => {\n    const els = allQuery(container, ...args);\n    if (els.length > 1) {\n      const elementStrings = els.map(element => getElementError(null, element).message).join('\\n\\n');\n      throw getMultipleElementsFoundError(`${getMultipleError(container, ...args)}\n\nHere are the matching elements:\n\n${elementStrings}`, container);\n    }\n    return els[0] || null;\n  };\n}\nfunction getSuggestionError(suggestion, container) {\n  return (0, _config.getConfig)().getElementError(`A better query is available, try this:\n${suggestion.toString()}\n`, container);\n}\n\n// this accepts a query function and returns a function which throws an error\n// if an empty list of elements is returned\nfunction makeGetAllQuery(allQuery, getMissingError) {\n  return (container, ...args) => {\n    const els = allQuery(container, ...args);\n    if (!els.length) {\n      throw (0, _config.getConfig)().getElementError(getMissingError(container, ...args), container);\n    }\n    return els;\n  };\n}\n\n// this accepts a getter query function and returns a function which calls\n// waitFor and passing a function which invokes the getter.\nfunction makeFindQuery(getter) {\n  return (container, text, options, waitForOptions) => {\n    return (0, _waitFor.waitFor)(() => {\n      return getter(container, text, options);\n    }, {\n      container,\n      ...waitForOptions\n    });\n  };\n}\nconst wrapSingleQueryWithSuggestion = (query, queryAllByName, variant) => (container, ...args) => {\n  const element = query(container, ...args);\n  const [{\n    suggest = (0, _config.getConfig)().throwSuggestions\n  } = {}] = args.slice(-1);\n  if (element && suggest) {\n    const suggestion = (0, _suggestions.getSuggestedQuery)(element, variant);\n    if (suggestion && !queryAllByName.endsWith(suggestion.queryName)) {\n      throw getSuggestionError(suggestion.toString(), container);\n    }\n  }\n  return element;\n};\nexports.wrapSingleQueryWithSuggestion = wrapSingleQueryWithSuggestion;\nconst wrapAllByQueryWithSuggestion = (query, queryAllByName, variant) => (container, ...args) => {\n  const els = query(container, ...args);\n  const [{\n    suggest = (0, _config.getConfig)().throwSuggestions\n  } = {}] = args.slice(-1);\n  if (els.length && suggest) {\n    // get a unique list of all suggestion messages.  We are only going to make a suggestion if\n    // all the suggestions are the same\n    const uniqueSuggestionMessages = [...new Set(els.map(element => {\n      var _getSuggestedQuery;\n      return (_getSuggestedQuery = (0, _suggestions.getSuggestedQuery)(element, variant)) == null ? void 0 : _getSuggestedQuery.toString();\n    }))];\n    if (\n    // only want to suggest if all the els have the same suggestion.\n    uniqueSuggestionMessages.length === 1 && !queryAllByName.endsWith(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- TODO: Can this be null at runtime?\n    (0, _suggestions.getSuggestedQuery)(els[0], variant).queryName)) {\n      throw getSuggestionError(uniqueSuggestionMessages[0], container);\n    }\n  }\n  return els;\n};\n\n// TODO: This deviates from the published declarations\n// However, the implementation always required a dyadic (after `container`) not variadic `queryAllBy` considering the implementation of `makeFindQuery`\n// This is at least statically true and can be verified by accepting `QueryMethod<Arguments, HTMLElement[]>`\nexports.wrapAllByQueryWithSuggestion = wrapAllByQueryWithSuggestion;\nfunction buildQueries(queryAllBy, getMultipleError, getMissingError) {\n  const queryBy = wrapSingleQueryWithSuggestion(makeSingleQuery(queryAllBy, getMultipleError), queryAllBy.name, 'query');\n  const getAllBy = makeGetAllQuery(queryAllBy, getMissingError);\n  const getBy = makeSingleQuery(getAllBy, getMultipleError);\n  const getByWithSuggestions = wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, 'get');\n  const getAllWithSuggestions = wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name.replace('query', 'get'), 'getAll');\n  const findAllBy = makeFindQuery(wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name, 'findAll'));\n  const findBy = makeFindQuery(wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, 'find'));\n  return [queryBy, getAllWithSuggestions, getByWithSuggestions, findAllBy, findBy];\n}"],"names":["Object","defineProperty","exports","value","buildQueries","getElementError","getMultipleElementsFoundError","makeFindQuery","makeGetAllQuery","makeSingleQuery","queryAllByAttribute","queryByAttribute","wrapSingleQueryWithSuggestion","wrapAllByQueryWithSuggestion","_suggestions","require","_matches","_waitFor","_config","message","container","getConfig","attribute","text","exact","collapseWhitespace","trim","normalizer","matcher","matches","fuzzyMatches","matchNormalizer","makeNormalizer","Array","from","querySelectorAll","filter","node","getAttribute","options","els","length","allQuery","getMultipleError","args","elementStrings","map","element","join","getSuggestionError","suggestion","toString","getMissingError","getter","waitForOptions","waitFor","query","queryAllByName","variant","suggest","throwSuggestions","slice","getSuggestedQuery","endsWith","queryName","uniqueSuggestionMessages","Set","_getSuggestedQuery","queryAllBy","queryBy","name","getAllBy","getBy","getByWithSuggestions","getAllWithSuggestions","replace","findAllBy","findBy"],"mappings":"AAAA;AAEAA,OAAOC,cAAc,CAACC,SAAS,cAAc;IAC3CC,OAAO;AACT;AACAD,QAAQE,YAAY,GAAGA;AACvBF,QAAQG,eAAe,GAAGA;AAC1BH,QAAQI,6BAA6B,GAAGA;AACxCJ,QAAQK,aAAa,GAAGA;AACxBL,QAAQM,eAAe,GAAGA;AAC1BN,QAAQO,eAAe,GAAGA;AAC1BP,QAAQQ,mBAAmB,GAAGA;AAC9BR,QAAQS,gBAAgB,GAAGA;AAC3BT,QAAQU,6BAA6B,GAAGV,QAAQW,4BAA4B,GAAG,KAAK;AACpF,IAAIC,eAAeC,QAAQ;AAC3B,IAAIC,WAAWD,QAAQ;AACvB,IAAIE,WAAWF,QAAQ;AACvB,IAAIG,UAAUH,QAAQ;AACtB,SAASV,gBAAgBc,OAAO,EAAEC,SAAS;IACzC,OAAO,AAAC,CAAA,GAAGF,QAAQG,SAAS,AAAD,IAAKhB,eAAe,CAACc,SAASC;AAC3D;AACA,SAASd,8BAA8Ba,OAAO,EAAEC,SAAS;IACvD,OAAOf,gBAAgB,GAAGc,QAAQ,8IAA8I,CAAC,EAAEC;AACrL;AACA,SAASV,oBAAoBY,SAAS,EAAEF,SAAS,EAAEG,IAAI,EAAE,EACvDC,QAAQ,IAAI,EACZC,kBAAkB,EAClBC,IAAI,EACJC,UAAU,EACX,GAAG,CAAC,CAAC;IACJ,MAAMC,UAAUJ,QAAQR,SAASa,OAAO,GAAGb,SAASc,YAAY;IAChE,MAAMC,kBAAkB,AAAC,CAAA,GAAGf,SAASgB,cAAc,AAAD,EAAG;QACnDP;QACAC;QACAC;IACF;IACA,OAAOM,MAAMC,IAAI,CAACd,UAAUe,gBAAgB,CAAC,CAAC,CAAC,EAAEb,UAAU,CAAC,CAAC,GAAGc,MAAM,CAACC,CAAAA,OAAQT,QAAQS,KAAKC,YAAY,CAAChB,YAAYe,MAAMd,MAAMQ;AACnI;AACA,SAASpB,iBAAiBW,SAAS,EAAEF,SAAS,EAAEG,IAAI,EAAEgB,OAAO;IAC3D,MAAMC,MAAM9B,oBAAoBY,WAAWF,WAAWG,MAAMgB;IAC5D,IAAIC,IAAIC,MAAM,GAAG,GAAG;QAClB,MAAMnC,8BAA8B,CAAC,4BAA4B,EAAEgB,UAAU,CAAC,EAAEC,KAAK,CAAC,CAAC,EAAEH;IAC3F;IACA,OAAOoB,GAAG,CAAC,EAAE,IAAI;AACnB;AAEA,6EAA6E;AAC7E,wEAAwE;AACxE,kBAAkB;AAClB,SAAS/B,gBAAgBiC,QAAQ,EAAEC,gBAAgB;IACjD,OAAO,CAACvB,WAAW,GAAGwB;QACpB,MAAMJ,MAAME,SAAStB,cAAcwB;QACnC,IAAIJ,IAAIC,MAAM,GAAG,GAAG;YAClB,MAAMI,iBAAiBL,IAAIM,GAAG,CAACC,CAAAA,UAAW1C,gBAAgB,MAAM0C,SAAS5B,OAAO,EAAE6B,IAAI,CAAC;YACvF,MAAM1C,8BAA8B,GAAGqC,iBAAiBvB,cAAcwB,MAAM;;;;AAIlF,EAAEC,gBAAgB,EAAEzB;QAChB;QACA,OAAOoB,GAAG,CAAC,EAAE,IAAI;IACnB;AACF;AACA,SAASS,mBAAmBC,UAAU,EAAE9B,SAAS;IAC/C,OAAO,AAAC,CAAA,GAAGF,QAAQG,SAAS,AAAD,IAAKhB,eAAe,CAAC,CAAC;AACnD,EAAE6C,WAAWC,QAAQ,GAAG;AACxB,CAAC,EAAE/B;AACH;AAEA,6EAA6E;AAC7E,2CAA2C;AAC3C,SAASZ,gBAAgBkC,QAAQ,EAAEU,eAAe;IAChD,OAAO,CAAChC,WAAW,GAAGwB;QACpB,MAAMJ,MAAME,SAAStB,cAAcwB;QACnC,IAAI,CAACJ,IAAIC,MAAM,EAAE;YACf,MAAM,AAAC,CAAA,GAAGvB,QAAQG,SAAS,AAAD,IAAKhB,eAAe,CAAC+C,gBAAgBhC,cAAcwB,OAAOxB;QACtF;QACA,OAAOoB;IACT;AACF;AAEA,0EAA0E;AAC1E,2DAA2D;AAC3D,SAASjC,cAAc8C,MAAM;IAC3B,OAAO,CAACjC,WAAWG,MAAMgB,SAASe;QAChC,OAAO,AAAC,CAAA,GAAGrC,SAASsC,OAAO,AAAD,EAAG;YAC3B,OAAOF,OAAOjC,WAAWG,MAAMgB;QACjC,GAAG;YACDnB;YACA,GAAGkC,cAAc;QACnB;IACF;AACF;AACA,MAAM1C,gCAAgC,CAAC4C,OAAOC,gBAAgBC,UAAY,CAACtC,WAAW,GAAGwB;QACvF,MAAMG,UAAUS,MAAMpC,cAAcwB;QACpC,MAAM,CAAC,EACLe,UAAU,AAAC,CAAA,GAAGzC,QAAQG,SAAS,AAAD,IAAKuC,gBAAgB,EACpD,GAAG,CAAC,CAAC,CAAC,GAAGhB,KAAKiB,KAAK,CAAC,CAAC;QACtB,IAAId,WAAWY,SAAS;YACtB,MAAMT,aAAa,AAAC,CAAA,GAAGpC,aAAagD,iBAAiB,AAAD,EAAGf,SAASW;YAChE,IAAIR,cAAc,CAACO,eAAeM,QAAQ,CAACb,WAAWc,SAAS,GAAG;gBAChE,MAAMf,mBAAmBC,WAAWC,QAAQ,IAAI/B;YAClD;QACF;QACA,OAAO2B;IACT;AACA7C,QAAQU,6BAA6B,GAAGA;AACxC,MAAMC,+BAA+B,CAAC2C,OAAOC,gBAAgBC,UAAY,CAACtC,WAAW,GAAGwB;QACtF,MAAMJ,MAAMgB,MAAMpC,cAAcwB;QAChC,MAAM,CAAC,EACLe,UAAU,AAAC,CAAA,GAAGzC,QAAQG,SAAS,AAAD,IAAKuC,gBAAgB,EACpD,GAAG,CAAC,CAAC,CAAC,GAAGhB,KAAKiB,KAAK,CAAC,CAAC;QACtB,IAAIrB,IAAIC,MAAM,IAAIkB,SAAS;YACzB,2FAA2F;YAC3F,mCAAmC;YACnC,MAAMM,2BAA2B;mBAAI,IAAIC,IAAI1B,IAAIM,GAAG,CAACC,CAAAA;oBACnD,IAAIoB;oBACJ,OAAO,AAACA,CAAAA,qBAAqB,AAAC,CAAA,GAAGrD,aAAagD,iBAAiB,AAAD,EAAGf,SAASW,QAAO,KAAM,OAAO,KAAK,IAAIS,mBAAmBhB,QAAQ;gBACpI;aAAI;YACJ,IACA,gEAAgE;YAChEc,yBAAyBxB,MAAM,KAAK,KAAK,CAACgB,eAAeM,QAAQ,CAEjE,AADA,0GAA0G;YACzG,CAAA,GAAGjD,aAAagD,iBAAiB,AAAD,EAAGtB,GAAG,CAAC,EAAE,EAAEkB,SAASM,SAAS,GAAG;gBAC/D,MAAMf,mBAAmBgB,wBAAwB,CAAC,EAAE,EAAE7C;YACxD;QACF;QACA,OAAOoB;IACT;AAEA,sDAAsD;AACtD,uJAAuJ;AACvJ,4GAA4G;AAC5GtC,QAAQW,4BAA4B,GAAGA;AACvC,SAAST,aAAagE,UAAU,EAAEzB,gBAAgB,EAAES,eAAe;IACjE,MAAMiB,UAAUzD,8BAA8BH,gBAAgB2D,YAAYzB,mBAAmByB,WAAWE,IAAI,EAAE;IAC9G,MAAMC,WAAW/D,gBAAgB4D,YAAYhB;IAC7C,MAAMoB,QAAQ/D,gBAAgB8D,UAAU5B;IACxC,MAAM8B,uBAAuB7D,8BAA8B4D,OAAOJ,WAAWE,IAAI,EAAE;IACnF,MAAMI,wBAAwB7D,6BAA6B0D,UAAUH,WAAWE,IAAI,CAACK,OAAO,CAAC,SAAS,QAAQ;IAC9G,MAAMC,YAAYrE,cAAcM,6BAA6B0D,UAAUH,WAAWE,IAAI,EAAE;IACxF,MAAMO,SAAStE,cAAcK,8BAA8B4D,OAAOJ,WAAWE,IAAI,EAAE;IACnF,OAAO;QAACD;QAASK;QAAuBD;QAAsBG;QAAWC;KAAO;AAClF"}