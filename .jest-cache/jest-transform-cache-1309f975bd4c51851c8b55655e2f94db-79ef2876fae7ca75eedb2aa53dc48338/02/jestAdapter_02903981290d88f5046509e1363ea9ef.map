{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\nvar _jestUtil = require('jest-util');\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst FRAMEWORK_INITIALIZER = require.resolve('./jestAdapterInit');\nconst jestAdapter = async (\n  globalConfig,\n  config,\n  environment,\n  runtime,\n  testPath,\n  sendMessageToJest\n) => {\n  const {initialize, runAndTransformResultsToJestFormat} =\n    runtime.requireInternalModule(FRAMEWORK_INITIALIZER);\n  const {globals, snapshotState} = await initialize({\n    config,\n    environment,\n    globalConfig,\n    localRequire: runtime.requireModule.bind(runtime),\n    parentProcess: process,\n    sendMessageToJest,\n    setGlobalsForRuntime: runtime.setGlobalsForRuntime.bind(runtime),\n    testPath\n  });\n  if (config.fakeTimers.enableGlobally) {\n    if (config.fakeTimers.legacyFakeTimers) {\n      // during setup, this cannot be null (and it's fine to explode if it is)\n      environment.fakeTimers.useFakeTimers();\n    } else {\n      environment.fakeTimersModern.useFakeTimers();\n    }\n  }\n  globals.beforeEach(() => {\n    if (config.resetModules) {\n      runtime.resetModules();\n    }\n    if (config.clearMocks) {\n      runtime.clearAllMocks();\n    }\n    if (config.resetMocks) {\n      runtime.resetAllMocks();\n      if (\n        config.fakeTimers.enableGlobally &&\n        config.fakeTimers.legacyFakeTimers\n      ) {\n        // during setup, this cannot be null (and it's fine to explode if it is)\n        environment.fakeTimers.useFakeTimers();\n      }\n    }\n    if (config.restoreMocks) {\n      runtime.restoreAllMocks();\n    }\n  });\n  for (const path of config.setupFilesAfterEnv) {\n    const esm = runtime.unstable_shouldLoadAsEsm(path);\n    if (esm) {\n      await runtime.unstable_importModule(path);\n    } else {\n      runtime.requireModule(path);\n    }\n  }\n  const esm = runtime.unstable_shouldLoadAsEsm(testPath);\n  if (esm) {\n    await runtime.unstable_importModule(testPath);\n  } else {\n    runtime.requireModule(testPath);\n  }\n  const results = await runAndTransformResultsToJestFormat({\n    config,\n    globalConfig,\n    testPath\n  });\n  _addSnapshotData(results, snapshotState);\n\n  // We need to copy the results object to ensure we don't leaks the prototypes\n  // from the VM. Jasmine creates the result objects in the parent process, we\n  // should consider doing that for circus as well.\n  return (0, _jestUtil.deepCyclicCopy)(results, {\n    keepPrototype: false\n  });\n};\nconst _addSnapshotData = (results, snapshotState) => {\n  results.testResults.forEach(({fullName, status}) => {\n    if (status === 'pending' || status === 'failed') {\n      // if test is skipped or failed, we don't want to mark\n      // its snapshots as obsolete.\n      snapshotState.markSnapshotsAsCheckedForTest(fullName);\n    }\n  });\n  const uncheckedCount = snapshotState.getUncheckedCount();\n  const uncheckedKeys = snapshotState.getUncheckedKeys();\n  if (uncheckedCount) {\n    snapshotState.removeUncheckedKeys();\n  }\n  const status = snapshotState.save();\n  results.snapshot.fileDeleted = status.deleted;\n  results.snapshot.added = snapshotState.added;\n  results.snapshot.matched = snapshotState.matched;\n  results.snapshot.unmatched = snapshotState.unmatched;\n  results.snapshot.updated = snapshotState.updated;\n  results.snapshot.unchecked = !status.deleted ? uncheckedCount : 0;\n  // Copy the array to prevent memory leaks\n  results.snapshot.uncheckedKeys = Array.from(uncheckedKeys);\n};\nvar _default = jestAdapter;\nexports.default = _default;\n"],"names":["Object","defineProperty","exports","value","default","_jestUtil","require","FRAMEWORK_INITIALIZER","resolve","jestAdapter","globalConfig","config","environment","runtime","testPath","sendMessageToJest","initialize","runAndTransformResultsToJestFormat","requireInternalModule","globals","snapshotState","localRequire","requireModule","bind","parentProcess","process","setGlobalsForRuntime","fakeTimers","enableGlobally","legacyFakeTimers","useFakeTimers","fakeTimersModern","beforeEach","resetModules","clearMocks","clearAllMocks","resetMocks","resetAllMocks","restoreMocks","restoreAllMocks","path","setupFilesAfterEnv","esm","unstable_shouldLoadAsEsm","unstable_importModule","results","_addSnapshotData","deepCyclicCopy","keepPrototype","testResults","forEach","fullName","status","markSnapshotsAsCheckedForTest","uncheckedCount","getUncheckedCount","uncheckedKeys","getUncheckedKeys","removeUncheckedKeys","save","snapshot","fileDeleted","deleted","added","matched","unmatched","updated","unchecked","Array","from","_default"],"mappings":"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"}