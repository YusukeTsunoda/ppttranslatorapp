{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/queries/alt-text.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByAltText = exports.queryAllByAltText = exports.getByAltText = exports.getAllByAltText = exports.findByAltText = exports.findAllByAltText = void 0;\nvar _queryHelpers = require(\"../query-helpers\");\nvar _helpers = require(\"../helpers\");\nvar _allUtils = require(\"./all-utils\");\n// Valid tags are img, input, area and custom elements\nconst VALID_TAG_REGEXP = /^(img|input|area|.+-.+)$/i;\nconst queryAllByAltText = (container, alt, options = {}) => {\n  (0, _helpers.checkContainerType)(container);\n  return (0, _queryHelpers.queryAllByAttribute)('alt', container, alt, options).filter(node => VALID_TAG_REGEXP.test(node.tagName));\n};\nconst getMultipleError = (c, alt) => `Found multiple elements with the alt text: ${alt}`;\nconst getMissingError = (c, alt) => `Unable to find an element with the alt text: ${alt}`;\nconst queryAllByAltTextWithSuggestions = exports.queryAllByAltText = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByAltText, queryAllByAltText.name, 'queryAll');\nconst [queryByAltText, getAllByAltText, getByAltText, findAllByAltText, findByAltText] = (0, _allUtils.buildQueries)(queryAllByAltText, getMultipleError, getMissingError);\nexports.findByAltText = findByAltText;\nexports.findAllByAltText = findAllByAltText;\nexports.getByAltText = getByAltText;\nexports.getAllByAltText = getAllByAltText;\nexports.queryByAltText = queryByAltText;"],"names":["Object","defineProperty","exports","value","queryByAltText","queryAllByAltText","getByAltText","getAllByAltText","findByAltText","findAllByAltText","_queryHelpers","require","_helpers","_allUtils","VALID_TAG_REGEXP","container","alt","options","checkContainerType","queryAllByAttribute","filter","node","test","tagName","getMultipleError","c","getMissingError","queryAllByAltTextWithSuggestions","wrapAllByQueryWithSuggestion","name","buildQueries"],"mappings":"AAAA;AAEAA,OAAOC,cAAc,CAACC,SAAS,cAAc;IAC3CC,OAAO;AACT;AACAD,QAAQE,cAAc,GAAGF,QAAQG,iBAAiB,GAAGH,QAAQI,YAAY,GAAGJ,QAAQK,eAAe,GAAGL,QAAQM,aAAa,GAAGN,QAAQO,gBAAgB,GAAG,KAAK;AAC9J,IAAIC,gBAAgBC,QAAQ;AAC5B,IAAIC,WAAWD,QAAQ;AACvB,IAAIE,YAAYF,QAAQ;AACxB,sDAAsD;AACtD,MAAMG,mBAAmB;AACzB,MAAMT,oBAAoB,CAACU,WAAWC,KAAKC,UAAU,CAAC,CAAC;IACpD,CAAA,GAAGL,SAASM,kBAAkB,AAAD,EAAGH;IACjC,OAAO,AAAC,CAAA,GAAGL,cAAcS,mBAAmB,AAAD,EAAG,OAAOJ,WAAWC,KAAKC,SAASG,MAAM,CAACC,CAAAA,OAAQP,iBAAiBQ,IAAI,CAACD,KAAKE,OAAO;AACjI;AACA,MAAMC,mBAAmB,CAACC,GAAGT,MAAQ,CAAC,2CAA2C,EAAEA,KAAK;AACxF,MAAMU,kBAAkB,CAACD,GAAGT,MAAQ,CAAC,6CAA6C,EAAEA,KAAK;AACzF,MAAMW,mCAAmCzB,QAAQG,iBAAiB,GAAG,AAAC,CAAA,GAAGK,cAAckB,4BAA4B,AAAD,EAAGvB,mBAAmBA,kBAAkBwB,IAAI,EAAE;AAChK,MAAM,CAACzB,gBAAgBG,iBAAiBD,cAAcG,kBAAkBD,cAAc,GAAG,AAAC,CAAA,GAAGK,UAAUiB,YAAY,AAAD,EAAGzB,mBAAmBmB,kBAAkBE;AAC1JxB,QAAQM,aAAa,GAAGA;AACxBN,QAAQO,gBAAgB,GAAGA;AAC3BP,QAAQI,YAAY,GAAGA;AACvBJ,QAAQK,eAAe,GAAGA;AAC1BL,QAAQE,cAAc,GAAGA"}