{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/pretty-format/build/plugins/DOMElement.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\n\nvar _markup = require('./lib/markup');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst FRAGMENT_NODE = 11;\nconst ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\n\nconst testHasAttribute = val => {\n  try {\n    return typeof val.hasAttribute === 'function' && val.hasAttribute('is');\n  } catch {\n    return false;\n  }\n};\n\nconst testNode = val => {\n  const constructorName = val.constructor.name;\n  const {nodeType, tagName} = val;\n  const isCustomElement =\n    (typeof tagName === 'string' && tagName.includes('-')) ||\n    testHasAttribute(val);\n  return (\n    (nodeType === ELEMENT_NODE &&\n      (ELEMENT_REGEXP.test(constructorName) || isCustomElement)) ||\n    (nodeType === TEXT_NODE && constructorName === 'Text') ||\n    (nodeType === COMMENT_NODE && constructorName === 'Comment') ||\n    (nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment')\n  );\n};\n\nconst test = val => {\n  var _val$constructor;\n\n  return (\n    (val === null || val === void 0\n      ? void 0\n      : (_val$constructor = val.constructor) === null ||\n        _val$constructor === void 0\n      ? void 0\n      : _val$constructor.name) && testNode(val)\n  );\n};\n\nexports.test = test;\n\nfunction nodeIsText(node) {\n  return node.nodeType === TEXT_NODE;\n}\n\nfunction nodeIsComment(node) {\n  return node.nodeType === COMMENT_NODE;\n}\n\nfunction nodeIsFragment(node) {\n  return node.nodeType === FRAGMENT_NODE;\n}\n\nconst serialize = (node, config, indentation, depth, refs, printer) => {\n  if (nodeIsText(node)) {\n    return (0, _markup.printText)(node.data, config);\n  }\n\n  if (nodeIsComment(node)) {\n    return (0, _markup.printComment)(node.data, config);\n  }\n\n  const type = nodeIsFragment(node)\n    ? 'DocumentFragment'\n    : node.tagName.toLowerCase();\n\n  if (++depth > config.maxDepth) {\n    return (0, _markup.printElementAsLeaf)(type, config);\n  }\n\n  return (0, _markup.printElement)(\n    type,\n    (0, _markup.printProps)(\n      nodeIsFragment(node)\n        ? []\n        : Array.from(node.attributes)\n            .map(attr => attr.name)\n            .sort(),\n      nodeIsFragment(node)\n        ? {}\n        : Array.from(node.attributes).reduce((props, attribute) => {\n            props[attribute.name] = attribute.value;\n            return props;\n          }, {}),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    (0, _markup.printChildren)(\n      Array.prototype.slice.call(node.childNodes || node.children),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    config,\n    indentation\n  );\n};\n\nexports.serialize = serialize;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;\n"],"names":["Object","defineProperty","exports","value","test","serialize","default","_markup","require","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","FRAGMENT_NODE","ELEMENT_REGEXP","testHasAttribute","val","hasAttribute","testNode","constructorName","constructor","name","nodeType","tagName","isCustomElement","includes","_val$constructor","nodeIsText","node","nodeIsComment","nodeIsFragment","config","indentation","depth","refs","printer","printText","data","printComment","type","toLowerCase","maxDepth","printElementAsLeaf","printElement","printProps","Array","from","attributes","map","attr","sort","reduce","props","attribute","indent","printChildren","prototype","slice","call","childNodes","children","plugin","_default"],"mappings":"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"}