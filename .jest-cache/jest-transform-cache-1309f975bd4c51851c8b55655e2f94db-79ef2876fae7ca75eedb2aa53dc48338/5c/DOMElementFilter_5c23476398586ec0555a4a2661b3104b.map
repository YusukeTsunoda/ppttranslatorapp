{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/DOMElementFilter.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createDOMElementFilter;\nexports.test = void 0;\n/**\n * Source: https://github.com/facebook/jest/blob/e7bb6a1e26ffab90611b2593912df15b69315611/packages/pretty-format/src/plugins/DOMElement.ts\n */\n/* eslint-disable -- trying to stay as close to the original as possible */\n/* istanbul ignore file */\n\nfunction escapeHTML(str) {\n  return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n// Return empty string if keys is empty.\nconst printProps = (keys, props, config, indentation, depth, refs, printer) => {\n  const indentationNext = indentation + config.indent;\n  const colors = config.colors;\n  return keys.map(key => {\n    const value = props[key];\n    let printed = printer(value, config, indentationNext, depth, refs);\n    if (typeof value !== 'string') {\n      if (printed.indexOf('\\n') !== -1) {\n        printed = config.spacingOuter + indentationNext + printed + config.spacingOuter + indentation;\n      }\n      printed = '{' + printed + '}';\n    }\n    return config.spacingInner + indentation + colors.prop.open + key + colors.prop.close + '=' + colors.value.open + printed + colors.value.close;\n  }).join('');\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#node_type_constants\nconst NodeTypeTextNode = 3;\n\n// Return empty string if children is empty.\nconst printChildren = (children, config, indentation, depth, refs, printer) => children.map(child => {\n  const printedChild = typeof child === 'string' ? printText(child, config) : printer(child, config, indentation, depth, refs);\n  if (printedChild === '' && typeof child === 'object' && child !== null && child.nodeType !== NodeTypeTextNode) {\n    // A plugin serialized this Node to '' meaning we should ignore it.\n    return '';\n  }\n  return config.spacingOuter + indentation + printedChild;\n}).join('');\nconst printText = (text, config) => {\n  const contentColor = config.colors.content;\n  return contentColor.open + escapeHTML(text) + contentColor.close;\n};\nconst printComment = (comment, config) => {\n  const commentColor = config.colors.comment;\n  return commentColor.open + '<!--' + escapeHTML(comment) + '-->' + commentColor.close;\n};\n\n// Separate the functions to format props, children, and element,\n// so a plugin could override a particular function, if needed.\n// Too bad, so sad: the traditional (but unnecessary) space\n// in a self-closing tagColor requires a second test of printedProps.\nconst printElement = (type, printedProps, printedChildren, config, indentation) => {\n  const tagColor = config.colors.tag;\n  return tagColor.open + '<' + type + (printedProps && tagColor.close + printedProps + config.spacingOuter + indentation + tagColor.open) + (printedChildren ? '>' + tagColor.close + printedChildren + config.spacingOuter + indentation + tagColor.open + '</' + type : (printedProps && !config.min ? '' : ' ') + '/') + '>' + tagColor.close;\n};\nconst printElementAsLeaf = (type, config) => {\n  const tagColor = config.colors.tag;\n  return tagColor.open + '<' + type + tagColor.close + ' â€¦' + tagColor.open + ' />' + tagColor.close;\n};\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst FRAGMENT_NODE = 11;\nconst ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\nconst testNode = val => {\n  const constructorName = val.constructor.name;\n  const {\n    nodeType,\n    tagName\n  } = val;\n  const isCustomElement = typeof tagName === 'string' && tagName.includes('-') || typeof val.hasAttribute === 'function' && val.hasAttribute('is');\n  return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === 'Text' || nodeType === COMMENT_NODE && constructorName === 'Comment' || nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment';\n};\nconst test = val => {\n  var _val$constructor;\n  return (val == null || (_val$constructor = val.constructor) == null ? void 0 : _val$constructor.name) && testNode(val);\n};\nexports.test = test;\nfunction nodeIsText(node) {\n  return node.nodeType === TEXT_NODE;\n}\nfunction nodeIsComment(node) {\n  return node.nodeType === COMMENT_NODE;\n}\nfunction nodeIsFragment(node) {\n  return node.nodeType === FRAGMENT_NODE;\n}\nfunction createDOMElementFilter(filterNode) {\n  return {\n    test: val => {\n      var _val$constructor2;\n      return (val == null || (_val$constructor2 = val.constructor) == null ? void 0 : _val$constructor2.name) && testNode(val);\n    },\n    serialize: (node, config, indentation, depth, refs, printer) => {\n      if (nodeIsText(node)) {\n        return printText(node.data, config);\n      }\n      if (nodeIsComment(node)) {\n        return printComment(node.data, config);\n      }\n      const type = nodeIsFragment(node) ? `DocumentFragment` : node.tagName.toLowerCase();\n      if (++depth > config.maxDepth) {\n        return printElementAsLeaf(type, config);\n      }\n      return printElement(type, printProps(nodeIsFragment(node) ? [] : Array.from(node.attributes).map(attr => attr.name).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce((props, attribute) => {\n        props[attribute.name] = attribute.value;\n        return props;\n      }, {}), config, indentation + config.indent, depth, refs, printer), printChildren(Array.prototype.slice.call(node.childNodes || node.children).filter(filterNode), config, indentation + config.indent, depth, refs, printer), config, indentation);\n    }\n  };\n}"],"names":["Object","defineProperty","exports","value","default","createDOMElementFilter","test","escapeHTML","str","replace","printProps","keys","props","config","indentation","depth","refs","printer","indentationNext","indent","colors","map","key","printed","indexOf","spacingOuter","spacingInner","prop","open","close","join","NodeTypeTextNode","printChildren","children","child","printedChild","printText","nodeType","text","contentColor","content","printComment","comment","commentColor","printElement","type","printedProps","printedChildren","tagColor","tag","min","printElementAsLeaf","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","FRAGMENT_NODE","ELEMENT_REGEXP","testNode","val","constructorName","constructor","name","tagName","isCustomElement","includes","hasAttribute","_val$constructor","nodeIsText","node","nodeIsComment","nodeIsFragment","filterNode","_val$constructor2","serialize","data","toLowerCase","maxDepth","Array","from","attributes","attr","sort","reduce","attribute","prototype","slice","call","childNodes","filter"],"mappings":"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"}