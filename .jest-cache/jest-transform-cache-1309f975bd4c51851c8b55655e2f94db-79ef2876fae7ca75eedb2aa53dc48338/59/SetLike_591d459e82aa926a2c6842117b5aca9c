df8b0fa56a6f2cfda4dcec35c6c3f453
"use strict";
exports.__esModule = true;
exports.default = void 0;
function _typeof(obj) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
    } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    }, _typeof(obj);
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
    if (_typeof(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
}
// for environments without Set we fallback to arrays with unique members
var SetLike = /*#__PURE__*/ function() {
    function SetLike() {
        var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        _classCallCheck(this, SetLike);
        _defineProperty(this, "items", void 0);
        this.items = items;
    }
    _createClass(SetLike, [
        {
            key: "add",
            value: function add(value) {
                if (this.has(value) === false) {
                    this.items.push(value);
                }
                return this;
            }
        },
        {
            key: "clear",
            value: function clear() {
                this.items = [];
            }
        },
        {
            key: "delete",
            value: function _delete(value) {
                var previousLength = this.items.length;
                this.items = this.items.filter(function(item) {
                    return item !== value;
                });
                return previousLength !== this.items.length;
            }
        },
        {
            key: "forEach",
            value: function forEach(callbackfn) {
                var _this = this;
                this.items.forEach(function(item) {
                    callbackfn(item, item, _this);
                });
            }
        },
        {
            key: "has",
            value: function has(value) {
                return this.items.indexOf(value) !== -1;
            }
        },
        {
            key: "size",
            get: function get() {
                return this.items.length;
            }
        }
    ]);
    return SetLike;
}();
var _default = typeof Set === "undefined" ? Set : SetLike;
exports.default = _default; //# sourceMappingURL=SetLike.js.map

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2V0TGlrZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vc291cmNlcy9wb2x5ZmlsbHMvU2V0TGlrZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWNsYXJlIGdsb2JhbCB7XG5cdGNsYXNzIFNldDxUPiB7XG5cdFx0Ly8gZXMyMDE1LmNvbGxlY3Rpb24uZC50c1xuXHRcdGNvbnN0cnVjdG9yKGl0ZW1zPzogVFtdKTtcblx0XHRhZGQodmFsdWU6IFQpOiB0aGlzO1xuXHRcdGNsZWFyKCk6IHZvaWQ7XG5cdFx0ZGVsZXRlKHZhbHVlOiBUKTogYm9vbGVhbjtcblx0XHRmb3JFYWNoKFxuXHRcdFx0Y2FsbGJhY2tmbjogKHZhbHVlOiBULCB2YWx1ZTI6IFQsIHNldDogU2V0PFQ+KSA9PiB2b2lkLFxuXHRcdFx0dGhpc0FyZz86IHVua25vd25cblx0XHQpOiB2b2lkO1xuXHRcdGhhcyh2YWx1ZTogVCk6IGJvb2xlYW47XG5cdFx0cmVhZG9ubHkgc2l6ZTogbnVtYmVyO1xuXG5cdFx0Ly8gZXMyMDE1Lml0ZXJhYmxlLmQudHNcblx0XHQvLyBubyAgaW1wbGVtZW5udGVkXG5cdH1cbn1cblxuLy8gZm9yIGVudmlyb25tZW50cyB3aXRob3V0IFNldCB3ZSBmYWxsYmFjayB0byBhcnJheXMgd2l0aCB1bmlxdWUgbWVtYmVyc1xuY2xhc3MgU2V0TGlrZTxUPiBpbXBsZW1lbnRzIFNldDxUPiB7XG5cdHByaXZhdGUgaXRlbXM6IFRbXTtcblxuXHRjb25zdHJ1Y3RvcihpdGVtczogVFtdID0gW10pIHtcblx0XHR0aGlzLml0ZW1zID0gaXRlbXM7XG5cdH1cblxuXHRhZGQodmFsdWU6IFQpOiB0aGlzIHtcblx0XHRpZiAodGhpcy5oYXModmFsdWUpID09PSBmYWxzZSkge1xuXHRcdFx0dGhpcy5pdGVtcy5wdXNoKHZhbHVlKTtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblx0Y2xlYXIoKTogdm9pZCB7XG5cdFx0dGhpcy5pdGVtcyA9IFtdO1xuXHR9XG5cdGRlbGV0ZSh2YWx1ZTogVCk6IGJvb2xlYW4ge1xuXHRcdGNvbnN0IHByZXZpb3VzTGVuZ3RoID0gdGhpcy5pdGVtcy5sZW5ndGg7XG5cdFx0dGhpcy5pdGVtcyA9IHRoaXMuaXRlbXMuZmlsdGVyKChpdGVtKSA9PiBpdGVtICE9PSB2YWx1ZSk7XG5cblx0XHRyZXR1cm4gcHJldmlvdXNMZW5ndGggIT09IHRoaXMuaXRlbXMubGVuZ3RoO1xuXHR9XG5cdGZvckVhY2goY2FsbGJhY2tmbjogKHZhbHVlOiBULCB2YWx1ZTI6IFQsIHNldDogU2V0PFQ+KSA9PiB2b2lkKTogdm9pZCB7XG5cdFx0dGhpcy5pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG5cdFx0XHRjYWxsYmFja2ZuKGl0ZW0sIGl0ZW0sIHRoaXMpO1xuXHRcdH0pO1xuXHR9XG5cdGhhcyh2YWx1ZTogVCk6IGJvb2xlYW4ge1xuXHRcdHJldHVybiB0aGlzLml0ZW1zLmluZGV4T2YodmFsdWUpICE9PSAtMTtcblx0fVxuXG5cdGdldCBzaXplKCk6IG51bWJlciB7XG5cdFx0cmV0dXJuIHRoaXMuaXRlbXMubGVuZ3RoO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHR5cGVvZiBTZXQgPT09IFwidW5kZWZpbmVkXCIgPyBTZXQgOiBTZXRMaWtlO1xuIl0sIm5hbWVzIjpbIlNldExpa2UiLCJpdGVtcyIsInZhbHVlIiwiaGFzIiwicHVzaCIsInByZXZpb3VzTGVuZ3RoIiwibGVuZ3RoIiwiZmlsdGVyIiwiaXRlbSIsImNhbGxiYWNrZm4iLCJmb3JFYWNoIiwiaW5kZXhPZiIsIlNldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSx5RUFBQTtBQUFBLElBQ01BLE9BQU8sR0FBQSxXQUFBLEdBQUE7SUFHWixTQUFBLFVBQTZCO1FBQUEsSUFBakJDLEtBQVUsR0FBQSxVQUFBLE1BQUEsR0FBQSxLQUFBLFNBQUEsQ0FBQSxFQUFBLEtBQUEsWUFBQSxTQUFBLENBQUEsRUFBQSxHQUFHLEVBQUU7UUFBQSxnQkFBQSxJQUFBLEVBQUE7UUFBQSxnQkFBQSxJQUFBLEVBQUEsU0FBQSxLQUFBO1FBQzFCLElBQUksQ0FBQ0EsS0FBSyxHQUFHQSxLQUFLO0lBQ25CO0lBQUMsYUFBQSxTQUFBO1FBQUE7WUFBQSxLQUFBO1lBQUEsT0FFRCxTQUFBLElBQUlDLEtBQVEsRUFBUTtnQkFDbkIsSUFBSSxJQUFJLENBQUNDLEdBQUcsQ0FBQ0QsS0FBSyxDQUFDLEtBQUssS0FBSyxFQUFFO29CQUM5QixJQUFJLENBQUNELEtBQUssQ0FBQ0csSUFBSSxDQUFDRixLQUFLLENBQUM7Z0JBQ3ZCO2dCQUNBLE9BQU8sSUFBSTtZQUNaO1FBQUM7UUFBQTtZQUFBLEtBQUE7WUFBQSxPQUNELFNBQUEsUUFBYztnQkFDYixJQUFJLENBQUNELEtBQUssR0FBRyxFQUFFO1lBQ2hCO1FBQUM7UUFBQTtZQUFBLEtBQUE7WUFBQSxPQUNELFNBQUEsUUFBT0MsS0FBUSxFQUFXO2dCQUN6QixJQUFNRyxjQUFjLEdBQUcsSUFBSSxDQUFDSixLQUFLLENBQUNLLE1BQU07Z0JBQ3hDLElBQUksQ0FBQ0wsS0FBSyxHQUFHLElBQUksQ0FBQ0EsS0FBSyxDQUFDTSxNQUFNLENBQUMsU0FBQ0MsSUFBSTtvQkFBQSxPQUFLQSxJQUFJLEtBQUtOLEtBQUs7Z0JBQUEsRUFBQztnQkFFeEQsT0FBT0csY0FBYyxLQUFLLElBQUksQ0FBQ0osS0FBSyxDQUFDSyxNQUFNO1lBQzVDO1FBQUM7UUFBQTtZQUFBLEtBQUE7WUFBQSxPQUNELFNBQUEsUUFBUUcsVUFBc0QsRUFBUTtnQkFBQSxJQUFBLFFBQUEsSUFBQTtnQkFDckUsSUFBSSxDQUFDUixLQUFLLENBQUNTLE9BQU8sQ0FBQyxTQUFDRixJQUFJLEVBQUs7b0JBQzVCQyxVQUFVLENBQUNELElBQUksRUFBRUEsSUFBSSxFQUFFLEtBQUksQ0FBQztnQkFDN0IsQ0FBQyxDQUFDO1lBQ0g7UUFBQztRQUFBO1lBQUEsS0FBQTtZQUFBLE9BQ0QsU0FBQSxJQUFJTixLQUFRLEVBQVc7Z0JBQ3RCLE9BQU8sSUFBSSxDQUFDRCxLQUFLLENBQUNVLE9BQU8sQ0FBQ1QsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3hDO1FBQUM7UUFBQTtZQUFBLEtBQUE7WUFBQSxLQUVELFNBQUEsTUFBbUI7Z0JBQ2xCLE9BQU8sSUFBSSxDQUFDRCxLQUFLLENBQUNLLE1BQU07WUFDekI7UUFBQztLQUFBO0lBQUEsT0FBQTtBQUFBO0FBQUEsSUFBQSxXQUdhLE9BQU9NLEdBQUcsS0FBSyxXQUFXLEdBQUdBLEdBQUcsR0FBR1osT0FBTztBQUFBLFFBQUEsT0FBQSxHQUFBIn0=