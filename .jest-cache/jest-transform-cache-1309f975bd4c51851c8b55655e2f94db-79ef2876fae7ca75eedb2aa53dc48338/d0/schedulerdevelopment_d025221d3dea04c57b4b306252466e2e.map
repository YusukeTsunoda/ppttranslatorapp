{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/scheduler/cjs/scheduler.development.js"],"sourcesContent":["/**\n * @license React\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var enableSchedulerDebugging = false;\nvar enableProfiling = false;\nvar frameYieldMs = 5;\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  return heap.length === 0 ? null : heap[0];\n}\nfunction pop(heap) {\n  if (heap.length === 0) {\n    return null;\n  }\n\n  var first = heap[0];\n  var last = heap.pop();\n\n  if (last !== first) {\n    heap[0] = last;\n    siftDown(heap, last, 0);\n  }\n\n  return first;\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (index > 0) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n  var halfLength = length >>> 1;\n\n  while (index < halfLength) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (compare(left, node) < 0) {\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nfunction markTaskErrored(task, ms) {\n}\n\n/* eslint-disable no-var */\n\nvar hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  var localPerformance = performance;\n\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date;\n  var initialTime = localDate.now();\n\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n} // Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.\n\nvar localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\nvar localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;\nvar localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\n\nvar isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = exports.unstable_now();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = exports.unstable_now();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n      } else {\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = exports.unstable_now();\n  var startTime;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nvar isMessageLoopRunning = false;\nvar scheduledHostCallback = null;\nvar taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main\n// thread, like user events. By default, it yields multiple times per frame.\n// It does not attempt to align with frame boundaries, since most tasks don't\n// need to be frame aligned; for those that do, use requestAnimationFrame.\n\nvar frameInterval = frameYieldMs;\nvar startTime = -1;\n\nfunction shouldYieldToHost() {\n  var timeElapsed = exports.unstable_now() - startTime;\n\n  if (timeElapsed < frameInterval) {\n    // The main thread has only been blocked for a really short amount of time;\n    // smaller than a single frame. Don't yield yet.\n    return false;\n  } // The main thread has been blocked for a non-negligible amount of time. We\n\n\n  return true;\n}\n\nfunction requestPaint() {\n\n}\n\nfunction forceFrameRate(fps) {\n  if (fps < 0 || fps > 125) {\n    // Using console['error'] to evade Babel and ESLint\n    console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');\n    return;\n  }\n\n  if (fps > 0) {\n    frameInterval = Math.floor(1000 / fps);\n  } else {\n    // reset the framerate\n    frameInterval = frameYieldMs;\n  }\n}\n\nvar performWorkUntilDeadline = function () {\n  if (scheduledHostCallback !== null) {\n    var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread\n    // has been blocked.\n\n    startTime = currentTime;\n    var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the\n    // error can be observed.\n    //\n    // Intentionally not using a try-catch, since that makes some debugging\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\n\n    var hasMoreWork = true;\n\n    try {\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n    } finally {\n      if (hasMoreWork) {\n        // If there's more work, schedule the next message event at the end\n        // of the preceding one.\n        schedulePerformWorkUntilDeadline();\n      } else {\n        isMessageLoopRunning = false;\n        scheduledHostCallback = null;\n      }\n    }\n  } else {\n    isMessageLoopRunning = false;\n  } // Yielding to the browser will give it a chance to paint, so we can\n};\n\nvar schedulePerformWorkUntilDeadline;\n\nif (typeof localSetImmediate === 'function') {\n  // Node.js and old IE.\n  // There's a few reasons for why we prefer setImmediate.\n  //\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\n  // (Even though this is a DOM fork of the Scheduler, you could get here\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\n  // https://github.com/facebook/react/issues/20756\n  //\n  // But also, it runs earlier which is the semantic we want.\n  // If other browsers ever implement it, it's better to use it.\n  // Although both of these would be inferior to native scheduling.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\n} else if (typeof MessageChannel !== 'undefined') {\n  // DOM and Worker environments.\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else {\n  // We should only fallback here in non-browser environments.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\n}\n\nfunction requestHostCallback(callback) {\n  scheduledHostCallback = callback;\n\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true;\n    schedulePerformWorkUntilDeadline();\n  }\n}\n\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\n\nfunction cancelHostTimeout() {\n  localClearTimeout(taskTimeoutID);\n  taskTimeoutID = -1;\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling =  null;\n\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_forceFrameRate = forceFrameRate;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = unstable_wrapCallback;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"],"names":["process","env","NODE_ENV","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","enableSchedulerDebugging","enableProfiling","frameYieldMs","push","heap","node","index","length","siftUp","peek","pop","first","last","siftDown","i","parentIndex","parent","compare","halfLength","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","ms","hasPerformanceNow","performance","now","localPerformance","exports","unstable_now","localDate","Date","initialTime","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","isInputPending","navigator","scheduling","undefined","bind","advanceTimers","currentTime","timer","callback","startTime","expirationTime","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","cancelHostTimeout","previousPriorityLevel","workLoop","error","isQueued","shouldYieldToHost","priorityLevel","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","frameInterval","timeElapsed","requestPaint","forceFrameRate","fps","console","Math","floor","performWorkUntilDeadline","hasMoreWork","schedulePerformWorkUntilDeadline","MessageChannel","channel","port","port2","port1","onmessage","postMessage","unstable_requestPaint","unstable_Profiling","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_UserBlockingPriority","unstable_forceFrameRate","unstable_shouldYield","registerInternalModuleStop"],"mappings":"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"}