{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/is-shared-array-buffer/index.js"],"sourcesContent":["'use strict';\n\nvar callBound = require('call-bound');\n\n/** @type {undefined | ((thisArg: SharedArrayBuffer) => number)} */\nvar $byteLength = callBound('SharedArrayBuffer.prototype.byteLength', true);\n\n/** @type {import('.')} */\nmodule.exports = $byteLength\n\t? function isSharedArrayBuffer(obj) {\n\t\tif (!obj || typeof obj !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\t// @ts-expect-error TS can't figure out this closed-over variable is non-nullable, and it's fine that `obj` might not be a SAB\n\t\t\t$byteLength(obj);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t: function isSharedArrayBuffer(_obj) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t};\n"],"names":["callBound","require","$byteLength","module","exports","isSharedArrayBuffer","obj","e","_obj"],"mappings":"AAAA;AAEA,IAAIA,YAAYC,QAAQ;AAExB,iEAAiE,GACjE,IAAIC,cAAcF,UAAU,0CAA0C;AAEtE,wBAAwB,GACxBG,OAAOC,OAAO,GAAGF,cACd,SAASG,oBAAoBC,GAAG;IACjC,IAAI,CAACA,OAAO,OAAOA,QAAQ,UAAU;QACpC,OAAO;IACR;IACA,IAAI;QACH,8HAA8H;QAC9HJ,YAAYI;QACZ,OAAO;IACR,EAAE,OAAOC,GAAG;QACX,OAAO;IACR;AACD,IACE,SAASF,oBAAoBG,IAAI;IAClC,OAAO;AACR"}