{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/lodash/_baseIsTypedArray.js"],"sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n"],"names":["baseGetTag","require","isLength","isObjectLike","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","baseIsTypedArray","value","length","module","exports"],"mappings":";AAAA,IAAIA,aAAaC,QAAQ,kBACrBC,WAAWD,QAAQ,eACnBE,eAAeF,QAAQ;AAE3B,yCAAyC,GACzC,IAAIG,UAAU,sBACVC,WAAW,kBACXC,UAAU,oBACVC,UAAU,iBACVC,WAAW,kBACXC,UAAU,qBACVC,SAAS,gBACTC,YAAY,mBACZC,YAAY,mBACZC,YAAY,mBACZC,SAAS,gBACTC,YAAY,mBACZC,aAAa;AAEjB,IAAIC,iBAAiB,wBACjBC,cAAc,qBACdC,aAAa,yBACbC,aAAa,yBACbC,UAAU,sBACVC,WAAW,uBACXC,WAAW,uBACXC,WAAW,uBACXC,kBAAkB,8BAClBC,YAAY,wBACZC,YAAY;AAEhB,2DAA2D,GAC3D,IAAIC,iBAAiB,CAAC;AACtBA,cAAc,CAACT,WAAW,GAAGS,cAAc,CAACR,WAAW,GACvDQ,cAAc,CAACP,QAAQ,GAAGO,cAAc,CAACN,SAAS,GAClDM,cAAc,CAACL,SAAS,GAAGK,cAAc,CAACJ,SAAS,GACnDI,cAAc,CAACH,gBAAgB,GAAGG,cAAc,CAACF,UAAU,GAC3DE,cAAc,CAACD,UAAU,GAAG;AAC5BC,cAAc,CAACxB,QAAQ,GAAGwB,cAAc,CAACvB,SAAS,GAClDuB,cAAc,CAACX,eAAe,GAAGW,cAAc,CAACtB,QAAQ,GACxDsB,cAAc,CAACV,YAAY,GAAGU,cAAc,CAACrB,QAAQ,GACrDqB,cAAc,CAACpB,SAAS,GAAGoB,cAAc,CAACnB,QAAQ,GAClDmB,cAAc,CAAClB,OAAO,GAAGkB,cAAc,CAACjB,UAAU,GAClDiB,cAAc,CAAChB,UAAU,GAAGgB,cAAc,CAACf,UAAU,GACrDe,cAAc,CAACd,OAAO,GAAGc,cAAc,CAACb,UAAU,GAClDa,cAAc,CAACZ,WAAW,GAAG;AAE7B;;;;;;CAMC,GACD,SAASa,iBAAiBC,KAAK;IAC7B,OAAO3B,aAAa2B,UAClB5B,SAAS4B,MAAMC,MAAM,KAAK,CAAC,CAACH,cAAc,CAAC5B,WAAW8B,OAAO;AACjE;AAEAE,OAAOC,OAAO,GAAGJ"}