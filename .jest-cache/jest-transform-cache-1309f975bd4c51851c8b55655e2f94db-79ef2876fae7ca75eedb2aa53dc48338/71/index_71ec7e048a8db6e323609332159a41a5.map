{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/deep-equal/index.js"],"sourcesContent":["'use strict';\n\nvar assign = require('object.assign');\nvar callBound = require('call-bind/callBound');\nvar flags = require('regexp.prototype.flags');\nvar GetIntrinsic = require('get-intrinsic');\nvar getIterator = require('es-get-iterator');\nvar getSideChannel = require('side-channel');\nvar is = require('object-is');\nvar isArguments = require('is-arguments');\nvar isArray = require('isarray');\nvar isArrayBuffer = require('is-array-buffer');\nvar isDate = require('is-date-object');\nvar isRegex = require('is-regex');\nvar isSharedArrayBuffer = require('is-shared-array-buffer');\nvar objectKeys = require('object-keys');\nvar whichBoxedPrimitive = require('which-boxed-primitive');\nvar whichCollection = require('which-collection');\nvar whichTypedArray = require('which-typed-array');\nvar byteLength = require('array-buffer-byte-length');\n\nvar sabByteLength = callBound('SharedArrayBuffer.prototype.byteLength', true);\n\nvar $getTime = callBound('Date.prototype.getTime');\nvar gPO = Object.getPrototypeOf;\nvar $objToString = callBound('Object.prototype.toString');\n\nvar $Set = GetIntrinsic('%Set%', true);\nvar $mapHas = callBound('Map.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSize = callBound('Map.prototype.size', true);\nvar $setAdd = callBound('Set.prototype.add', true);\nvar $setDelete = callBound('Set.prototype.delete', true);\nvar $setHas = callBound('Set.prototype.has', true);\nvar $setSize = callBound('Set.prototype.size', true);\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L401-L414\nfunction setHasEqualElement(set, val1, opts, channel) {\n  var i = getIterator(set);\n  var result;\n  while ((result = i.next()) && !result.done) {\n    if (internalDeepEqual(val1, result.value, opts, channel)) { // eslint-disable-line no-use-before-define\n      // Remove the matching element to make sure we do not check that again.\n      $setDelete(set, result.value);\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L416-L439\nfunction findLooseMatchingPrimitives(prim) {\n  if (typeof prim === 'undefined') {\n    return null;\n  }\n  if (typeof prim === 'object') { // Only pass in null as object!\n    return void 0;\n  }\n  if (typeof prim === 'symbol') {\n    return false;\n  }\n  if (typeof prim === 'string' || typeof prim === 'number') {\n    // Loose equal entries exist only if the string is possible to convert to a regular number and not NaN.\n    return +prim === +prim; // eslint-disable-line no-implicit-coercion\n  }\n  return true;\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L449-L460\nfunction mapMightHaveLoosePrim(a, b, prim, item, opts, channel) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n  var curB = $mapGet(b, altValue);\n  var looseOpts = assign({}, opts, { strict: false });\n  if (\n    (typeof curB === 'undefined' && !$mapHas(b, altValue))\n    // eslint-disable-next-line no-use-before-define\n    || !internalDeepEqual(item, curB, looseOpts, channel)\n  ) {\n    return false;\n  }\n  // eslint-disable-next-line no-use-before-define\n  return !$mapHas(a, altValue) && internalDeepEqual(item, curB, looseOpts, channel);\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L441-L447\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n\n  return $setHas(b, altValue) && !$setHas(a, altValue);\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L518-L533\nfunction mapHasEqualEntry(set, map, key1, item1, opts, channel) {\n  var i = getIterator(set);\n  var result;\n  var key2;\n  while ((result = i.next()) && !result.done) {\n    key2 = result.value;\n    if (\n      // eslint-disable-next-line no-use-before-define\n      internalDeepEqual(key1, key2, opts, channel)\n      // eslint-disable-next-line no-use-before-define\n      && internalDeepEqual(item1, $mapGet(map, key2), opts, channel)\n    ) {\n      $setDelete(set, key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction internalDeepEqual(actual, expected, options, channel) {\n  var opts = options || {};\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (opts.strict ? is(actual, expected) : actual === expected) {\n    return true;\n  }\n\n  var actualBoxed = whichBoxedPrimitive(actual);\n  var expectedBoxed = whichBoxedPrimitive(expected);\n  if (actualBoxed !== expectedBoxed) {\n    return false;\n  }\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.\n  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {\n    return opts.strict ? is(actual, expected) : actual == expected; // eslint-disable-line eqeqeq\n  }\n\n  /*\n   * 7.4. For all other Object pairs, including Array objects, equivalence is\n   * determined by having the same number of owned properties (as verified\n   * with Object.prototype.hasOwnProperty.call), the same set of keys\n   * (although not necessarily the same order), equivalent values for every\n   * corresponding key, and an identical 'prototype' property. Note: this\n   * accounts for both named and indexed properties on Arrays.\n   */\n  // see https://github.com/nodejs/node/commit/d3aafd02efd3a403d646a3044adcf14e63a88d32 for memos/channel inspiration\n\n  var hasActual = channel.has(actual);\n  var hasExpected = channel.has(expected);\n  var sentinel;\n  if (hasActual && hasExpected) {\n    if (channel.get(actual) === channel.get(expected)) {\n      return true;\n    }\n  } else {\n    sentinel = {};\n  }\n  if (!hasActual) { channel.set(actual, sentinel); }\n  if (!hasExpected) { channel.set(expected, sentinel); }\n\n  // eslint-disable-next-line no-use-before-define\n  return objEquiv(actual, expected, opts, channel);\n}\n\nfunction isBuffer(x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {\n    return false;\n  }\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') {\n    return false;\n  }\n\n  return !!(x.constructor && x.constructor.isBuffer && x.constructor.isBuffer(x));\n}\n\nfunction setEquiv(a, b, opts, channel) {\n  if ($setSize(a) !== $setSize(b)) {\n    return false;\n  }\n  var iA = getIterator(a);\n  var iB = getIterator(b);\n  var resultA;\n  var resultB;\n  var set;\n  while ((resultA = iA.next()) && !resultA.done) {\n    if (resultA.value && typeof resultA.value === 'object') {\n      if (!set) { set = new $Set(); }\n      $setAdd(set, resultA.value);\n    } else if (!$setHas(b, resultA.value)) {\n      if (opts.strict) { return false; }\n      if (!setMightHaveLoosePrim(a, b, resultA.value)) {\n        return false;\n      }\n      if (!set) { set = new $Set(); }\n      $setAdd(set, resultA.value);\n    }\n  }\n  if (set) {\n    while ((resultB = iB.next()) && !resultB.done) {\n      // We have to check if a primitive value is already matching and only if it's not, go hunting for it.\n      if (resultB.value && typeof resultB.value === 'object') {\n        if (!setHasEqualElement(set, resultB.value, opts.strict, channel)) {\n          return false;\n        }\n      } else if (\n        !opts.strict\n        && !$setHas(a, resultB.value)\n        && !setHasEqualElement(set, resultB.value, opts.strict, channel)\n      ) {\n        return false;\n      }\n    }\n    return $setSize(set) === 0;\n  }\n  return true;\n}\n\nfunction mapEquiv(a, b, opts, channel) {\n  if ($mapSize(a) !== $mapSize(b)) {\n    return false;\n  }\n  var iA = getIterator(a);\n  var iB = getIterator(b);\n  var resultA;\n  var resultB;\n  var set;\n  var key;\n  var item1;\n  var item2;\n  while ((resultA = iA.next()) && !resultA.done) {\n    key = resultA.value[0];\n    item1 = resultA.value[1];\n    if (key && typeof key === 'object') {\n      if (!set) { set = new $Set(); }\n      $setAdd(set, key);\n    } else {\n      item2 = $mapGet(b, key);\n      if ((typeof item2 === 'undefined' && !$mapHas(b, key)) || !internalDeepEqual(item1, item2, opts, channel)) {\n        if (opts.strict) {\n          return false;\n        }\n        if (!mapMightHaveLoosePrim(a, b, key, item1, opts, channel)) {\n          return false;\n        }\n        if (!set) { set = new $Set(); }\n        $setAdd(set, key);\n      }\n    }\n  }\n\n  if (set) {\n    while ((resultB = iB.next()) && !resultB.done) {\n      key = resultB.value[0];\n      item2 = resultB.value[1];\n      if (key && typeof key === 'object') {\n        if (!mapHasEqualEntry(set, a, key, item2, opts, channel)) {\n          return false;\n        }\n      } else if (\n        !opts.strict\n        && (!a.has(key) || !internalDeepEqual($mapGet(a, key), item2, opts, channel))\n        && !mapHasEqualEntry(set, a, key, item2, assign({}, opts, { strict: false }), channel)\n      ) {\n        return false;\n      }\n    }\n    return $setSize(set) === 0;\n  }\n  return true;\n}\n\nfunction objEquiv(a, b, opts, channel) {\n  /* eslint max-statements: [2, 100], max-lines-per-function: [2, 120], max-depth: [2, 5], max-lines: [2, 400] */\n  var i, key;\n\n  if (typeof a !== typeof b) { return false; }\n  if (a == null || b == null) { return false; }\n\n  if ($objToString(a) !== $objToString(b)) { return false; }\n\n  if (isArguments(a) !== isArguments(b)) { return false; }\n\n  var aIsArray = isArray(a);\n  var bIsArray = isArray(b);\n  if (aIsArray !== bIsArray) { return false; }\n\n  // TODO: replace when a cross-realm brand check is available\n  var aIsError = a instanceof Error;\n  var bIsError = b instanceof Error;\n  if (aIsError !== bIsError) { return false; }\n  if (aIsError || bIsError) {\n    if (a.name !== b.name || a.message !== b.message) { return false; }\n  }\n\n  var aIsRegex = isRegex(a);\n  var bIsRegex = isRegex(b);\n  if (aIsRegex !== bIsRegex) { return false; }\n  if ((aIsRegex || bIsRegex) && (a.source !== b.source || flags(a) !== flags(b))) {\n    return false;\n  }\n\n  var aIsDate = isDate(a);\n  var bIsDate = isDate(b);\n  if (aIsDate !== bIsDate) { return false; }\n  if (aIsDate || bIsDate) { // && would work too, because both are true or both false here\n    if ($getTime(a) !== $getTime(b)) { return false; }\n  }\n  if (opts.strict && gPO && gPO(a) !== gPO(b)) { return false; }\n\n  var aWhich = whichTypedArray(a);\n  var bWhich = whichTypedArray(b);\n  if (aWhich !== bWhich) {\n    return false;\n  }\n  if (aWhich || bWhich) { // && would work too, because both are true or both false here\n    if (a.length !== b.length) { return false; }\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) { return false; }\n    }\n    return true;\n  }\n\n  var aIsBuffer = isBuffer(a);\n  var bIsBuffer = isBuffer(b);\n  if (aIsBuffer !== bIsBuffer) { return false; }\n  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here\n    if (a.length !== b.length) { return false; }\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) { return false; }\n    }\n    return true;\n  }\n\n  var aIsArrayBuffer = isArrayBuffer(a);\n  var bIsArrayBuffer = isArrayBuffer(b);\n  if (aIsArrayBuffer !== bIsArrayBuffer) { return false; }\n  if (aIsArrayBuffer || bIsArrayBuffer) { // && would work too, because both are true or both false here\n    if (byteLength(a) !== byteLength(b)) { return false; }\n    return typeof Uint8Array === 'function' && internalDeepEqual(new Uint8Array(a), new Uint8Array(b), opts, channel);\n  }\n\n  var aIsSAB = isSharedArrayBuffer(a);\n  var bIsSAB = isSharedArrayBuffer(b);\n  if (aIsSAB !== bIsSAB) { return false; }\n  if (aIsSAB || bIsSAB) { // && would work too, because both are true or both false here\n    if (sabByteLength(a) !== sabByteLength(b)) { return false; }\n    return typeof Uint8Array === 'function' && internalDeepEqual(new Uint8Array(a), new Uint8Array(b), opts, channel);\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  // having the same number of owned properties (keys incorporates hasOwnProperty)\n  if (ka.length !== kb.length) { return false; }\n\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  // ~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i]) { return false; } // eslint-disable-line eqeqeq\n  }\n\n  // equivalent values for every corresponding key, and ~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!internalDeepEqual(a[key], b[key], opts, channel)) { return false; }\n  }\n\n  var aCollection = whichCollection(a);\n  var bCollection = whichCollection(b);\n  if (aCollection !== bCollection) {\n    return false;\n  }\n  if (aCollection === 'Set' || bCollection === 'Set') { // aCollection === bCollection\n    return setEquiv(a, b, opts, channel);\n  }\n  if (aCollection === 'Map') { // aCollection === bCollection\n    return mapEquiv(a, b, opts, channel);\n  }\n\n  return true;\n}\n\nmodule.exports = function deepEqual(a, b, opts) {\n  return internalDeepEqual(a, b, opts, getSideChannel());\n};\n"],"names":["assign","require","callBound","flags","GetIntrinsic","getIterator","getSideChannel","is","isArguments","isArray","isArrayBuffer","isDate","isRegex","isSharedArrayBuffer","objectKeys","whichBoxedPrimitive","whichCollection","whichTypedArray","byteLength","sabByteLength","$getTime","gPO","Object","getPrototypeOf","$objToString","$Set","$mapHas","$mapGet","$mapSize","$setAdd","$setDelete","$setHas","$setSize","setHasEqualElement","set","val1","opts","channel","i","result","next","done","internalDeepEqual","value","findLooseMatchingPrimitives","prim","mapMightHaveLoosePrim","a","b","item","altValue","curB","looseOpts","strict","setMightHaveLoosePrim","mapHasEqualEntry","map","key1","item1","key2","actual","expected","options","actualBoxed","expectedBoxed","hasActual","has","hasExpected","sentinel","get","objEquiv","isBuffer","x","length","copy","slice","constructor","setEquiv","iA","iB","resultA","resultB","mapEquiv","key","item2","aIsArray","bIsArray","aIsError","Error","bIsError","name","message","aIsRegex","bIsRegex","source","aIsDate","bIsDate","aWhich","bWhich","aIsBuffer","bIsBuffer","aIsArrayBuffer","bIsArrayBuffer","Uint8Array","aIsSAB","bIsSAB","ka","kb","sort","aCollection","bCollection","module","exports","deepEqual"],"mappings":"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"}