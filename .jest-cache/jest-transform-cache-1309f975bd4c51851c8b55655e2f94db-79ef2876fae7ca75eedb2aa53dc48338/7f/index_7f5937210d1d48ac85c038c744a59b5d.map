{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/which-typed-array/index.js"],"sourcesContent":["'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bound');\nvar gOPD = require('gopd');\nvar getProto = require('get-proto');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\n\n/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/** @typedef {import('./types').Getter} Getter */\n/** @type {import('./types').Cache} */\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getProto) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr && getProto) {\n\t\t\tvar proto = getProto(arr);\n\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor && proto) {\n\t\t\t\tvar superProto = getProto(proto);\n\t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tvar fn = arr.slice || arr.set;\n\t\tif (fn) {\n\t\t\tcache[\n\t\t\t\t/** @type {`$${import('.').TypedArrayName}`} */ ('$' + typedArray)\n\t\t\t] = /** @type {import('./types').BoundSlice | import('./types').BoundSet} */ (\n\t\t\t\t// @ts-expect-error TODO FIXME\n\t\t\t\tcallBind(fn)\n\t\t\t);\n\t\t}\n\t});\n}\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\t/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;\n\tforEach(\n\t\t/** @type {Record<`\\$${import('.').TypedArrayName}`, Getter>} */ (cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n\t\tfunction (getter, typedArray) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error a throw is fine here\n\t\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\t\tfound = /** @type {import('.').TypedArrayName} */ ($slice(typedArray, 1));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar trySlices = function tryAllSlices(value) {\n\t/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;\n\tforEach(\n\t\t/** @type {Record<`\\$${import('.').TypedArrayName}`, Getter>} */(cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error a throw is fine here\n\t\t\t\t\tgetter(value);\n\t\t\t\t\tfound = /** @type {import('.').TypedArrayName} */ ($slice(name, 1));\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\t/** @type {string} */\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n"],"names":["forEach","require","availableTypedArrays","callBind","callBound","gOPD","getProto","$toString","hasToStringTag","g","globalThis","global","typedArrays","$slice","$indexOf","indexOf","array","value","i","length","cache","__proto__","typedArray","arr","Symbol","toStringTag","proto","descriptor","superProto","get","fn","slice","set","tryTypedArrays","tryAllTypedArrays","found","getter","e","trySlices","tryAllSlices","name","module","exports","whichTypedArray","tag"],"mappings":"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"}