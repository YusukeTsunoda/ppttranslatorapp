672b976f7d8bece045bc3ad957af3c5b
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var complementaryRole = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: [
        'author'
    ],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [
        {
            concept: {
                name: 'aside'
            },
            module: 'HTML'
        },
        {
            concept: {
                attributes: [
                    {
                        constraints: [
                            'set'
                        ],
                        name: 'aria-label'
                    }
                ],
                constraints: [
                    'scoped to a sectioning content element',
                    'scoped to a sectioning root element other than body'
                ],
                name: 'aside'
            },
            module: 'HTML'
        },
        {
            concept: {
                attributes: [
                    {
                        constraints: [
                            'set'
                        ],
                        name: 'aria-labelledby'
                    }
                ],
                constraints: [
                    'scoped to a sectioning content element',
                    'scoped to a sectioning root element other than body'
                ],
                name: 'aside'
            },
            module: 'HTML'
        }
    ],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [
        [
            'roletype',
            'structure',
            'section',
            'landmark'
        ]
    ]
};
var _default = complementaryRole;
exports.default = _default;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXN1a2V0c3Vub2RhL0RvY3VtZW50cy9jdXJzb3IvcHB0dHJhbnNsYXRvcmFwcC9ub2RlX21vZHVsZXMvYXJpYS1xdWVyeS9saWIvZXRjL3JvbGVzL2xpdGVyYWwvY29tcGxlbWVudGFyeVJvbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgY29tcGxlbWVudGFyeVJvbGUgPSB7XG4gIGFic3RyYWN0OiBmYWxzZSxcbiAgYWNjZXNzaWJsZU5hbWVSZXF1aXJlZDogZmFsc2UsXG4gIGJhc2VDb25jZXB0czogW10sXG4gIGNoaWxkcmVuUHJlc2VudGF0aW9uYWw6IGZhbHNlLFxuICBuYW1lRnJvbTogWydhdXRob3InXSxcbiAgcHJvaGliaXRlZFByb3BzOiBbXSxcbiAgcHJvcHM6IHt9LFxuICByZWxhdGVkQ29uY2VwdHM6IFt7XG4gICAgY29uY2VwdDoge1xuICAgICAgbmFtZTogJ2FzaWRlJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfSwge1xuICAgIGNvbmNlcHQ6IHtcbiAgICAgIGF0dHJpYnV0ZXM6IFt7XG4gICAgICAgIGNvbnN0cmFpbnRzOiBbJ3NldCddLFxuICAgICAgICBuYW1lOiAnYXJpYS1sYWJlbCdcbiAgICAgIH1dLFxuICAgICAgY29uc3RyYWludHM6IFsnc2NvcGVkIHRvIGEgc2VjdGlvbmluZyBjb250ZW50IGVsZW1lbnQnLCAnc2NvcGVkIHRvIGEgc2VjdGlvbmluZyByb290IGVsZW1lbnQgb3RoZXIgdGhhbiBib2R5J10sXG4gICAgICBuYW1lOiAnYXNpZGUnXG4gICAgfSxcbiAgICBtb2R1bGU6ICdIVE1MJ1xuICB9LCB7XG4gICAgY29uY2VwdDoge1xuICAgICAgYXR0cmlidXRlczogW3tcbiAgICAgICAgY29uc3RyYWludHM6IFsnc2V0J10sXG4gICAgICAgIG5hbWU6ICdhcmlhLWxhYmVsbGVkYnknXG4gICAgICB9XSxcbiAgICAgIGNvbnN0cmFpbnRzOiBbJ3Njb3BlZCB0byBhIHNlY3Rpb25pbmcgY29udGVudCBlbGVtZW50JywgJ3Njb3BlZCB0byBhIHNlY3Rpb25pbmcgcm9vdCBlbGVtZW50IG90aGVyIHRoYW4gYm9keSddLFxuICAgICAgbmFtZTogJ2FzaWRlJ1xuICAgIH0sXG4gICAgbW9kdWxlOiAnSFRNTCdcbiAgfV0sXG4gIHJlcXVpcmVDb250ZXh0Um9sZTogW10sXG4gIHJlcXVpcmVkQ29udGV4dFJvbGU6IFtdLFxuICByZXF1aXJlZE93bmVkRWxlbWVudHM6IFtdLFxuICByZXF1aXJlZFByb3BzOiB7fSxcbiAgc3VwZXJDbGFzczogW1sncm9sZXR5cGUnLCAnc3RydWN0dXJlJywgJ3NlY3Rpb24nLCAnbGFuZG1hcmsnXV1cbn07XG52YXIgX2RlZmF1bHQgPSBjb21wbGVtZW50YXJ5Um9sZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJjb21wbGVtZW50YXJ5Um9sZSIsImFic3RyYWN0IiwiYWNjZXNzaWJsZU5hbWVSZXF1aXJlZCIsImJhc2VDb25jZXB0cyIsImNoaWxkcmVuUHJlc2VudGF0aW9uYWwiLCJuYW1lRnJvbSIsInByb2hpYml0ZWRQcm9wcyIsInByb3BzIiwicmVsYXRlZENvbmNlcHRzIiwiY29uY2VwdCIsIm5hbWUiLCJtb2R1bGUiLCJhdHRyaWJ1dGVzIiwiY29uc3RyYWludHMiLCJyZXF1aXJlQ29udGV4dFJvbGUiLCJyZXF1aXJlZENvbnRleHRSb2xlIiwicmVxdWlyZWRPd25lZEVsZW1lbnRzIiwicmVxdWlyZWRQcm9wcyIsInN1cGVyQ2xhc3MiLCJfZGVmYXVsdCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsY0FBYyxDQUFDQyxTQUFTLGNBQWM7SUFDM0NDLE9BQU87QUFDVDtBQUNBRCxRQUFRRSxPQUFPLEdBQUcsS0FBSztBQUN2QixJQUFJQyxvQkFBb0I7SUFDdEJDLFVBQVU7SUFDVkMsd0JBQXdCO0lBQ3hCQyxjQUFjLEVBQUU7SUFDaEJDLHdCQUF3QjtJQUN4QkMsVUFBVTtRQUFDO0tBQVM7SUFDcEJDLGlCQUFpQixFQUFFO0lBQ25CQyxPQUFPLENBQUM7SUFDUkMsaUJBQWlCO1FBQUM7WUFDaEJDLFNBQVM7Z0JBQ1BDLE1BQU07WUFDUjtZQUNBQyxRQUFRO1FBQ1Y7UUFBRztZQUNERixTQUFTO2dCQUNQRyxZQUFZO29CQUFDO3dCQUNYQyxhQUFhOzRCQUFDO3lCQUFNO3dCQUNwQkgsTUFBTTtvQkFDUjtpQkFBRTtnQkFDRkcsYUFBYTtvQkFBQztvQkFBMEM7aUJBQXNEO2dCQUM5R0gsTUFBTTtZQUNSO1lBQ0FDLFFBQVE7UUFDVjtRQUFHO1lBQ0RGLFNBQVM7Z0JBQ1BHLFlBQVk7b0JBQUM7d0JBQ1hDLGFBQWE7NEJBQUM7eUJBQU07d0JBQ3BCSCxNQUFNO29CQUNSO2lCQUFFO2dCQUNGRyxhQUFhO29CQUFDO29CQUEwQztpQkFBc0Q7Z0JBQzlHSCxNQUFNO1lBQ1I7WUFDQUMsUUFBUTtRQUNWO0tBQUU7SUFDRkcsb0JBQW9CLEVBQUU7SUFDdEJDLHFCQUFxQixFQUFFO0lBQ3ZCQyx1QkFBdUIsRUFBRTtJQUN6QkMsZUFBZSxDQUFDO0lBQ2hCQyxZQUFZO1FBQUM7WUFBQztZQUFZO1lBQWE7WUFBVztTQUFXO0tBQUM7QUFDaEU7QUFDQSxJQUFJQyxXQUFXbkI7QUFDZkgsUUFBUUUsT0FBTyxHQUFHb0IifQ==