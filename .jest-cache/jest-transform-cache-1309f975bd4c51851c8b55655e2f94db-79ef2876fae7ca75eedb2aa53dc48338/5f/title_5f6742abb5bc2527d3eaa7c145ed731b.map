{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/queries/title.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByTitle = exports.queryAllByTitle = exports.getByTitle = exports.getAllByTitle = exports.findByTitle = exports.findAllByTitle = void 0;\nvar _queryHelpers = require(\"../query-helpers\");\nvar _helpers = require(\"../helpers\");\nvar _allUtils = require(\"./all-utils\");\nconst isSvgTitle = node => {\n  var _node$parentElement;\n  return node.tagName.toLowerCase() === 'title' && ((_node$parentElement = node.parentElement) == null ? void 0 : _node$parentElement.tagName.toLowerCase()) === 'svg';\n};\nconst queryAllByTitle = (container, text, {\n  exact = true,\n  collapseWhitespace,\n  trim,\n  normalizer\n} = {}) => {\n  (0, _helpers.checkContainerType)(container);\n  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  return Array.from(container.querySelectorAll('[title], svg > title')).filter(node => matcher(node.getAttribute('title'), node, text, matchNormalizer) || isSvgTitle(node) && matcher((0, _allUtils.getNodeText)(node), node, text, matchNormalizer));\n};\nconst getMultipleError = (c, title) => `Found multiple elements with the title: ${title}.`;\nconst getMissingError = (c, title) => `Unable to find an element with the title: ${title}.`;\nconst queryAllByTitleWithSuggestions = exports.queryAllByTitle = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByTitle, queryAllByTitle.name, 'queryAll');\nconst [queryByTitle, getAllByTitle, getByTitle, findAllByTitle, findByTitle] = (0, _allUtils.buildQueries)(queryAllByTitle, getMultipleError, getMissingError);\nexports.findByTitle = findByTitle;\nexports.findAllByTitle = findAllByTitle;\nexports.getByTitle = getByTitle;\nexports.getAllByTitle = getAllByTitle;\nexports.queryByTitle = queryByTitle;"],"names":["Object","defineProperty","exports","value","queryByTitle","queryAllByTitle","getByTitle","getAllByTitle","findByTitle","findAllByTitle","_queryHelpers","require","_helpers","_allUtils","isSvgTitle","node","_node$parentElement","tagName","toLowerCase","parentElement","container","text","exact","collapseWhitespace","trim","normalizer","checkContainerType","matcher","matches","fuzzyMatches","matchNormalizer","makeNormalizer","Array","from","querySelectorAll","filter","getAttribute","getNodeText","getMultipleError","c","title","getMissingError","queryAllByTitleWithSuggestions","wrapAllByQueryWithSuggestion","name","buildQueries"],"mappings":"AAAA;AAEAA,OAAOC,cAAc,CAACC,SAAS,cAAc;IAC3CC,OAAO;AACT;AACAD,QAAQE,YAAY,GAAGF,QAAQG,eAAe,GAAGH,QAAQI,UAAU,GAAGJ,QAAQK,aAAa,GAAGL,QAAQM,WAAW,GAAGN,QAAQO,cAAc,GAAG,KAAK;AAClJ,IAAIC,gBAAgBC,QAAQ;AAC5B,IAAIC,WAAWD,QAAQ;AACvB,IAAIE,YAAYF,QAAQ;AACxB,MAAMG,aAAaC,CAAAA;IACjB,IAAIC;IACJ,OAAOD,KAAKE,OAAO,CAACC,WAAW,OAAO,WAAW,AAAC,CAAA,AAACF,CAAAA,sBAAsBD,KAAKI,aAAa,AAAD,KAAM,OAAO,KAAK,IAAIH,oBAAoBC,OAAO,CAACC,WAAW,EAAC,MAAO;AACjK;AACA,MAAMb,kBAAkB,CAACe,WAAWC,MAAM,EACxCC,QAAQ,IAAI,EACZC,kBAAkB,EAClBC,IAAI,EACJC,UAAU,EACX,GAAG,CAAC,CAAC;IACH,CAAA,GAAGb,SAASc,kBAAkB,AAAD,EAAGN;IACjC,MAAMO,UAAUL,QAAQT,UAAUe,OAAO,GAAGf,UAAUgB,YAAY;IAClE,MAAMC,kBAAkB,AAAC,CAAA,GAAGjB,UAAUkB,cAAc,AAAD,EAAG;QACpDR;QACAC;QACAC;IACF;IACA,OAAOO,MAAMC,IAAI,CAACb,UAAUc,gBAAgB,CAAC,yBAAyBC,MAAM,CAACpB,CAAAA,OAAQY,QAAQZ,KAAKqB,YAAY,CAAC,UAAUrB,MAAMM,MAAMS,oBAAoBhB,WAAWC,SAASY,QAAQ,AAAC,CAAA,GAAGd,UAAUwB,WAAW,AAAD,EAAGtB,OAAOA,MAAMM,MAAMS;AACrO;AACA,MAAMQ,mBAAmB,CAACC,GAAGC,QAAU,CAAC,wCAAwC,EAAEA,MAAM,CAAC,CAAC;AAC1F,MAAMC,kBAAkB,CAACF,GAAGC,QAAU,CAAC,0CAA0C,EAAEA,MAAM,CAAC,CAAC;AAC3F,MAAME,iCAAiCxC,QAAQG,eAAe,GAAG,AAAC,CAAA,GAAGK,cAAciC,4BAA4B,AAAD,EAAGtC,iBAAiBA,gBAAgBuC,IAAI,EAAE;AACxJ,MAAM,CAACxC,cAAcG,eAAeD,YAAYG,gBAAgBD,YAAY,GAAG,AAAC,CAAA,GAAGK,UAAUgC,YAAY,AAAD,EAAGxC,iBAAiBiC,kBAAkBG;AAC9IvC,QAAQM,WAAW,GAAGA;AACtBN,QAAQO,cAAc,GAAGA;AACzBP,QAAQI,UAAU,GAAGA;AACrBJ,QAAQK,aAAa,GAAGA;AACxBL,QAAQE,YAAY,GAAGA"}