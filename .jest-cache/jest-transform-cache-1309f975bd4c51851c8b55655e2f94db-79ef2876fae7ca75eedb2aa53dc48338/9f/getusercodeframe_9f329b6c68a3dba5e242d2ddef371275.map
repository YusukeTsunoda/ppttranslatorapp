{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/get-user-code-frame.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserCodeFrame = getUserCodeFrame;\n// We try to load node dependencies\nlet chalk = null;\nlet readFileSync = null;\nlet codeFrameColumns = null;\ntry {\n  const nodeRequire = module && module.require;\n  readFileSync = nodeRequire.call(module, 'fs').readFileSync;\n  codeFrameColumns = nodeRequire.call(module, '@babel/code-frame').codeFrameColumns;\n  chalk = nodeRequire.call(module, 'chalk');\n} catch {\n  // We're in a browser environment\n}\n\n// frame has the form \"at myMethod (location/to/my/file.js:10:2)\"\nfunction getCodeFrame(frame) {\n  const locationStart = frame.indexOf('(') + 1;\n  const locationEnd = frame.indexOf(')');\n  const frameLocation = frame.slice(locationStart, locationEnd);\n  const frameLocationElements = frameLocation.split(':');\n  const [filename, line, column] = [frameLocationElements[0], parseInt(frameLocationElements[1], 10), parseInt(frameLocationElements[2], 10)];\n  let rawFileContents = '';\n  try {\n    rawFileContents = readFileSync(filename, 'utf-8');\n  } catch {\n    return '';\n  }\n  const codeFrame = codeFrameColumns(rawFileContents, {\n    start: {\n      line,\n      column\n    }\n  }, {\n    highlightCode: true,\n    linesBelow: 0\n  });\n  return `${chalk.dim(frameLocation)}\\n${codeFrame}\\n`;\n}\nfunction getUserCodeFrame() {\n  // If we couldn't load dependencies, we can't generate the user trace\n  /* istanbul ignore next */\n  if (!readFileSync || !codeFrameColumns) {\n    return '';\n  }\n  const err = new Error();\n  const firstClientCodeFrame = err.stack.split('\\n').slice(1) // Remove first line which has the form \"Error: TypeError\"\n  .find(frame => !frame.includes('node_modules/')); // Ignore frames from 3rd party libraries\n\n  return getCodeFrame(firstClientCodeFrame);\n}"],"names":["Object","defineProperty","exports","value","getUserCodeFrame","chalk","readFileSync","codeFrameColumns","nodeRequire","module","require","call","getCodeFrame","frame","locationStart","indexOf","locationEnd","frameLocation","slice","frameLocationElements","split","filename","line","column","parseInt","rawFileContents","codeFrame","start","highlightCode","linesBelow","dim","err","Error","firstClientCodeFrame","stack","find","includes"],"mappings":"AAAA;AAEAA,OAAOC,cAAc,CAACC,SAAS,cAAc;IAC3CC,OAAO;AACT;AACAD,QAAQE,gBAAgB,GAAGA;AAC3B,mCAAmC;AACnC,IAAIC,QAAQ;AACZ,IAAIC,eAAe;AACnB,IAAIC,mBAAmB;AACvB,IAAI;IACF,MAAMC,cAAcC,UAAUA,OAAOC,OAAO;IAC5CJ,eAAeE,YAAYG,IAAI,CAACF,QAAQ,MAAMH,YAAY;IAC1DC,mBAAmBC,YAAYG,IAAI,CAACF,QAAQ,qBAAqBF,gBAAgB;IACjFF,QAAQG,YAAYG,IAAI,CAACF,QAAQ;AACnC,EAAE,OAAM;AACN,iCAAiC;AACnC;AAEA,iEAAiE;AACjE,SAASG,aAAaC,KAAK;IACzB,MAAMC,gBAAgBD,MAAME,OAAO,CAAC,OAAO;IAC3C,MAAMC,cAAcH,MAAME,OAAO,CAAC;IAClC,MAAME,gBAAgBJ,MAAMK,KAAK,CAACJ,eAAeE;IACjD,MAAMG,wBAAwBF,cAAcG,KAAK,CAAC;IAClD,MAAM,CAACC,UAAUC,MAAMC,OAAO,GAAG;QAACJ,qBAAqB,CAAC,EAAE;QAAEK,SAASL,qBAAqB,CAAC,EAAE,EAAE;QAAKK,SAASL,qBAAqB,CAAC,EAAE,EAAE;KAAI;IAC3I,IAAIM,kBAAkB;IACtB,IAAI;QACFA,kBAAkBnB,aAAae,UAAU;IAC3C,EAAE,OAAM;QACN,OAAO;IACT;IACA,MAAMK,YAAYnB,iBAAiBkB,iBAAiB;QAClDE,OAAO;YACLL;YACAC;QACF;IACF,GAAG;QACDK,eAAe;QACfC,YAAY;IACd;IACA,OAAO,GAAGxB,MAAMyB,GAAG,CAACb,eAAe,EAAE,EAAES,UAAU,EAAE,CAAC;AACtD;AACA,SAAStB;IACP,qEAAqE;IACrE,wBAAwB,GACxB,IAAI,CAACE,gBAAgB,CAACC,kBAAkB;QACtC,OAAO;IACT;IACA,MAAMwB,MAAM,IAAIC;IAChB,MAAMC,uBAAuBF,IAAIG,KAAK,CAACd,KAAK,CAAC,MAAMF,KAAK,CAAC,GAAG,0DAA0D;KACrHiB,IAAI,CAACtB,CAAAA,QAAS,CAACA,MAAMuB,QAAQ,CAAC,mBAAmB,yCAAyC;IAE3F,OAAOxB,aAAaqB;AACtB"}