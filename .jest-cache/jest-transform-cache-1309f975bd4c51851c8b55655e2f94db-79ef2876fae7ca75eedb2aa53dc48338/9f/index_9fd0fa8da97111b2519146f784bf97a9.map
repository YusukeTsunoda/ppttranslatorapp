{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/chalk/source/index.js"],"sourcesContent":["'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor, stderr: stderrColor} = require('supports-color');\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` â†’ `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = require('./templates');\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n"],"names":["ansiStyles","require","stdout","stdoutColor","stderr","stderrColor","stringReplaceAll","stringEncaseCRLFWithFirstIndex","isArray","Array","levelMapping","styles","Object","create","applyOptions","object","options","level","Number","isInteger","Error","colorLevel","undefined","ChalkClass","constructor","chalkFactory","chalk","template","arguments_","chalkTag","setPrototypeOf","Chalk","prototype","Instance","styleName","style","entries","get","builder","createBuilder","createStyler","open","close","_styler","_isEmpty","defineProperty","value","visible","usedModels","model","styler","color","bgModel","toUpperCase","slice","bgColor","proto","defineProperties","enumerable","_generator","set","parent","openAll","closeAll","self","raw","applyStyle","length","join","string","indexOf","lfIndex","strings","firstString","parts","i","push","String","replace","supportsColor","module","exports"],"mappings":"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"}