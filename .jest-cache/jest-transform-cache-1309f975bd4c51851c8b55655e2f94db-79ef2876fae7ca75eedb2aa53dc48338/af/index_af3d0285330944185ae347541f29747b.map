{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/node_modules/@testing-library/react/dist/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _actCompat = require(\"./act-compat\");\nvar _pure = require(\"./pure\");\nObject.keys(_pure).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _pure[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _pure[key];\n    }\n  });\n});\nvar _process$env;\n// if we're running in a test runner that supports afterEach\n// or teardown then we'll automatically run cleanup afterEach test\n// this ensures that tests run in isolation from each other\n// if you don't like this then either import the `pure` module\n// or set the RTL_SKIP_AUTO_CLEANUP env variable to 'true'.\nif (typeof process === 'undefined' || !((_process$env = process.env) != null && _process$env.RTL_SKIP_AUTO_CLEANUP)) {\n  // ignore teardown() in code coverage because Jest does not support it\n  /* istanbul ignore else */\n  if (typeof afterEach === 'function') {\n    afterEach(() => {\n      (0, _pure.cleanup)();\n    });\n  } else if (typeof teardown === 'function') {\n    // Block is guarded by `typeof` check.\n    // eslint does not support `typeof` guards.\n    // eslint-disable-next-line no-undef\n    teardown(() => {\n      (0, _pure.cleanup)();\n    });\n  }\n\n  // No test setup with other test runners available\n  /* istanbul ignore else */\n  if (typeof beforeAll === 'function' && typeof afterAll === 'function') {\n    // This matches the behavior of React < 18.\n    let previousIsReactActEnvironment = (0, _actCompat.getIsReactActEnvironment)();\n    beforeAll(() => {\n      previousIsReactActEnvironment = (0, _actCompat.getIsReactActEnvironment)();\n      (0, _actCompat.setReactActEnvironment)(true);\n    });\n    afterAll(() => {\n      (0, _actCompat.setReactActEnvironment)(previousIsReactActEnvironment);\n    });\n  }\n}"],"names":["Object","defineProperty","exports","value","_actCompat","require","_pure","keys","forEach","key","enumerable","get","_process$env","process","env","RTL_SKIP_AUTO_CLEANUP","afterEach","cleanup","teardown","beforeAll","afterAll","previousIsReactActEnvironment","getIsReactActEnvironment","setReactActEnvironment"],"mappings":"AAAA;AAEAA,OAAOC,cAAc,CAACC,SAAS,cAAc;IAC3CC,OAAO;AACT;AACA,IAAIC,aAAaC,QAAQ;AACzB,IAAIC,QAAQD,QAAQ;AACpBL,OAAOO,IAAI,CAACD,OAAOE,OAAO,CAAC,SAAUC,GAAG;IACtC,IAAIA,QAAQ,aAAaA,QAAQ,cAAc;IAC/C,IAAIA,OAAOP,WAAWA,OAAO,CAACO,IAAI,KAAKH,KAAK,CAACG,IAAI,EAAE;IACnDT,OAAOC,cAAc,CAACC,SAASO,KAAK;QAClCC,YAAY;QACZC,KAAK;YACH,OAAOL,KAAK,CAACG,IAAI;QACnB;IACF;AACF;AACA,IAAIG;AACJ,4DAA4D;AAC5D,kEAAkE;AAClE,2DAA2D;AAC3D,8DAA8D;AAC9D,2DAA2D;AAC3D,IAAI,OAAOC,YAAY,eAAe,CAAE,CAAA,AAACD,CAAAA,eAAeC,QAAQC,GAAG,AAAD,KAAM,QAAQF,aAAaG,qBAAqB,AAAD,GAAI;IACnH,sEAAsE;IACtE,wBAAwB,GACxB,IAAI,OAAOC,cAAc,YAAY;QACnCA,UAAU;YACP,CAAA,GAAGV,MAAMW,OAAO,AAAD;QAClB;IACF,OAAO,IAAI,OAAOC,aAAa,YAAY;QACzC,sCAAsC;QACtC,2CAA2C;QAC3C,oCAAoC;QACpCA,SAAS;YACN,CAAA,GAAGZ,MAAMW,OAAO,AAAD;QAClB;IACF;IAEA,kDAAkD;IAClD,wBAAwB,GACxB,IAAI,OAAOE,cAAc,cAAc,OAAOC,aAAa,YAAY;QACrE,2CAA2C;QAC3C,IAAIC,gCAAgC,AAAC,CAAA,GAAGjB,WAAWkB,wBAAwB,AAAD;QAC1EH,UAAU;YACRE,gCAAgC,AAAC,CAAA,GAAGjB,WAAWkB,wBAAwB,AAAD;YACrE,CAAA,GAAGlB,WAAWmB,sBAAsB,AAAD,EAAG;QACzC;QACAH,SAAS;YACN,CAAA,GAAGhB,WAAWmB,sBAAsB,AAAD,EAAGF;QACzC;IACF;AACF"}