{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/lib/utils/api-logging.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\n// APIリクエストを処理する前の処理を行うラッパー関数\nexport function withAPILogging<T extends (...args: any[]) => Promise<NextResponse>>(\n  handler: T,\n  route: string\n): (...funcArgs: Parameters<T>) => Promise<NextResponse> {\n  return async (...args: Parameters<T>) => {\n    const startTime = Date.now();\n    const requestInfo = extractRequestInfo(args[0] as NextRequest);\n    \n    console.log(`[API:${route}] リクエスト開始:`, {\n      route,\n      method: requestInfo.method,\n      path: requestInfo.path,\n      query: requestInfo.query,\n      timestamp: new Date().toISOString(),\n    });\n\n    try {\n      const response = await handler(...args);\n      \n      const endTime = Date.now();\n      console.log(`[API:${route}] リクエスト完了:`, {\n        route,\n        method: requestInfo.method,\n        path: requestInfo.path,\n        statusCode: response.status,\n        duration: `${endTime - startTime}ms`,\n        timestamp: new Date().toISOString(),\n      });\n      \n      return response;\n    } catch (error) {\n      const endTime = Date.now();\n      console.error(`[API:${route}] エラー発生:`, {\n        route,\n        method: requestInfo.method,\n        path: requestInfo.path,\n        error: error instanceof Error ? error.message : String(error),\n        stack: error instanceof Error ? error.stack : undefined,\n        duration: `${endTime - startTime}ms`,\n        timestamp: new Date().toISOString(),\n      });\n      \n      // エラーに対するレスポンスを返す\n      return new NextResponse(\n        JSON.stringify({\n          error: 'Internal Server Error',\n          message: process.env.NODE_ENV === 'development' \n            ? (error instanceof Error ? error.message : String(error))\n            : 'サーバーエラーが発生しました'\n        }),\n        { \n          status: 500,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n    }\n  };\n}\n\n// NextRequestから必要な情報を抽出するヘルパー関数\nfunction extractRequestInfo(request: NextRequest) {\n  return {\n    method: request.method,\n    path: request.nextUrl.pathname,\n    query: Object.fromEntries(request.nextUrl.searchParams.entries()),\n    headers: Object.fromEntries(request.headers.entries()),\n  };\n}\n\n// アプリケーション起動時にAPI構築状況をログに記録\nexport function logAPIBuildStatus() {\n  console.log('[API:BUILD] APIルートのビルド状況:', {\n    timestamp: new Date().toISOString(),\n    environment: process.env.NODE_ENV || 'unknown',\n    buildId: process.env.BUILD_ID || 'unknown',\n    isServer: process.env.BUILD_IS_SERVER === 'true',\n    isDev: process.env.BUILD_IS_DEV === 'true',\n  });\n} "],"names":["logAPIBuildStatus","withAPILogging","handler","route","args","startTime","Date","now","requestInfo","extractRequestInfo","console","log","method","path","query","timestamp","toISOString","response","endTime","statusCode","status","duration","error","Error","message","String","stack","undefined","NextResponse","JSON","stringify","process","env","NODE_ENV","headers","request","nextUrl","pathname","Object","fromEntries","searchParams","entries","environment","buildId","BUILD_ID","isServer","BUILD_IS_SERVER","isDev","BUILD_IS_DEV"],"mappings":";;;;;;;;;;;IA2EgBA,iBAAiB;eAAjBA;;IAxEAC,cAAc;eAAdA;;;wBAH0B;AAGnC,SAASA,eACdC,OAAU,EACVC,KAAa;IAEb,OAAO,OAAO,GAAGC;QACf,MAAMC,YAAYC,KAAKC,GAAG;QAC1B,MAAMC,cAAcC,mBAAmBL,IAAI,CAAC,EAAE;QAE9CM,QAAQC,GAAG,CAAC,CAAC,KAAK,EAAER,MAAM,UAAU,CAAC,EAAE;YACrCA;YACAS,QAAQJ,YAAYI,MAAM;YAC1BC,MAAML,YAAYK,IAAI;YACtBC,OAAON,YAAYM,KAAK;YACxBC,WAAW,IAAIT,OAAOU,WAAW;QACnC;QAEA,IAAI;YACF,MAAMC,WAAW,MAAMf,WAAWE;YAElC,MAAMc,UAAUZ,KAAKC,GAAG;YACxBG,QAAQC,GAAG,CAAC,CAAC,KAAK,EAAER,MAAM,UAAU,CAAC,EAAE;gBACrCA;gBACAS,QAAQJ,YAAYI,MAAM;gBAC1BC,MAAML,YAAYK,IAAI;gBACtBM,YAAYF,SAASG,MAAM;gBAC3BC,UAAU,GAAGH,UAAUb,UAAU,EAAE,CAAC;gBACpCU,WAAW,IAAIT,OAAOU,WAAW;YACnC;YAEA,OAAOC;QACT,EAAE,OAAOK,OAAO;YACd,MAAMJ,UAAUZ,KAAKC,GAAG;YACxBG,QAAQY,KAAK,CAAC,CAAC,KAAK,EAAEnB,MAAM,QAAQ,CAAC,EAAE;gBACrCA;gBACAS,QAAQJ,YAAYI,MAAM;gBAC1BC,MAAML,YAAYK,IAAI;gBACtBS,OAAOA,iBAAiBC,QAAQD,MAAME,OAAO,GAAGC,OAAOH;gBACvDI,OAAOJ,iBAAiBC,QAAQD,MAAMI,KAAK,GAAGC;gBAC9CN,UAAU,GAAGH,UAAUb,UAAU,EAAE,CAAC;gBACpCU,WAAW,IAAIT,OAAOU,WAAW;YACnC;YAEA,kBAAkB;YAClB,OAAO,IAAIY,oBAAY,CACrBC,KAAKC,SAAS,CAAC;gBACbR,OAAO;gBACPE,SAASO,QAAQC,GAAG,CAACC,QAAQ,KAAK,gBAC7BX,iBAAiBC,QAAQD,MAAME,OAAO,GAAGC,OAAOH,SACjD;YACN,IACA;gBACEF,QAAQ;gBACRc,SAAS;oBACP,gBAAgB;gBAClB;YACF;QAEJ;IACF;AACF;AAEA,gCAAgC;AAChC,SAASzB,mBAAmB0B,OAAoB;IAC9C,OAAO;QACLvB,QAAQuB,QAAQvB,MAAM;QACtBC,MAAMsB,QAAQC,OAAO,CAACC,QAAQ;QAC9BvB,OAAOwB,OAAOC,WAAW,CAACJ,QAAQC,OAAO,CAACI,YAAY,CAACC,OAAO;QAC9DP,SAASI,OAAOC,WAAW,CAACJ,QAAQD,OAAO,CAACO,OAAO;IACrD;AACF;AAGO,SAASzC;IACdU,QAAQC,GAAG,CAAC,6BAA6B;QACvCI,WAAW,IAAIT,OAAOU,WAAW;QACjC0B,aAAaX,QAAQC,GAAG,CAACC,QAAQ,IAAI;QACrCU,SAASZ,QAAQC,GAAG,CAACY,QAAQ,IAAI;QACjCC,UAAUd,QAAQC,GAAG,CAACc,eAAe,KAAK;QAC1CC,OAAOhB,QAAQC,GAAG,CAACgB,YAAY,KAAK;IACtC;AACF"}