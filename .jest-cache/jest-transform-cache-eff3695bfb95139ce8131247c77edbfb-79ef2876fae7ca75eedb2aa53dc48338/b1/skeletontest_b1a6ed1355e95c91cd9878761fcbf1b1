d607e4fa6e3e55765f95f82ec2b78abc
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _interop_require_default = require("@swc/helpers/_/_interop_require_default");
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default._(require("react"));
const _react1 = require("@testing-library/react");
const _skeleton = require("@/components/ui/skeleton");
require("@testing-library/jest-dom");
describe('Skeleton', ()=>{
    it('デフォルトのスタイルでレンダリングされること', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_skeleton.Skeleton, {}));
        const skeleton = _react1.screen.getByTestId('skeleton');
        expect(skeleton).toBeInTheDocument();
        expect(skeleton).toHaveClass('animate-pulse');
        expect(skeleton).toHaveClass('rounded-md');
        expect(skeleton).toHaveClass('bg-muted');
    });
    it('カスタムクラス名が適用されること', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_skeleton.Skeleton, {
            className: "w-40 h-10 custom-class"
        }));
        const skeleton = _react1.screen.getByTestId('skeleton');
        expect(skeleton).toHaveClass('w-40');
        expect(skeleton).toHaveClass('h-10');
        expect(skeleton).toHaveClass('custom-class');
    });
    it('子要素を持つことができること', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_skeleton.Skeleton, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "child",
                children: "子要素"
            })
        }));
        const skeleton = _react1.screen.getByTestId('skeleton');
        const child = _react1.screen.getByTestId('child');
        expect(skeleton).toContainElement(child);
        expect(child).toHaveTextContent('子要素');
    });
});
