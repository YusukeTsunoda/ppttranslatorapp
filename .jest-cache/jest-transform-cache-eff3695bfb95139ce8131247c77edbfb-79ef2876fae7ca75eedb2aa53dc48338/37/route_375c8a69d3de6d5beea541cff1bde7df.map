{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/app/api/pptx/generate/route.ts"],"sourcesContent":["// Node.jsランタイムを明示的に指定\n// ファイルシステム操作とchild_processを含むため、Edge Runtimeでは動作しません\nexport const runtime = 'nodejs';\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { exec } from 'child_process';\nimport { promisify } from 'util';\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth/auth-options';\nimport { filePathManager } from '@/lib/utils/file-utils';\n\nconst execAsync = promisify(exec);\n\nexport async function POST(req: NextRequest) {\n  try {\n    // セッションチェック\n    const session = await getServerSession(authOptions);\n    if (!session || !session.user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    // リクエストボディを取得\n    const body = await req.json();\n    const { fileId, translations } = body;\n\n    if (!fileId || !translations) {\n      return NextResponse.json({ error: 'Missing required parameters' }, { status: 400 });\n    }\n\n    // ユーザーIDを取得\n    const userId = session.user.id.toString();\n\n    // ディレクトリパスを設定\n    const userDir = path.join(process.cwd(), 'tmp', 'users', userId);\n    const uploadsDir = path.join(userDir, 'uploads');\n\n    // デバッグ用のログ出力\n    console.log('Debug info:', {\n      userDir,\n      uploadsDir,\n      fileId,\n      exists: {\n        userDir: await fs\n          .access(userDir)\n          .then(() => true)\n          .catch(() => false),\n        uploadsDir: await fs\n          .access(uploadsDir)\n          .then(() => true)\n          .catch(() => false),\n      },\n    });\n\n    // filePathManagerを使用して実際のファイルを検索 - 修正部分\n    const actualOriginalFilePath = await filePathManager.findActualFilePath(userId, fileId, 'original');\n    if (!actualOriginalFilePath) {\n      console.error('Original PPTX file not found for fileId:', fileId);\n      try {\n        const files = await fs.readdir(uploadsDir);\n        console.log('Available files in uploads directory:', files);\n      } catch (e) {\n        console.error('Failed to read uploads directory:', e);\n      }\n      return NextResponse.json({ error: 'Original PPTX file not found' }, { status: 404 });\n    }\n\n    console.log('Found original file:', actualOriginalFilePath);\n\n    const translationsJsonPath = path.join(uploadsDir, `${fileId}_translations.json`);\n    const outputPath = path.join(uploadsDir, `${fileId}_translated.pptx`);\n\n    // ディレクトリの存在確認と作成\n    await fs.mkdir(uploadsDir, { recursive: true });\n\n    // ファイルの存在確認\n    try {\n      await fs.access(actualOriginalFilePath);\n      console.log('Found original PPTX at:', actualOriginalFilePath);\n    } catch (error) {\n      console.error('Original PPTX not found:', actualOriginalFilePath);\n      try {\n        const files = await fs.readdir(uploadsDir);\n        console.log('Available files in uploads directory:', files);\n      } catch (e) {\n        console.error('Failed to read uploads directory:', e);\n      }\n      return NextResponse.json({ error: 'Original PPTX file not found' }, { status: 404 });\n    }\n\n    // 翻訳データをJSONファイルとして保存\n    await fs.writeFile(translationsJsonPath, JSON.stringify(translations));\n\n    try {\n      // Python スクリプトを実行\n      const pythonScript = path.join(process.cwd(), 'lib', 'python', 'pptx_generator.py');\n\n      // スクリプトの存在確認\n      try {\n        await fs.access(pythonScript);\n      } catch {\n        console.error('Python script not found:', pythonScript);\n        return NextResponse.json({ error: 'Python script not found' }, { status: 500 });\n      }\n\n      // スクリプトの実行権限を確認\n      try {\n        await fs.access(pythonScript, fs.constants.X_OK);\n      } catch (err) {\n        console.error('Python script is not executable:', err instanceof Error ? err.message : String(err));\n        return NextResponse.json({ error: 'Python script is not executable' }, { status: 500 });\n      }\n\n      // アップロードディレクトリの作成\n      const uploadDir = path.join(process.cwd(), 'tmp', 'users', userId, 'uploads');\n      await fs.mkdir(uploadDir, { recursive: true });\n\n      // Pythonスクリプトの実行（実際のファイルパスを使用）\n      console.log('Executing Python script with paths:', {\n        pythonScript,\n        actualOriginalFilePath, // 実際のファイルパスを使用\n        translationsJsonPath,\n        outputPath,\n      });\n\n      // 翻訳データの内容をログ出力\n      console.log('Translation data:', JSON.stringify(translations, null, 2));\n      console.log('Sample translation from first slide:', translations[0]?.texts?.[0]);\n\n      const { stdout, stderr } = await execAsync(\n        `python3 \"${pythonScript}\" \"${actualOriginalFilePath}\" \"${translationsJsonPath}\" \"${outputPath}\"`,\n      );\n\n      if (stderr) {\n        console.error('Python script stderr:', stderr);\n      }\n      if (stdout) {\n        console.log('Python script stdout:', stdout);\n        try {\n          const result = JSON.parse(stdout);\n          if (!result.success) {\n            console.error('Python script error:', result.error);\n            return NextResponse.json({ error: `Failed to generate PPTX: ${result.error}` }, { status: 500 });\n          }\n        } catch (e) {\n          console.error('Failed to parse Python script output:', stdout);\n        }\n      }\n\n      // 生成されたファイルの存在確認\n      try {\n        await fs.access(outputPath);\n      } catch {\n        console.error('Generated PPTX file not found:', outputPath);\n        return NextResponse.json({ error: 'Generated PPTX file not found' }, { status: 500 });\n      }\n\n      // 一時ファイルを削除\n      await fs.unlink(translationsJsonPath).catch(console.error);\n\n      // 成功レスポンスを返す\n      return NextResponse.json({\n        success: true,\n        downloadUrl: `/api/download/${userId}/${fileId}_translated.pptx`,\n      });\n    } catch (error) {\n      console.error('Error executing Python script:', error instanceof Error ? error.message : String(error));\n      return NextResponse.json(\n        { error: 'Failed to generate PPTX: ' + (error instanceof Error ? error.message : String(error)) },\n        { status: 500 },\n      );\n    }\n  } catch (error) {\n    console.error('Error generating PPTX:', error instanceof Error ? error.message : String(error));\n    return NextResponse.json({ error: 'Failed to generate PPTX' }, { status: 500 });\n  }\n}\n"],"names":["POST","runtime","execAsync","promisify","exec","req","session","getServerSession","authOptions","user","NextResponse","json","error","status","body","fileId","translations","userId","id","toString","userDir","path","join","process","cwd","uploadsDir","console","log","exists","fs","access","then","catch","actualOriginalFilePath","filePathManager","findActualFilePath","files","readdir","e","translationsJsonPath","outputPath","mkdir","recursive","writeFile","JSON","stringify","pythonScript","constants","X_OK","err","Error","message","String","uploadDir","texts","stdout","stderr","result","parse","success","unlink","downloadUrl"],"mappings":"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"}