{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/tests/hooks/useActivityLogs.test.tsx"],"sourcesContent":["import React from 'react';\nimport { renderHook, act } from '@testing-library/react';\nimport { useActivityLogs } from '@/lib/hooks/useActivityLogs';\nimport { getUserActivityLogs } from '@/lib/utils/activity-logger';\nimport { ActivityAction } from '@/lib/utils/activity-logger';\nimport { expect } from '@jest/globals';\n\n// アクティビティロガーのモック\njest.mock('@/lib/utils/activity-logger', () => ({\n  getUserActivityLogs: jest.fn(),\n  ActivityAction: {\n    sign_in: 'sign_in',\n    file_upload: 'file_upload',\n    translation: 'translation'\n  }\n}));\n\n// SWRのモック\njest.mock('swr', () => ({\n  __esModule: true,\n  default: jest.fn()\n}));\n\nimport useSWR from 'swr';\n\ndescribe('useActivityLogs', () => {\n  const userId = 'test-user-123';\n  const mockLogs = [\n    { id: '1', userId, action: ActivityAction.sign_in, createdAt: new Date() },\n    { id: '2', userId, action: ActivityAction.file_upload, createdAt: new Date() }\n  ];\n  \n  beforeEach(() => {\n    jest.clearAllMocks();\n    \n    // SWRのモック実装\n    (useSWR as jest.Mock).mockImplementation(() => ({\n      data: {\n        logs: mockLogs,\n        nextCursor: undefined\n      },\n      mutate: jest.fn()\n    }));\n    \n    // getUserActivityLogsのモック実装\n    (getUserActivityLogs as jest.Mock).mockResolvedValue({\n      logs: mockLogs,\n      nextCursor: undefined\n    });\n  });\n\n  it('ユーザーIDが提供された場合、アクティビティログを取得する', async () => {\n    const { result } = renderHook(() => useActivityLogs(userId));\n    \n    // useEffectが実行されるのを待つ\n    await act(async () => {\n      await new Promise(resolve => setTimeout(resolve, 0));\n    });\n    \n    // 結果の検証\n    expect(result.current.logs).toEqual(mockLogs);\n    expect(result.current.isLoading).toBe(false);\n    expect(result.current.error).toBeNull();\n    expect(result.current.hasMore).toBe(true);\n  });\n\n  it('ユーザーIDがない場合、データを取得しない', () => {\n    const { result } = renderHook(() => useActivityLogs(undefined));\n    \n    expect(useSWR).toHaveBeenCalledWith(null, expect.any(Function), expect.any(Object));\n    expect(result.current.logs).toEqual([]);\n  });\n\n  it('loadMore関数が正しく動作する', async () => {\n    const { result } = renderHook(() => useActivityLogs(userId));\n    \n    // useEffectが実行されるのを待つ\n    await act(async () => {\n      await new Promise(resolve => setTimeout(resolve, 0));\n    });\n    \n    // loadMore関数を呼び出す\n    await act(async () => {\n      await result.current.loadMore();\n    });\n    \n    // isLoadingMoreがfalseに戻ることを確認\n    expect(result.current.isLoadingMore).toBe(false);\n  });\n\n  it('mutate関数が利用可能である', async () => {\n    const { result } = renderHook(() => useActivityLogs(userId));\n    \n    // useEffectが実行されるのを待つ\n    await act(async () => {\n      await new Promise(resolve => setTimeout(resolve, 0));\n    });\n    \n    expect(result.current.mutate).toBeDefined();\n    expect(typeof result.current.mutate).toBe('function');\n  });\n});\n"],"names":["jest","mock","getUserActivityLogs","fn","ActivityAction","sign_in","file_upload","translation","__esModule","default","describe","userId","mockLogs","id","action","createdAt","Date","beforeEach","clearAllMocks","useSWR","mockImplementation","data","logs","nextCursor","undefined","mutate","mockResolvedValue","it","result","renderHook","useActivityLogs","act","Promise","resolve","setTimeout","expect","current","toEqual","isLoading","toBe","error","toBeNull","hasMore","toHaveBeenCalledWith","any","Function","Object","loadMore","isLoadingMore","toBeDefined"],"mappings":"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"}