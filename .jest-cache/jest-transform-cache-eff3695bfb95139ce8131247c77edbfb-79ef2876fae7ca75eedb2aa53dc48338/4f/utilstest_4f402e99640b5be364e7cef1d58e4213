7ddebfa29b2c1004d449d64f5333b109
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _utils = require("@/lib/utils");
const _globals = require("@jest/globals");
describe('cn function', ()=>{
    it('クラス名を正しく結合する', ()=>{
        // 基本的な結合
        (0, _globals.expect)((0, _utils.cn)('class1', 'class2')).toBe('class1 class2');
        // 条件付きクラス
        (0, _globals.expect)((0, _utils.cn)('class1', true && 'class2', false && 'class3')).toBe('class1 class2');
        // オブジェクト形式
        (0, _globals.expect)((0, _utils.cn)('class1', {
            class2: true,
            class3: false
        })).toBe('class1 class2');
        // 配列形式
        (0, _globals.expect)((0, _utils.cn)('class1', [
            'class2',
            'class3'
        ])).toBe('class1 class2 class3');
        // tailwindのクラス結合（競合解決）
        (0, _globals.expect)((0, _utils.cn)('p-4 text-red-500', 'p-6')).toBe('text-red-500 p-6');
    });
    it('空の入力を処理する', ()=>{
        (0, _globals.expect)((0, _utils.cn)()).toBe('');
        (0, _globals.expect)((0, _utils.cn)('')).toBe('');
        (0, _globals.expect)((0, _utils.cn)(null)).toBe('');
        (0, _globals.expect)((0, _utils.cn)(undefined)).toBe('');
    });
});
describe('formatDate function', ()=>{
    it('日付を日本語形式でフォーマットする', ()=>{
        // 特定の日付でテスト
        const date = new Date(2023, 0, 15); // 2023年1月15日
        (0, _globals.expect)((0, _utils.formatDate)(date)).toBe('2023年1月15日');
        // 別の日付でテスト
        const anotherDate = new Date(2024, 11, 31); // 2024年12月31日
        (0, _globals.expect)((0, _utils.formatDate)(anotherDate)).toBe('2024年12月31日');
    });
    it('現在の日付をフォーマットする', ()=>{
        // 現在の日付
        const now = new Date();
        // 期待される形式（正規表現でチェック）
        const expectedPattern = /^\d{4}年\d{1,2}月\d{1,2}日$/;
        (0, _globals.expect)((0, _utils.formatDate)(now)).toMatch(expectedPattern);
    });
    it('日付オブジェクトが必要', ()=>{
        // 不正な入力に対するテスト
        (0, _globals.expect)(()=>{
            // @ts-ignore - 意図的に不正な型を渡す
            (0, _utils.formatDate)('2023-01-15');
        }).toThrow();
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXN1a2V0c3Vub2RhL0RvY3VtZW50cy9jdXJzb3IvcHB0dHJhbnNsYXRvcmFwcC93b3JrdHJlZXMvY2ljZC1zZXR1cC90ZXN0cy91dGlscy91dGlscy50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNuLCBmb3JtYXREYXRlIH0gZnJvbSAnQC9saWIvdXRpbHMnO1xuaW1wb3J0IHsgZXhwZWN0IH0gZnJvbSAnQGplc3QvZ2xvYmFscyc7XG5cbmRlc2NyaWJlKCdjbiBmdW5jdGlvbicsICgpID0+IHtcbiAgaXQoJ+OCr+ODqeOCueWQjeOCkuato+OBl+OBj+e1kOWQiOOBmeOCiycsICgpID0+IHtcbiAgICAvLyDln7rmnKznmoTjgarntZDlkIhcbiAgICBleHBlY3QoY24oJ2NsYXNzMScsICdjbGFzczInKSkudG9CZSgnY2xhc3MxIGNsYXNzMicpO1xuXG4gICAgLy8g5p2h5Lu25LuY44GN44Kv44Op44K5XG4gICAgZXhwZWN0KGNuKCdjbGFzczEnLCB0cnVlICYmICdjbGFzczInLCBmYWxzZSAmJiAnY2xhc3MzJykpLnRvQmUoJ2NsYXNzMSBjbGFzczInKTtcblxuICAgIC8vIOOCquODluOCuOOCp+OCr+ODiOW9ouW8j1xuICAgIGV4cGVjdChjbignY2xhc3MxJywgeyBjbGFzczI6IHRydWUsIGNsYXNzMzogZmFsc2UgfSkpLnRvQmUoJ2NsYXNzMSBjbGFzczInKTtcblxuICAgIC8vIOmFjeWIl+W9ouW8j1xuICAgIGV4cGVjdChjbignY2xhc3MxJywgWydjbGFzczInLCAnY2xhc3MzJ10pKS50b0JlKCdjbGFzczEgY2xhc3MyIGNsYXNzMycpO1xuXG4gICAgLy8gdGFpbHdpbmTjga7jgq/jg6njgrnntZDlkIjvvIjnq7blkIjop6PmsbrvvIlcbiAgICBleHBlY3QoY24oJ3AtNCB0ZXh0LXJlZC01MDAnLCAncC02JykpLnRvQmUoJ3RleHQtcmVkLTUwMCBwLTYnKTtcbiAgfSk7XG5cbiAgaXQoJ+epuuOBruWFpeWKm+OCkuWHpueQhuOBmeOCiycsICgpID0+IHtcbiAgICBleHBlY3QoY24oKSkudG9CZSgnJyk7XG4gICAgZXhwZWN0KGNuKCcnKSkudG9CZSgnJyk7XG4gICAgZXhwZWN0KGNuKG51bGwpKS50b0JlKCcnKTtcbiAgICBleHBlY3QoY24odW5kZWZpbmVkKSkudG9CZSgnJyk7XG4gIH0pO1xufSk7XG5cbmRlc2NyaWJlKCdmb3JtYXREYXRlIGZ1bmN0aW9uJywgKCkgPT4ge1xuICBpdCgn5pel5LuY44KS5pel5pys6Kqe5b2i5byP44Gn44OV44Kp44O844Oe44OD44OI44GZ44KLJywgKCkgPT4ge1xuICAgIC8vIOeJueWumuOBruaXpeS7mOOBp+ODhuOCueODiFxuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgyMDIzLCAwLCAxNSk7IC8vIDIwMjPlubQx5pyIMTXml6VcbiAgICBleHBlY3QoZm9ybWF0RGF0ZShkYXRlKSkudG9CZSgnMjAyM+W5tDHmnIgxNeaXpScpO1xuXG4gICAgLy8g5Yil44Gu5pel5LuY44Gn44OG44K544OIXG4gICAgY29uc3QgYW5vdGhlckRhdGUgPSBuZXcgRGF0ZSgyMDI0LCAxMSwgMzEpOyAvLyAyMDI05bm0MTLmnIgzMeaXpVxuICAgIGV4cGVjdChmb3JtYXREYXRlKGFub3RoZXJEYXRlKSkudG9CZSgnMjAyNOW5tDEy5pyIMzHml6UnKTtcbiAgfSk7XG5cbiAgaXQoJ+ePvuWcqOOBruaXpeS7mOOCkuODleOCqeODvOODnuODg+ODiOOBmeOCiycsICgpID0+IHtcbiAgICAvLyDnj77lnKjjga7ml6Xku5hcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuXG4gICAgLy8g5pyf5b6F44GV44KM44KL5b2i5byP77yI5q2j6KaP6KGo54++44Gn44OB44Kn44OD44Kv77yJXG4gICAgY29uc3QgZXhwZWN0ZWRQYXR0ZXJuID0gL15cXGR7NH3lubRcXGR7MSwyfeaciFxcZHsxLDJ95pelJC87XG5cbiAgICBleHBlY3QoZm9ybWF0RGF0ZShub3cpKS50b01hdGNoKGV4cGVjdGVkUGF0dGVybik7XG4gIH0pO1xuXG4gIGl0KCfml6Xku5jjgqrjg5bjgrjjgqfjgq/jg4jjgYzlv4XopoEnLCAoKSA9PiB7XG4gICAgLy8g5LiN5q2j44Gq5YWl5Yqb44Gr5a++44GZ44KL44OG44K544OIXG4gICAgZXhwZWN0KCgpID0+IHtcbiAgICAgIC8vIEB0cy1pZ25vcmUgLSDmhI/lm7PnmoTjgavkuI3mraPjgarlnovjgpLmuKHjgZlcbiAgICAgIGZvcm1hdERhdGUoJzIwMjMtMDEtMTUnKTtcbiAgICB9KS50b1Rocm93KCk7XG4gIH0pO1xufSk7XG4iXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpdCIsImV4cGVjdCIsImNuIiwidG9CZSIsImNsYXNzMiIsImNsYXNzMyIsInVuZGVmaW5lZCIsImRhdGUiLCJEYXRlIiwiZm9ybWF0RGF0ZSIsImFub3RoZXJEYXRlIiwibm93IiwiZXhwZWN0ZWRQYXR0ZXJuIiwidG9NYXRjaCIsInRvVGhyb3ciXSwibWFwcGluZ3MiOiI7Ozs7dUJBQStCO3lCQUNSO0FBRXZCQSxTQUFTLGVBQWU7SUFDdEJDLEdBQUcsZ0JBQWdCO1FBQ2pCLFNBQVM7UUFDVEMsSUFBQUEsZUFBTSxFQUFDQyxJQUFBQSxTQUFFLEVBQUMsVUFBVSxXQUFXQyxJQUFJLENBQUM7UUFFcEMsVUFBVTtRQUNWRixJQUFBQSxlQUFNLEVBQUNDLElBQUFBLFNBQUUsRUFBQyxVQUFVLFFBQVEsVUFBVSxTQUFTLFdBQVdDLElBQUksQ0FBQztRQUUvRCxXQUFXO1FBQ1hGLElBQUFBLGVBQU0sRUFBQ0MsSUFBQUEsU0FBRSxFQUFDLFVBQVU7WUFBRUUsUUFBUTtZQUFNQyxRQUFRO1FBQU0sSUFBSUYsSUFBSSxDQUFDO1FBRTNELE9BQU87UUFDUEYsSUFBQUEsZUFBTSxFQUFDQyxJQUFBQSxTQUFFLEVBQUMsVUFBVTtZQUFDO1lBQVU7U0FBUyxHQUFHQyxJQUFJLENBQUM7UUFFaEQsdUJBQXVCO1FBQ3ZCRixJQUFBQSxlQUFNLEVBQUNDLElBQUFBLFNBQUUsRUFBQyxvQkFBb0IsUUFBUUMsSUFBSSxDQUFDO0lBQzdDO0lBRUFILEdBQUcsYUFBYTtRQUNkQyxJQUFBQSxlQUFNLEVBQUNDLElBQUFBLFNBQUUsS0FBSUMsSUFBSSxDQUFDO1FBQ2xCRixJQUFBQSxlQUFNLEVBQUNDLElBQUFBLFNBQUUsRUFBQyxLQUFLQyxJQUFJLENBQUM7UUFDcEJGLElBQUFBLGVBQU0sRUFBQ0MsSUFBQUEsU0FBRSxFQUFDLE9BQU9DLElBQUksQ0FBQztRQUN0QkYsSUFBQUEsZUFBTSxFQUFDQyxJQUFBQSxTQUFFLEVBQUNJLFlBQVlILElBQUksQ0FBQztJQUM3QjtBQUNGO0FBRUFKLFNBQVMsdUJBQXVCO0lBQzlCQyxHQUFHLHFCQUFxQjtRQUN0QixZQUFZO1FBQ1osTUFBTU8sT0FBTyxJQUFJQyxLQUFLLE1BQU0sR0FBRyxLQUFLLGFBQWE7UUFDakRQLElBQUFBLGVBQU0sRUFBQ1EsSUFBQUEsaUJBQVUsRUFBQ0YsT0FBT0osSUFBSSxDQUFDO1FBRTlCLFdBQVc7UUFDWCxNQUFNTyxjQUFjLElBQUlGLEtBQUssTUFBTSxJQUFJLEtBQUssY0FBYztRQUMxRFAsSUFBQUEsZUFBTSxFQUFDUSxJQUFBQSxpQkFBVSxFQUFDQyxjQUFjUCxJQUFJLENBQUM7SUFDdkM7SUFFQUgsR0FBRyxrQkFBa0I7UUFDbkIsUUFBUTtRQUNSLE1BQU1XLE1BQU0sSUFBSUg7UUFFaEIscUJBQXFCO1FBQ3JCLE1BQU1JLGtCQUFrQjtRQUV4QlgsSUFBQUEsZUFBTSxFQUFDUSxJQUFBQSxpQkFBVSxFQUFDRSxNQUFNRSxPQUFPLENBQUNEO0lBQ2xDO0lBRUFaLEdBQUcsZUFBZTtRQUNoQixlQUFlO1FBQ2ZDLElBQUFBLGVBQU0sRUFBQztZQUNMLDJCQUEyQjtZQUMzQlEsSUFBQUEsaUJBQVUsRUFBQztRQUNiLEdBQUdLLE9BQU87SUFDWjtBQUNGIn0=