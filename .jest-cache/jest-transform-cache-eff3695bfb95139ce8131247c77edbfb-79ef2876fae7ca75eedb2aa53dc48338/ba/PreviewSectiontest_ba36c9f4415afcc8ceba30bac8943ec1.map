{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/tests/app/translate/components/PreviewSection.test.tsx"],"sourcesContent":["/// <reference path=\"../../../jest.d.ts\" />\n\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\n\n// テスト用の型定義\ninterface TextItem {\n  id: string;\n  text: string;\n  position: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  translations: {\n    language: string;\n    text: string;\n  }[];\n}\n\ninterface PreviewSectionProps {\n  slides: {\n    imageUrl: string;\n    texts: TextItem[];\n  }[];\n  currentSlide: number;\n  onSlideChange?: (index: number) => void;\n  onTextSelect?: (index: number) => void;\n  selectedTextIndex?: number | null;\n  onTextHover?: (index: number | null) => void;\n}\n\n// モックデータ\nconst mockSlides = [\n  {\n    imageUrl: '/test-image.png',\n    texts: [\n      {\n        id: 'text1',\n        text: 'サンプルテキスト1',\n        position: { x: 100, y: 100, width: 200, height: 50 },\n        translations: [{ language: 'en', text: 'Sample Text 1' }],\n      },\n      {\n        id: 'text2',\n        text: 'サンプルテキスト2',\n        position: { x: 100, y: 200, width: 200, height: 50 },\n        translations: [{ language: 'en', text: 'Sample Text 2' }],\n      },\n    ],\n  },\n  {\n    imageUrl: '/test-image2.png',\n    texts: [\n      {\n        id: 'text3',\n        text: 'サンプルテキスト3',\n        position: { x: 100, y: 100, width: 200, height: 50 },\n        translations: [],\n      },\n    ],\n  },\n];\n\n// テスト対象のコンポーネントをモック化\njest.mock('@/app/(dashboard)/translate/components/PreviewSection', () => ({\n  PreviewSection: ({\n    slides,\n    currentSlide,\n    onSlideChange,\n    onTextSelect,\n    selectedTextIndex,\n    onTextHover,\n  }: PreviewSectionProps) => (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-lg font-semibold\">プレビュー</h2>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            disabled={currentSlide === 0}\n            onClick={() => onSlideChange && onSlideChange(currentSlide - 1)}\n            aria-label=\"前のスライド\"\n          >\n            ←\n          </button>\n          <span className=\"text-sm\">\n            {currentSlide + 1} / {slides.length}\n          </span>\n          <button\n            disabled={currentSlide === slides.length - 1}\n            onClick={() => onSlideChange && onSlideChange(currentSlide + 1)}\n            aria-label=\"次のスライド\"\n          >\n            →\n          </button>\n        </div>\n      </div>\n      <div data-testid=\"slide-preview\">\n        <img data-testid=\"slide-image\" src={slides[currentSlide].imageUrl} alt={`Slide ${currentSlide + 1}`} />\n        <div>\n          {slides[currentSlide].texts.map((text, i) => (\n            <div\n              key={text.id}\n              data-testid={`text-highlight-${i}`}\n              onClick={() => onTextSelect && onTextSelect(i)}\n              onMouseEnter={() => onTextHover && onTextHover(i)}\n              onMouseLeave={() => onTextHover && onTextHover(null)}\n              className={selectedTextIndex === i ? 'selected' : ''}\n            />\n          ))}\n        </div>\n      </div>\n      <div data-testid=\"translation-text\"></div>\n    </div>\n  ),\n}));\n\n// コンポーネントの型定義\nconst { PreviewSection } = jest.requireMock('@/app/(dashboard)/translate/components/PreviewSection');\n\ndescribe('PreviewSection', () => {\n  it('スライドプレビューを表示する', () => {\n    render(<PreviewSection slides={mockSlides} currentSlide={0} />);\n\n    expect(screen.getByText('プレビュー')).toBeInTheDocument();\n    expect(screen.getByTestId('slide-image')).toHaveAttribute('src', '/test-image.png');\n    expect(screen.getByText('1 / 2')).toBeInTheDocument();\n  });\n\n  it('スライド切り替えボタンが機能する', () => {\n    const mockOnSlideChange = jest.fn();\n\n    render(<PreviewSection slides={mockSlides} currentSlide={0} onSlideChange={mockOnSlideChange} />);\n\n    // 次へボタンをクリック\n    const nextButton = screen.getByLabelText('次のスライド');\n    fireEvent.click(nextButton);\n    expect(mockOnSlideChange).toHaveBeenCalledWith(1);\n  });\n\n  it('最初のスライドで前へボタンが無効化される', () => {\n    render(<PreviewSection slides={mockSlides} currentSlide={0} />);\n\n    const prevButton = screen.getByLabelText('前のスライド');\n    expect(prevButton).toBeDisabled();\n  });\n\n  it('最後のスライドで次へボタンが無効化される', () => {\n    render(<PreviewSection slides={mockSlides} currentSlide={1} />);\n\n    const nextButton = screen.getByLabelText('次のスライド');\n    expect(nextButton).toBeDisabled();\n  });\n\n  it('テキスト要素がハイライト表示される', () => {\n    render(<PreviewSection slides={mockSlides} currentSlide={0} selectedTextIndex={0} />);\n\n    const textHighlight = screen.getByTestId('text-highlight-0');\n    expect(textHighlight).toHaveClass('selected');\n  });\n});\n"],"names":["jest","mock","PreviewSection","slides","currentSlide","onSlideChange","onTextSelect","selectedTextIndex","onTextHover","div","className","h2","button","disabled","onClick","aria-label","span","length","data-testid","img","src","imageUrl","alt","texts","map","text","i","onMouseEnter","onMouseLeave","id","mockSlides","position","x","y","width","height","translations","language","requireMock","describe","it","render","expect","screen","getByText","toBeInTheDocument","getByTestId","toHaveAttribute","mockOnSlideChange","fn","nextButton","getByLabelText","fireEvent","click","toHaveBeenCalledWith","prevButton","toBeDisabled","textHighlight","toHaveClass"],"mappings":"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"}