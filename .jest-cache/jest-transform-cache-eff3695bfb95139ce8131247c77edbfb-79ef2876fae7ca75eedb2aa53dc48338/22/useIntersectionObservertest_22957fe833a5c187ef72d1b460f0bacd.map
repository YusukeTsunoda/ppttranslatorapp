{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/tests/hooks/useIntersectionObserver.test.tsx"],"sourcesContent":["import React from 'react';\nimport { renderHook } from '@testing-library/react';\nimport { useIntersectionObserver } from '@/lib/hooks/useIntersectionObserver';\n\n// IntersectionObserverとそのコールバック型の定義\ntype IntersectionObserverCallback = (entries: IntersectionObserverEntry[], observer: IntersectionObserver) => void;\n\n// IntersectionObserverのモック\nconst mockObserve = jest.fn();\nconst mockDisconnect = jest.fn();\nconst mockIntersectionObserver = jest.fn().mockImplementation(\n  (callback: IntersectionObserverCallback, options?: IntersectionObserverInit) => ({\n    observe: mockObserve,\n    disconnect: mockDisconnect,\n    unobserve: jest.fn(),\n    takeRecords: jest.fn(() => []),\n    root: null,\n    rootMargin: '',\n    thresholds: [],\n  })\n);\n\n// グローバルにIntersectionObserverをモック\nglobal.IntersectionObserver = mockIntersectionObserver as unknown as typeof IntersectionObserver;\n\ndescribe('useIntersectionObserver', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('要素が存在する場合、IntersectionObserverを初期化して監視する', () => {\n    // モック要素の作成\n    const mockRef = { current: document.createElement('div') };\n    const mockCallback = jest.fn();\n    const mockOptions = { rootMargin: '10px' };\n\n    // フックをレンダリング\n    renderHook(() => useIntersectionObserver(mockRef as React.RefObject<Element>, mockCallback, mockOptions));\n\n    // IntersectionObserverが正しく初期化されたか確認\n    expect(mockIntersectionObserver).toHaveBeenCalledWith(mockCallback, mockOptions);\n\n    // 要素が監視対象に追加されたか確認\n    expect(mockObserve).toHaveBeenCalledWith(mockRef.current);\n  });\n\n  it('要素が存在しない場合、IntersectionObserverを初期化しない', () => {\n    // nullの参照を作成\n    const mockRef = { current: null };\n    const mockCallback = jest.fn();\n\n    // フックをレンダリング\n    renderHook(() => useIntersectionObserver(mockRef as React.RefObject<Element>, mockCallback));\n\n    // IntersectionObserverが初期化されていないことを確認\n    expect(mockIntersectionObserver).not.toHaveBeenCalled();\n    expect(mockObserve).not.toHaveBeenCalled();\n  });\n\n  it('アンマウント時にIntersectionObserverを切断する', () => {\n    // モック要素の作成\n    const mockRef = { current: document.createElement('div') };\n    const mockCallback = jest.fn();\n\n    // フックをレンダリングして解除\n    const { unmount } = renderHook(() => useIntersectionObserver(mockRef as React.RefObject<Element>, mockCallback));\n    unmount();\n\n    // disconnectが呼ばれたことを確認\n    expect(mockDisconnect).toHaveBeenCalled();\n  });\n\n  it('依存配列の値が変更された場合、IntersectionObserverを再初期化する', () => {\n    // モック要素の作成\n    const mockRef = { current: document.createElement('div') };\n    const mockCallback1 = jest.fn();\n    const mockCallback2 = jest.fn();\n\n    // 初回レンダリング\n    const { rerender } = renderHook(\n      ({ callback }) => useIntersectionObserver(mockRef as React.RefObject<Element>, callback),\n      { initialProps: { callback: mockCallback1 } },\n    );\n\n    // 再レンダリング（コールバックを変更）\n    rerender({ callback: mockCallback2 });\n\n    // IntersectionObserverが2回初期化されたことを確認\n    expect(mockIntersectionObserver).toHaveBeenCalledTimes(2);\n    expect(mockDisconnect).toHaveBeenCalledTimes(1);\n    expect(mockObserve).toHaveBeenCalledTimes(2);\n  });\n});\n"],"names":["mockObserve","jest","fn","mockDisconnect","mockIntersectionObserver","mockImplementation","callback","options","observe","disconnect","unobserve","takeRecords","root","rootMargin","thresholds","global","IntersectionObserver","describe","beforeEach","clearAllMocks","it","mockRef","current","document","createElement","mockCallback","mockOptions","renderHook","useIntersectionObserver","expect","toHaveBeenCalledWith","not","toHaveBeenCalled","unmount","mockCallback1","mockCallback2","rerender","initialProps","toHaveBeenCalledTimes"],"mappings":";;;;;gEAAkB;wBACS;yCACa;AAKxC,2BAA2B;AAC3B,MAAMA,cAAcC,KAAKC,EAAE;AAC3B,MAAMC,iBAAiBF,KAAKC,EAAE;AAC9B,MAAME,2BAA2BH,KAAKC,EAAE,GAAGG,kBAAkB,CAC3D,CAACC,UAAwCC,UAAwC,CAAA;QAC/EC,SAASR;QACTS,YAAYN;QACZO,WAAWT,KAAKC,EAAE;QAClBS,aAAaV,KAAKC,EAAE,CAAC,IAAM,EAAE;QAC7BU,MAAM;QACNC,YAAY;QACZC,YAAY,EAAE;IAChB,CAAA;AAGF,iCAAiC;AACjCC,OAAOC,oBAAoB,GAAGZ;AAE9Ba,SAAS,2BAA2B;IAClCC,WAAW;QACTjB,KAAKkB,aAAa;IACpB;IAEAC,GAAG,4CAA4C;QAC7C,WAAW;QACX,MAAMC,UAAU;YAAEC,SAASC,SAASC,aAAa,CAAC;QAAO;QACzD,MAAMC,eAAexB,KAAKC,EAAE;QAC5B,MAAMwB,cAAc;YAAEb,YAAY;QAAO;QAEzC,aAAa;QACbc,IAAAA,kBAAU,EAAC,IAAMC,IAAAA,gDAAuB,EAACP,SAAqCI,cAAcC;QAE5F,oCAAoC;QACpCG,OAAOzB,0BAA0B0B,oBAAoB,CAACL,cAAcC;QAEpE,mBAAmB;QACnBG,OAAO7B,aAAa8B,oBAAoB,CAACT,QAAQC,OAAO;IAC1D;IAEAF,GAAG,0CAA0C;QAC3C,aAAa;QACb,MAAMC,UAAU;YAAEC,SAAS;QAAK;QAChC,MAAMG,eAAexB,KAAKC,EAAE;QAE5B,aAAa;QACbyB,IAAAA,kBAAU,EAAC,IAAMC,IAAAA,gDAAuB,EAACP,SAAqCI;QAE9E,sCAAsC;QACtCI,OAAOzB,0BAA0B2B,GAAG,CAACC,gBAAgB;QACrDH,OAAO7B,aAAa+B,GAAG,CAACC,gBAAgB;IAC1C;IAEAZ,GAAG,qCAAqC;QACtC,WAAW;QACX,MAAMC,UAAU;YAAEC,SAASC,SAASC,aAAa,CAAC;QAAO;QACzD,MAAMC,eAAexB,KAAKC,EAAE;QAE5B,iBAAiB;QACjB,MAAM,EAAE+B,OAAO,EAAE,GAAGN,IAAAA,kBAAU,EAAC,IAAMC,IAAAA,gDAAuB,EAACP,SAAqCI;QAClGQ;QAEA,uBAAuB;QACvBJ,OAAO1B,gBAAgB6B,gBAAgB;IACzC;IAEAZ,GAAG,8CAA8C;QAC/C,WAAW;QACX,MAAMC,UAAU;YAAEC,SAASC,SAASC,aAAa,CAAC;QAAO;QACzD,MAAMU,gBAAgBjC,KAAKC,EAAE;QAC7B,MAAMiC,gBAAgBlC,KAAKC,EAAE;QAE7B,WAAW;QACX,MAAM,EAAEkC,QAAQ,EAAE,GAAGT,IAAAA,kBAAU,EAC7B,CAAC,EAAErB,QAAQ,EAAE,GAAKsB,IAAAA,gDAAuB,EAACP,SAAqCf,WAC/E;YAAE+B,cAAc;gBAAE/B,UAAU4B;YAAc;QAAE;QAG9C,qBAAqB;QACrBE,SAAS;YAAE9B,UAAU6B;QAAc;QAEnC,qCAAqC;QACrCN,OAAOzB,0BAA0BkC,qBAAqB,CAAC;QACvDT,OAAO1B,gBAAgBmC,qBAAqB,CAAC;QAC7CT,OAAO7B,aAAasC,qBAAqB,CAAC;IAC5C;AACF"}