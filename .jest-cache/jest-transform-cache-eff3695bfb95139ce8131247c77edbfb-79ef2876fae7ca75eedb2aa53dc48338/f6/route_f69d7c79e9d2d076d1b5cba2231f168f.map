{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/app/api/auth/signup/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { PrismaClient } from '@prisma/client';\nimport bcrypt from 'bcrypt';\nimport { z } from 'zod';\nimport crypto from 'crypto';\n\n// スキーマ定義\nconst userSchema = z.object({\n  name: z.string().min(1, '名前は必須です'),\n  email: z.string().email('有効なメールアドレスを入力してください'),\n  password: z.string().min(6, 'パスワードは6文字以上必要です'),\n});\n\nexport const runtime = 'nodejs';\nexport const dynamic = 'force-dynamic';\n\nexport async function POST(request: Request) {\n  // 環境変数をログ出力\n  console.log('==== DATABASE CONNECTION DEBUG INFO ====');\n  console.log(`DATABASE_URL exists: ${!!process.env.DATABASE_URL}`);\n\n  if (process.env.DATABASE_URL) {\n    console.log(`DATABASE_URL prefix: ${process.env.DATABASE_URL.substring(0, 15)}...`);\n    console.log(\n      `DATABASE_URL starts with postgresql:// or postgres://: ${\n        process.env.DATABASE_URL.startsWith('postgresql://') || process.env.DATABASE_URL.startsWith('postgres://')\n      }`,\n    );\n\n    // 引用符の有無を確認\n    console.log(\n      `DATABASE_URL contains quotes: ${\n        process.env.DATABASE_URL.includes('\"') || process.env.DATABASE_URL.includes(\"'\")\n      }`,\n    );\n\n    // 完全なURLを出力（パスワードをマスク）\n    try {\n      const urlObj = new URL(process.env.DATABASE_URL);\n      const maskedUrl = `${urlObj.protocol}//${urlObj.username}:****@${urlObj.host}${urlObj.pathname}${urlObj.search}`;\n      console.log(`Masked DATABASE_URL: ${maskedUrl}`);\n    } catch (e: unknown) {\n      const errorMessage = e instanceof Error ? e.message : '不明なエラー';\n      console.log(`Error parsing DATABASE_URL: ${errorMessage}`);\n    }\n  } else {\n    console.log('DATABASE_URL is not set');\n  }\n\n  console.log('=======================================');\n\n  try {\n    const body = await request.json();\n\n    // バリデーション\n    const validationResult = userSchema.safeParse(body);\n    if (!validationResult.success) {\n      return NextResponse.json({ error: validationResult.error.errors[0].message }, { status: 400 });\n    }\n\n    const { name, email, password } = validationResult.data;\n\n    const prisma = new PrismaClient();\n\n    // ユーザーの存在確認\n    const existingUser = await prisma.user.findUnique({\n      where: { email },\n    });\n\n    if (existingUser) {\n      await prisma.$disconnect();\n      return NextResponse.json({ error: 'このメールアドレスは既に登録されています' }, { status: 400 });\n    }\n\n    // パスワードのハッシュ化\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n    // ユーザー作成\n    const user = await prisma.user.create({\n      data: {\n        id: crypto.randomUUID(), // UUIDを生成\n        name,\n        email,\n        password: hashedPassword,\n        credits: 100, // 初期クレジットを100に設定\n        updatedAt: new Date(), // 現在の日時\n      },\n    });\n\n    await prisma.$disconnect();\n\n    return NextResponse.json(\n      {\n        message: 'ユーザーが正常に作成されました',\n        user: {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n        },\n      },\n      { status: 201 },\n    );\n  } catch (error: unknown) {\n    console.error('Signup error:', error);\n    const errorMessage = error instanceof Error ? error.message : '不明なエラーが発生しました';\n    return NextResponse.json({ error: errorMessage }, { status: 500 });\n  }\n}\n"],"names":["POST","dynamic","runtime","userSchema","z","object","name","string","min","email","password","request","console","log","process","env","DATABASE_URL","substring","startsWith","includes","urlObj","URL","maskedUrl","protocol","username","host","pathname","search","e","errorMessage","Error","message","body","json","validationResult","safeParse","success","NextResponse","error","errors","status","data","prisma","PrismaClient","existingUser","user","findUnique","where","$disconnect","hashedPassword","bcrypt","hash","create","id","crypto","randomUUID","credits","updatedAt","Date"],"mappings":"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"}