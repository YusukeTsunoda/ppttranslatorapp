{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/tests/hooks/useIntersectionObserver.test.tsx"],"sourcesContent":["import React from 'react';\nimport { renderHook } from '@testing-library/react';\nimport { useIntersectionObserver } from '@/lib/hooks/useIntersectionObserver';\n\n// IntersectionObserverメソッドのモック\nconst mockObserve = jest.fn();\nconst mockDisconnect = jest.fn();\nconst mockUnobserve = jest.fn();\n\n// テスト前にメソッドをモック\nbeforeAll(() => {\n  // IntersectionObserverのprototypeメソッドをモック\n  jest.spyOn(IntersectionObserver.prototype, 'observe').mockImplementation(mockObserve);\n  jest.spyOn(IntersectionObserver.prototype, 'disconnect').mockImplementation(mockDisconnect);\n  jest.spyOn(IntersectionObserver.prototype, 'unobserve').mockImplementation(mockUnobserve);\n});\n\n// テスト後にモックを元に戻す\nafterAll(() => {\n  jest.restoreAllMocks();\n});\n\ndescribe('useIntersectionObserver', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('要素が存在する場合、IntersectionObserverを初期化して監視する', () => {\n    // モック要素の作成\n    const mockRef = { current: document.createElement('div') };\n    const mockCallback = jest.fn();\n    const mockOptions = { rootMargin: '10px' };\n\n    // フックをレンダリング\n    renderHook(() => useIntersectionObserver(mockRef as React.RefObject<Element>, mockCallback, mockOptions));\n\n    // 要素が監視対象に追加されたか確認\n    expect(mockObserve).toHaveBeenCalledWith(mockRef.current);\n  });\n\n  it('要素が存在しない場合、IntersectionObserverを初期化しない', () => {\n    // nullの参照を作成\n    const mockRef = { current: null };\n    const mockCallback = jest.fn();\n\n    // フックをレンダリング\n    renderHook(() => useIntersectionObserver(mockRef as React.RefObject<Element>, mockCallback));\n\n    // 要素が監視対象に追加されていないことを確認\n    expect(mockObserve).not.toHaveBeenCalled();\n  });\n\n  it('アンマウント時にIntersectionObserverを切断する', () => {\n    // モック要素の作成\n    const mockRef = { current: document.createElement('div') };\n    const mockCallback = jest.fn();\n\n    // フックをレンダリングして解除\n    const { unmount } = renderHook(() => useIntersectionObserver(mockRef as React.RefObject<Element>, mockCallback));\n    unmount();\n\n    // disconnectが呼ばれたことを確認\n    expect(mockDisconnect).toHaveBeenCalled();\n  });\n\n  it('依存配列の値が変更された場合、IntersectionObserverを再初期化する', () => {\n    // モック要素の作成\n    const mockRef = { current: document.createElement('div') };\n    const mockCallback1 = jest.fn();\n    const mockCallback2 = jest.fn();\n\n    // 初回レンダリング\n    const { rerender } = renderHook(\n      ({ callback }) => useIntersectionObserver(mockRef as React.RefObject<Element>, callback),\n      { initialProps: { callback: mockCallback1 } },\n    );\n\n    // 再レンダリング（コールバックを変更）\n    rerender({ callback: mockCallback2 });\n\n    // disconnectとobserveが呼ばれたことを確認\n    expect(mockDisconnect).toHaveBeenCalledTimes(1);\n    expect(mockObserve).toHaveBeenCalledTimes(2);\n  });\n});\n"],"names":["mockObserve","jest","fn","mockDisconnect","mockUnobserve","beforeAll","spyOn","IntersectionObserver","prototype","mockImplementation","afterAll","restoreAllMocks","describe","beforeEach","clearAllMocks","it","mockRef","current","document","createElement","mockCallback","mockOptions","rootMargin","renderHook","useIntersectionObserver","expect","toHaveBeenCalledWith","not","toHaveBeenCalled","unmount","mockCallback1","mockCallback2","rerender","callback","initialProps","toHaveBeenCalledTimes"],"mappings":";;;;;gEAAkB;wBACS;yCACa;AAExC,+BAA+B;AAC/B,MAAMA,cAAcC,KAAKC,EAAE;AAC3B,MAAMC,iBAAiBF,KAAKC,EAAE;AAC9B,MAAME,gBAAgBH,KAAKC,EAAE;AAE7B,gBAAgB;AAChBG,UAAU;IACR,yCAAyC;IACzCJ,KAAKK,KAAK,CAACC,qBAAqBC,SAAS,EAAE,WAAWC,kBAAkB,CAACT;IACzEC,KAAKK,KAAK,CAACC,qBAAqBC,SAAS,EAAE,cAAcC,kBAAkB,CAACN;IAC5EF,KAAKK,KAAK,CAACC,qBAAqBC,SAAS,EAAE,aAAaC,kBAAkB,CAACL;AAC7E;AAEA,gBAAgB;AAChBM,SAAS;IACPT,KAAKU,eAAe;AACtB;AAEAC,SAAS,2BAA2B;IAClCC,WAAW;QACTZ,KAAKa,aAAa;IACpB;IAEAC,GAAG,4CAA4C;QAC7C,WAAW;QACX,MAAMC,UAAU;YAAEC,SAASC,SAASC,aAAa,CAAC;QAAO;QACzD,MAAMC,eAAenB,KAAKC,EAAE;QAC5B,MAAMmB,cAAc;YAAEC,YAAY;QAAO;QAEzC,aAAa;QACbC,IAAAA,kBAAU,EAAC,IAAMC,IAAAA,gDAAuB,EAACR,SAAqCI,cAAcC;QAE5F,mBAAmB;QACnBI,OAAOzB,aAAa0B,oBAAoB,CAACV,QAAQC,OAAO;IAC1D;IAEAF,GAAG,0CAA0C;QAC3C,aAAa;QACb,MAAMC,UAAU;YAAEC,SAAS;QAAK;QAChC,MAAMG,eAAenB,KAAKC,EAAE;QAE5B,aAAa;QACbqB,IAAAA,kBAAU,EAAC,IAAMC,IAAAA,gDAAuB,EAACR,SAAqCI;QAE9E,wBAAwB;QACxBK,OAAOzB,aAAa2B,GAAG,CAACC,gBAAgB;IAC1C;IAEAb,GAAG,qCAAqC;QACtC,WAAW;QACX,MAAMC,UAAU;YAAEC,SAASC,SAASC,aAAa,CAAC;QAAO;QACzD,MAAMC,eAAenB,KAAKC,EAAE;QAE5B,iBAAiB;QACjB,MAAM,EAAE2B,OAAO,EAAE,GAAGN,IAAAA,kBAAU,EAAC,IAAMC,IAAAA,gDAAuB,EAACR,SAAqCI;QAClGS;QAEA,uBAAuB;QACvBJ,OAAOtB,gBAAgByB,gBAAgB;IACzC;IAEAb,GAAG,8CAA8C;QAC/C,WAAW;QACX,MAAMC,UAAU;YAAEC,SAASC,SAASC,aAAa,CAAC;QAAO;QACzD,MAAMW,gBAAgB7B,KAAKC,EAAE;QAC7B,MAAM6B,gBAAgB9B,KAAKC,EAAE;QAE7B,WAAW;QACX,MAAM,EAAE8B,QAAQ,EAAE,GAAGT,IAAAA,kBAAU,EAC7B,CAAC,EAAEU,QAAQ,EAAE,GAAKT,IAAAA,gDAAuB,EAACR,SAAqCiB,WAC/E;YAAEC,cAAc;gBAAED,UAAUH;YAAc;QAAE;QAG9C,qBAAqB;QACrBE,SAAS;YAAEC,UAAUF;QAAc;QAEnC,+BAA+B;QAC/BN,OAAOtB,gBAAgBgC,qBAAqB,CAAC;QAC7CV,OAAOzB,aAAamC,qBAAqB,CAAC;IAC5C;AACF"}