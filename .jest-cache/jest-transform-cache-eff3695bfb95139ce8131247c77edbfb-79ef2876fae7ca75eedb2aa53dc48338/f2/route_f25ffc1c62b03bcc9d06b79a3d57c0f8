2915969abd1feaa0aac73a832e16b29d
// Node.jsランタイムを明示的に指定
// ファイルシステム操作とchild_processを含むため、Edge Runtimeでは動作しません
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    POST: function() {
        return POST;
    },
    runtime: function() {
        return runtime;
    }
});
const _server = require("next/server");
const _jwt = require("next-auth/jwt");
const _uploadhelpers = require("@/lib/utils/upload-helpers");
const _client = require("@prisma/client");
const _apilogging = require("@/lib/utils/api-logging");
const runtime = 'nodejs';
// ファイルサイズ制限
const MAX_FILE_SIZE = 20 * 1024 * 1024; // 20MB
// 許可するファイルタイプ
const ALLOWED_MIME_TYPES = [
    'application/vnd.openxmlformats-officedocument.presentationml.presentation'
];
// Prismaクライアントの初期化
const prisma = new _client.PrismaClient();
// アップロードハンドラ
async function uploadHandler(req) {
    try {
        // ユーザー認証
        const token = await (0, _jwt.getToken)({
            req,
            secret: process.env.NEXTAUTH_SECRET
        });
        if (!token || !token.sub) {
            return _server.NextResponse.json({
                error: '認証が必要です'
            }, {
                status: 401
            });
        }
        // formidableでファイルをパース
        const userId = token.sub;
        const [fields, files] = await (0, _uploadhelpers.uploadFilesToUserDir)(req, userId);
        // アップロードされたファイルの情報を取得
        const uploadedFiles = (0, _uploadhelpers.processFiles)(files);
        if (uploadedFiles.length === 0) {
            return _server.NextResponse.json({
                error: 'ファイルがアップロードされていません'
            }, {
                status: 400
            });
        }
        // ファイル情報をデータベースに保存
        const savedFiles = await Promise.all(uploadedFiles.map((file)=>prisma.file.create({
                data: {
                    id: file.hash || crypto.randomUUID(),
                    userId,
                    originalName: file.originalFilename,
                    storagePath: file.filepath,
                    fileSize: file.size,
                    mimeType: file.mimetype,
                    updatedAt: new Date()
                }
            })));
        // アクティビティログに記録
        await prisma.activityLog.create({
            data: {
                userId,
                type: 'FILE_UPLOAD',
                description: `${uploadedFiles.length}個のファイルをアップロードしました`,
                metadata: {
                    fileCount: uploadedFiles.length,
                    fileIds: savedFiles.map((f)=>f.id)
                }
            }
        });
        return _server.NextResponse.json({
            success: true,
            files: savedFiles.map((file)=>({
                    id: file.id,
                    originalName: file.originalName,
                    size: file.fileSize,
                    mimeType: file.mimeType,
                    createdAt: file.createdAt
                }))
        });
    } catch (error) {
        console.error('ファイルアップロードエラー:', error);
        return _server.NextResponse.json({
            error: 'ファイルアップロード中にエラーが発生しました'
        }, {
            status: 500
        });
    }
}
const POST = (0, _apilogging.withAPILogging)(uploadHandler, 'file-upload');

//# sourceMappingURL=data:application/json;base64,