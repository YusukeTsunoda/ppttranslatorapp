{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/tests/helpers/mockSetup.ts"],"sourcesContent":["import { PrismaClient, UserRole } from '@prisma/client';\nimport { mockDeep, DeepMockProxy } from 'jest-mock-extended';\nimport { getServerSession } from 'next-auth';\n\n// Prisma Clientのモック作成\nexport const createPrismaMock = () => {\n  const prismaMock = mockDeep<PrismaClient>();\n  jest.mock('@/lib/db/prisma', () => ({\n    prisma: prismaMock,\n  }));\n  return prismaMock as unknown as DeepMockProxy<PrismaClient>;\n};\n\n// getServerSessionのモック作成\nexport const createSessionMock = () => {\n  const sessionMock = jest.fn().mockResolvedValue(null);\n  jest.mock('next-auth', () => {\n    return {\n      __esModule: true,\n      getServerSession: () => sessionMock(),\n    };\n  });\n  return sessionMock;\n};\n\n// 共通のモッククリア\nexport const clearAllMocks = () => {\n  jest.clearAllMocks();\n};\n\n// 共通のユーザーモックデータ\nexport const createMockUser = (overrides = {}) => ({\n  id: 'test-user-id',\n  email: 'test@example.com',\n  name: 'Test User',\n  password: 'hashed_password',\n  credits: 10,\n  createdAt: new Date(),\n  updatedAt: new Date(),\n  role: UserRole.USER,\n  deletedAt: null,\n  emailVerified: null,\n  stripeCustomerId: null,\n  stripePriceId: null,\n  stripeCurrentPeriodEnd: null,\n  stripeSubscriptionId: null,\n  magicLinkToken: null,\n  magicLinkExpiresAt: null,\n  passwordResetToken: null,\n  passwordResetExpiresAt: null,\n  image: null,\n  ...overrides,\n}); "],"names":["clearAllMocks","createMockUser","createPrismaMock","createSessionMock","jest","mock","prisma","prismaMock","mockDeep","__esModule","getServerSession","sessionMock","fn","mockResolvedValue","overrides","id","email","name","password","credits","createdAt","Date","updatedAt","role","UserRole","USER","deletedAt","emailVerified","stripeCustomerId","stripePriceId","stripeCurrentPeriodEnd","stripeSubscriptionId","magicLinkToken","magicLinkExpiresAt","passwordResetToken","passwordResetExpiresAt","image"],"mappings":";;;;;;;;;;;IA0BaA,aAAa;eAAbA;;IAKAC,cAAc;eAAdA;;IA1BAC,gBAAgB;eAAhBA;;IASAC,iBAAiB;eAAjBA;;;wBAd0B;kCACC;AAIjC,MAAMD,mBAAmB;IAE9BE,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;YAClCC,QAAQC;QACV,CAAA;IAHA,MAAMA,aAAaC,IAAAA,0BAAQ;IAI3B,OAAOD;AACT;AAGO,MAAMJ,oBAAoB;IAE/BC,KAAKC,IAAI,CAAC,aAAa;QACrB,OAAO;YACLI,YAAY;YACZC,kBAAkB,IAAMC;QAC1B;IACF;IANA,MAAMA,cAAcP,KAAKQ,EAAE,GAAGC,iBAAiB,CAAC;IAOhD,OAAOF;AACT;AAGO,MAAMX,gBAAgB;IAC3BI,KAAKJ,aAAa;AACpB;AAGO,MAAMC,iBAAiB,CAACa,YAAY,CAAC,CAAC,GAAM,CAAA;QACjDC,IAAI;QACJC,OAAO;QACPC,MAAM;QACNC,UAAU;QACVC,SAAS;QACTC,WAAW,IAAIC;QACfC,WAAW,IAAID;QACfE,MAAMC,gBAAQ,CAACC,IAAI;QACnBC,WAAW;QACXC,eAAe;QACfC,kBAAkB;QAClBC,eAAe;QACfC,wBAAwB;QACxBC,sBAAsB;QACtBC,gBAAgB;QAChBC,oBAAoB;QACpBC,oBAAoB;QACpBC,wBAAwB;QACxBC,OAAO;QACP,GAAGtB,SAAS;IACd,CAAA"}