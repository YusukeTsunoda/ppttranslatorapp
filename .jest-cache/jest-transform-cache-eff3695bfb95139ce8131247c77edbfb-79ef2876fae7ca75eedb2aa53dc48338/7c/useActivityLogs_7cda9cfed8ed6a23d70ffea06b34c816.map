{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/lib/hooks/useActivityLogs.ts"],"sourcesContent":["import useSWR from 'swr';\nimport { getUserActivityLogs } from '@/lib/utils/activity-logger';\nimport { getErrorMessage } from '@/lib/utils/error-handler';\nimport { useState, useEffect } from 'react';\n\nconst CACHE_KEY = 'activity-logs';\nconst STALE_TIME = 30000; // 30秒\n\nexport function useActivityLogs(userId?: string) {\n  const [logs, setLogs] = useState<any[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [hasMore, setHasMore] = useState<boolean>(true);\n  const [isLoadingMore, setIsLoadingMore] = useState<boolean>(false);\n\n  const { data, mutate } = useSWR(\n    userId ? [CACHE_KEY, userId] : null,\n    async ([_, id]) => {\n      try {\n        return await getUserActivityLogs(id);\n      } catch (err) {\n        throw getErrorMessage(err);\n      }\n    },\n    {\n      revalidateOnFocus: false,\n      revalidateOnReconnect: true,\n      dedupingInterval: STALE_TIME,\n      keepPreviousData: true,\n    },\n  );\n\n  useEffect(() => {\n    if (data) {\n      setLogs(data.logs);\n      setError(null);\n      setIsLoading(false);\n      setHasMore(true);\n      setIsLoadingMore(false);\n    }\n  }, [data]);\n\n  const loadMore = async () => {\n    setIsLoadingMore(true);\n    // 追加データ取得処理\n    // 例: 新しいログがある場合は setHasMore(true) 、ないなら setHasMore(false)\n    setIsLoadingMore(false);\n  };\n\n  return {\n    logs,\n    error,\n    isLoading,\n    mutate,\n    hasMore,\n    loadMore,\n    isLoadingMore,\n  };\n}\n"],"names":["useActivityLogs","CACHE_KEY","STALE_TIME","userId","logs","setLogs","useState","error","setError","isLoading","setIsLoading","hasMore","setHasMore","isLoadingMore","setIsLoadingMore","data","mutate","useSWR","_","id","getUserActivityLogs","err","getErrorMessage","revalidateOnFocus","revalidateOnReconnect","dedupingInterval","keepPreviousData","useEffect","loadMore"],"mappings":";;;;+BAQgBA;;;eAAAA;;;;8DARG;gCACiB;8BACJ;uBACI;AAEpC,MAAMC,YAAY;AAClB,MAAMC,aAAa,OAAO,MAAM;AAEzB,SAASF,gBAAgBG,MAAe;IAC7C,MAAM,CAACC,MAAMC,QAAQ,GAAGC,IAAAA,eAAQ,EAAQ,EAAE;IAC1C,MAAM,CAACC,OAAOC,SAAS,GAAGF,IAAAA,eAAQ,EAAgB;IAClD,MAAM,CAACG,WAAWC,aAAa,GAAGJ,IAAAA,eAAQ,EAAU;IACpD,MAAM,CAACK,SAASC,WAAW,GAAGN,IAAAA,eAAQ,EAAU;IAChD,MAAM,CAACO,eAAeC,iBAAiB,GAAGR,IAAAA,eAAQ,EAAU;IAE5D,MAAM,EAAES,IAAI,EAAEC,MAAM,EAAE,GAAGC,IAAAA,YAAM,EAC7Bd,SAAS;QAACF;QAAWE;KAAO,GAAG,MAC/B,OAAO,CAACe,GAAGC,GAAG;QACZ,IAAI;YACF,OAAO,MAAMC,IAAAA,mCAAmB,EAACD;QACnC,EAAE,OAAOE,KAAK;YACZ,MAAMC,IAAAA,6BAAe,EAACD;QACxB;IACF,GACA;QACEE,mBAAmB;QACnBC,uBAAuB;QACvBC,kBAAkBvB;QAClBwB,kBAAkB;IACpB;IAGFC,IAAAA,gBAAS,EAAC;QACR,IAAIZ,MAAM;YACRV,QAAQU,KAAKX,IAAI;YACjBI,SAAS;YACTE,aAAa;YACbE,WAAW;YACXE,iBAAiB;QACnB;IACF,GAAG;QAACC;KAAK;IAET,MAAMa,WAAW;QACfd,iBAAiB;QACjB,YAAY;QACZ,0DAA0D;QAC1DA,iBAAiB;IACnB;IAEA,OAAO;QACLV;QACAG;QACAE;QACAO;QACAL;QACAiB;QACAf;IACF;AACF"}