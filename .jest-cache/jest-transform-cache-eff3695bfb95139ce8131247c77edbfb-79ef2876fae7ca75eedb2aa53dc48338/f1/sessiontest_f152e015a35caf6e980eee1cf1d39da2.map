{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/tests/auth/session.test.tsx"],"sourcesContent":["import React from 'react';\nimport { renderHook, act } from '@testing-library/react';\nimport { useSession, signIn, signOut } from 'next-auth/react';\n\n// セッション管理の型定義\ntype SessionError = 'EXPIRED' | 'INVALID' | 'NETWORK' | 'UNAUTHORIZED' | 'UNKNOWN';\n\ninterface SessionState {\n  isAuthenticated: boolean;\n  user: {\n    id: string;\n    email: string;\n    name?: string | null;\n  } | null;\n  loading: boolean;\n  error?: {\n    type: SessionError;\n    message: string;\n    timestamp: number;\n  };\n}\n\n// モックのセッション管理フック\nconst mockUseAuth = () => {\n  const [state, setState] = React.useState<SessionState>({\n    isAuthenticated: true,\n    user: {\n      id: 'test-user-id',\n      name: 'Test User',\n      email: 'test@example.com',\n    },\n    loading: false,\n  });\n\n  const login = async (email: string, password: string, callbackUrl?: string) => {\n    try {\n      setState((prev) => ({ ...prev, loading: true, error: undefined }));\n\n      const result = await signIn('credentials', {\n        email,\n        password,\n        redirect: false,\n        callbackUrl,\n      });\n\n      if (result?.error) {\n        setState((prev) => ({\n          ...prev,\n          loading: false,\n          error: {\n            type: 'UNAUTHORIZED',\n            message: result.error || 'ログインに失敗しました',\n            timestamp: Date.now(),\n          },\n        }));\n        return;\n      }\n\n      setState({\n        isAuthenticated: true,\n        user: {\n          id: 'test-user-id',\n          name: 'Test User',\n          email,\n        },\n        loading: false,\n      });\n    } catch (error) {\n      setState((prev) => ({\n        ...prev,\n        loading: false,\n        error: {\n          type: 'NETWORK',\n          message: error instanceof Error ? error.message : 'ログインに失敗しました',\n          timestamp: Date.now(),\n        },\n      }));\n    }\n  };\n\n  const logout = async (callbackUrl?: string) => {\n    try {\n      setState((prev) => ({ ...prev, loading: true }));\n\n      await signOut({\n        redirect: false,\n        callbackUrl,\n      });\n\n      setState({\n        isAuthenticated: false,\n        user: null,\n        loading: false,\n      });\n    } catch (error) {\n      setState((prev) => ({\n        ...prev,\n        loading: false,\n        error: {\n          type: 'NETWORK',\n          message: error instanceof Error ? error.message : 'ログアウトに失敗しました',\n          timestamp: Date.now(),\n        },\n      }));\n    }\n  };\n\n  const clearError = () => {\n    setState((prev) => ({ ...prev, error: undefined }));\n  };\n\n  return {\n    ...state,\n    login,\n    logout,\n    clearError,\n  };\n};\n\n// モックのセッションプロバイダー\nconst MockSessionProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  return <>{children}</>;\n};\n\n// セッション有効性チェック関数\nconst mockIsSessionValid = (session: any): boolean => {\n  if (!session) return false;\n\n  // セッションの有効期限をチェック\n  if (session.expires) {\n    const expiresDate = new Date(session.expires);\n    if (expiresDate < new Date()) {\n      return false;\n    }\n  }\n\n  // ユーザー情報の存在をチェック\n  if (!session.user || !session.user.id || !session.user.email) {\n    return false;\n  }\n\n  return true;\n};\n\n// モックの設定\njest.mock('next-auth/react');\nconst mockUseSession = useSession as any;\nconst mockSignIn = signIn as any;\nconst mockSignOut = signOut as any;\n\n// モック用のルーター\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n  }),\n}));\n\n// モック用のトースト\njest.mock('@/components/ui/use-toast', () => ({\n  toast: jest.fn(),\n}));\n\ndescribe('セッション管理', () => {\n  // 各テスト前にモックをリセット\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockUseSession.mockReturnValue({\n      data: {\n        user: {\n          id: 'test-user-id',\n          name: 'Test User',\n          email: 'test@example.com',\n        },\n        expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n      },\n      status: 'authenticated',\n    });\n    mockSignIn.mockResolvedValue({ ok: true, error: null });\n    mockSignOut.mockResolvedValue(true);\n  });\n\n  describe('useAuth', () => {\n    it('認証状態を正しく返す', () => {\n      const wrapper = ({ children }: { children: React.ReactNode }) => (\n        <MockSessionProvider>{children}</MockSessionProvider>\n      );\n      const { result } = renderHook(() => mockUseAuth(), { wrapper });\n\n      expect(result.current.isAuthenticated).toBe(true);\n      expect(result.current.user).toEqual({\n        id: 'test-user-id',\n        name: 'Test User',\n        email: 'test@example.com',\n      });\n      expect(result.current.loading).toBe(false);\n      expect(result.current.error).toBeUndefined();\n    });\n\n    it('ログイン処理を正しく実行する', async () => {\n      const wrapper = ({ children }: { children: React.ReactNode }) => (\n        <MockSessionProvider>{children}</MockSessionProvider>\n      );\n      const { result } = renderHook(() => mockUseAuth(), { wrapper });\n\n      await act(async () => {\n        await result.current.login('test@example.com', 'password123', '/dashboard');\n      });\n\n      expect(mockSignIn).toHaveBeenCalledWith('credentials', {\n        email: 'test@example.com',\n        password: 'password123',\n        redirect: false,\n        callbackUrl: '/dashboard',\n      });\n      expect(result.current.isAuthenticated).toBe(true);\n      expect(result.current.user).toEqual({\n        id: 'test-user-id',\n        name: 'Test User',\n        email: 'test@example.com',\n      });\n    });\n\n    it('ログアウト処理を正しく実行する', async () => {\n      const wrapper = ({ children }: { children: React.ReactNode }) => (\n        <MockSessionProvider>{children}</MockSessionProvider>\n      );\n      const { result } = renderHook(() => mockUseAuth(), { wrapper });\n\n      await act(async () => {\n        await result.current.logout('/signin');\n      });\n\n      expect(mockSignOut).toHaveBeenCalledWith({\n        redirect: false,\n        callbackUrl: '/signin',\n      });\n      expect(result.current.isAuthenticated).toBe(false);\n      expect(result.current.user).toBeNull();\n    });\n\n    it('ログインエラーを正しく処理する', async () => {\n      mockSignIn.mockResolvedValue({ ok: false, error: 'Invalid credentials' });\n\n      const wrapper = ({ children }: { children: React.ReactNode }) => (\n        <MockSessionProvider>{children}</MockSessionProvider>\n      );\n      const { result } = renderHook(() => mockUseAuth(), { wrapper });\n\n      await act(async () => {\n        await result.current.login('test@example.com', 'wrong-password');\n      });\n\n      expect(result.current.isAuthenticated).toBe(true);\n      expect(result.current.error).toBeDefined();\n      expect(result.current.error?.type).toBe('UNAUTHORIZED');\n      expect(result.current.error?.message).toBe('Invalid credentials');\n    });\n\n    it('エラーをクリアする', async () => {\n      mockSignIn.mockResolvedValue({ ok: false, error: 'Invalid credentials' });\n\n      const wrapper = ({ children }: { children: React.ReactNode }) => (\n        <MockSessionProvider>{children}</MockSessionProvider>\n      );\n      const { result } = renderHook(() => mockUseAuth(), { wrapper });\n\n      await act(async () => {\n        await result.current.login('test@example.com', 'wrong-password');\n      });\n\n      expect(result.current.error).toBeDefined();\n\n      act(() => {\n        result.current.clearError();\n      });\n\n      expect(result.current.error).toBeUndefined();\n    });\n  });\n\n  describe('セッション有効性チェック', () => {\n    it('有効なセッションを正しく検証する', () => {\n      const validSession = {\n        user: {\n          id: 'test-user-id',\n          email: 'test@example.com',\n        },\n        expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n      };\n\n      expect(mockIsSessionValid(validSession)).toBe(true);\n    });\n\n    it('期限切れのセッションを無効と判定する', () => {\n      const expiredSession = {\n        user: {\n          id: 'test-user-id',\n          email: 'test@example.com',\n        },\n        expires: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n      };\n\n      expect(mockIsSessionValid(expiredSession)).toBe(false);\n    });\n\n    it('ユーザー情報がないセッションを無効と判定する', () => {\n      const invalidSession = {\n        expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n      };\n\n      expect(mockIsSessionValid(invalidSession)).toBe(false);\n    });\n\n    it('nullセッションを無効と判定する', () => {\n      expect(mockIsSessionValid(null)).toBe(false);\n    });\n  });\n});\n"],"names":["jest","mock","useRouter","push","fn","toast","mockUseAuth","state","setState","React","useState","isAuthenticated","user","id","name","email","loading","login","password","callbackUrl","prev","error","undefined","result","signIn","redirect","type","message","timestamp","Date","now","Error","logout","signOut","clearError","MockSessionProvider","children","mockIsSessionValid","session","expires","expiresDate","mockUseSession","useSession","mockSignIn","mockSignOut","describe","beforeEach","clearAllMocks","mockReturnValue","data","toISOString","status","mockResolvedValue","ok","it","wrapper","renderHook","expect","current","toBe","toEqual","toBeUndefined","act","toHaveBeenCalledWith","toBeNull","toBeDefined","validSession","expiredSession","invalidSession"],"mappings":"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"}