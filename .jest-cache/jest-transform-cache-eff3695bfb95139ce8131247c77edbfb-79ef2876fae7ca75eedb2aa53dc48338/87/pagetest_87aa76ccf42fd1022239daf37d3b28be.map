{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/tests/app/translate/page.test.tsx"],"sourcesContent":["/// <reference path=\"../../jest.d.ts\" />\n\nimport React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport TranslatePage from '@/app/(dashboard)/translate/page';\nimport '@testing-library/jest-dom';\nimport { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/navigation';\nimport userEvent from '@testing-library/user-event';\nimport { act } from 'react';\nimport type { AppRouterInstance } from 'next/dist/shared/lib/app-router-context.shared-runtime';\n\n// モック\njest.mock('next/navigation', () => ({\n  useRouter: jest.fn(),\n  usePathname: jest.fn().mockReturnValue('/translate'),\n  useSearchParams: jest.fn().mockReturnValue(new URLSearchParams()),\n}));\n\njest.mock('next-auth/react', () => ({\n  useSession: jest.fn(),\n}));\n\njest.mock('@/components/ui/use-toast', () => {\n  const mockToasts: Array<{ id: string; title?: string; description?: string; open: boolean }> = [];\n  return {\n    useToast: jest.fn().mockReturnValue({\n      toasts: mockToasts,\n      toast: jest.fn(),\n      dismiss: jest.fn(),\n    }),\n    toast: jest.fn(),\n  };\n});\n\n// FileUploadComponentのモック\njest.mock('@/app/(dashboard)/translate/components/FileUpload', () => ({\n  FileUploadComponent: ({ onUploadComplete }: { onUploadComplete: (file: File) => void }) => (\n    <div data-testid=\"file-upload-component\">\n      <input\n        type=\"file\"\n        data-testid=\"mock-file-input\"\n        onChange={(e) => e.target.files && onUploadComplete(e.target.files[0])}\n      />\n      <button\n        onClick={() => {\n          const file = new File(['dummy content'], 'test.pptx', {\n            type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n          });\n          onUploadComplete(file);\n        }}\n        data-testid=\"mock-upload-button\"\n      >\n        ファイルをアップロード\n      </button>\n    </div>\n  ),\n}));\n\n// PreviewSectionComponentのモック\njest.mock('@/app/(dashboard)/translate/components/PreviewSection', () => ({\n  PreviewSectionComponent: ({ currentSlide, slides, onSlideChange, onTextSelect, onTextHover }: any) => (\n    <div data-testid=\"preview-section-component\">\n      <div data-testid=\"current-slide\">{currentSlide}</div>\n      <div data-testid=\"slides-count\">{slides.length}</div>\n      <button onClick={() => onSlideChange(currentSlide + 1)} data-testid=\"next-slide-button\">\n        次のスライド\n      </button>\n      <button onClick={() => onSlideChange(currentSlide - 1)} data-testid=\"prev-slide-button\">\n        前のスライド\n      </button>\n      <button onClick={() => onTextSelect(0)} data-testid=\"select-text-button\">\n        テキスト選択\n      </button>\n      <button onClick={() => onTextHover(0)} data-testid=\"hover-text-button\">\n        テキストホバー\n      </button>\n    </div>\n  ),\n}));\n\n// swrのモック\njest.mock('swr', () => ({\n  __esModule: true,\n  default: jest.fn().mockImplementation(() => ({\n    data: null,\n    error: null,\n    mutate: jest.fn(),\n    isValidating: false,\n    isLoading: false,\n  })),\n}));\n\n// セッションモック\njest.mock('@/lib/auth/session', () => ({\n  getSession: jest.fn().mockResolvedValue({\n    user: { id: '123', email: 'test@example.com' },\n    expires: new Date().toISOString(),\n  }),\n  signOut: jest.fn(),\n}));\n\n// 翻訳サービスのモック\njest.mock('@/lib/translation/translation-service', () => {\n  return {\n    translatePPTXSlides: jest.fn().mockResolvedValue({\n      texts: [\n        { id: '1', text: 'サンプルテキスト1', translation: 'Sample Text 1' },\n        { id: '2', text: 'サンプルテキスト2', translation: 'Sample Text 2' },\n      ],\n    }),\n  };\n});\n\n// fetchのモック\nglobal.fetch = jest.fn().mockImplementation((url) => {\n  if (typeof url === 'string' && url.includes('/api/slides')) {\n    return Promise.resolve({\n      ok: true,\n      json: () =>\n        Promise.resolve({\n          slides: [\n            {\n              id: '1',\n              imageUrl: '/test-image.png',\n              texts: [\n                { id: '1', text: 'サンプルテキスト1', rect: { x: 100, y: 100, width: 200, height: 50 } },\n                { id: '2', text: 'サンプルテキスト2', rect: { x: 100, y: 200, width: 200, height: 50 } },\n              ],\n            },\n            {\n              id: '2',\n              imageUrl: '/test-image2.png',\n              texts: [{ id: '3', text: 'サンプルテキスト3', rect: { x: 100, y: 100, width: 200, height: 50 } }],\n            },\n          ],\n        }),\n    });\n  }\n  return Promise.resolve({\n    ok: false,\n    status: 404,\n    json: () => Promise.resolve({ error: 'Not found' }),\n  });\n});\n\n// 他のモック\njest.mock('next/image', () => ({\n  __esModule: true,\n  default: (props: any) => <img {...props} />,\n}));\n\ndescribe('TranslatePage', () => {\n  const mockRouter = {\n    push: jest.fn(),\n    prefetch: jest.fn(),\n    replace: jest.fn(),\n  };\n\n  const mockSession = {\n    data: {\n      user: {\n        name: 'Test User',\n        email: 'test@example.com',\n      },\n      expires: '2023-01-01',\n    },\n    status: 'authenticated',\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    (useRouter as jest.Mock).mockReturnValue(mockRouter as unknown as AppRouterInstance);\n    (useSession as any).mockReturnValue(mockSession);\n  });\n\n  it.skip('ページが正しくレンダリングされること', async () => {\n    await act(async () => {\n      render(<TranslatePage />);\n    });\n\n    expect(screen.getByText('PowerPointファイルをアップロード')).toBeInTheDocument();\n    expect(screen.getByText('または、ここにファイルをドロップ')).toBeInTheDocument();\n  });\n\n  it.skip('ファイルがアップロードされたときにAPIが呼ばれること', async () => {\n    await act(async () => {\n      render(<TranslatePage />);\n    });\n\n    const file = new File(['dummy content'], 'test.pptx', {\n      type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    });\n    const fileInput = screen.getByTestId('mock-file-input');\n\n    await act(async () => {\n      fireEvent.change(fileInput, { target: { files: [file] } });\n    });\n\n    await waitFor(() => {\n      expect(global.fetch).toHaveBeenCalledWith(expect.stringContaining('/api/slides'), expect.any(Object));\n    });\n  });\n\n  it.skip('アップロード後にスライドが表示されること', async () => {\n    await act(async () => {\n      render(<TranslatePage />);\n    });\n\n    const file = new File(['dummy content'], 'test.pptx', {\n      type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    });\n    const fileInput = screen.getByTestId('mock-file-input');\n\n    await act(async () => {\n      fireEvent.change(fileInput, { target: { files: [file] } });\n    });\n\n    await waitFor(() => {\n      expect(screen.getByText('プレビュー')).toBeInTheDocument();\n      expect(screen.getByText('1 / 2')).toBeInTheDocument();\n    });\n  });\n\n  it.skip('翻訳言語を選択できること', async () => {\n    await act(async () => {\n      render(<TranslatePage />);\n    });\n\n    const file = new File(['dummy content'], 'test.pptx', {\n      type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    });\n    const fileInput = screen.getByTestId('mock-file-input');\n\n    await act(async () => {\n      fireEvent.change(fileInput, { target: { files: [file] } });\n    });\n\n    // 言語選択が表示される\n    const languageSelect = screen.getByRole('combobox');\n    expect(languageSelect).toBeInTheDocument();\n  });\n\n  it.skip('翻訳ボタンが表示され、クリックするとAPIが呼ばれること', async () => {\n    await act(async () => {\n      render(<TranslatePage />);\n    });\n\n    const file = new File(['dummy content'], 'test.pptx', {\n      type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    });\n    const fileInput = screen.getByTestId('mock-file-input');\n\n    await act(async () => {\n      fireEvent.change(fileInput, { target: { files: [file] } });\n    });\n\n    await waitFor(() => {\n      const translateButton = screen.getByRole('button', { name: /翻訳開始/i });\n      expect(translateButton).toBeInTheDocument();\n    });\n  });\n\n  it('エラー発生時にエラーメッセージが表示されること', async () => {\n    // fetchをオーバーライドしてエラーを返すようにする\n    global.fetch = jest.fn().mockImplementation(() =>\n      Promise.resolve({\n        ok: false,\n        status: 500,\n        json: () => Promise.resolve({ error: 'サーバーエラー' }),\n      }),\n    );\n\n    await act(async () => {\n      render(<TranslatePage />);\n    });\n\n    const file = new File(['dummy content'], 'test.pptx', {\n      type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    });\n    const fileInput = screen.getByTestId('mock-file-input');\n\n    await act(async () => {\n      fireEvent.change(fileInput, { target: { files: [file] } });\n    });\n\n    // エラー処理はuseToastを使って行われるのでモックが呼ばれたことを確認\n    expect(global.fetch).toHaveBeenCalled();\n  });\n\n  it.skip('認証が必要な場合にログインページにリダイレクトされること', async () => {\n    // セッションをnullに設定\n    require('@/lib/auth/session').getSession.mockResolvedValueOnce(null);\n\n    await act(async () => {\n      render(<TranslatePage />);\n    });\n\n    // リダイレクトが呼ばれたことを確認\n    expect(mockRouter.replace).toHaveBeenCalledWith('/signin?callbackUrl=/translate');\n  });\n\n  it.skip('スライドの切り替えができること', async () => {\n    await act(async () => {\n      render(<TranslatePage />);\n    });\n\n    const file = new File(['dummy content'], 'test.pptx', {\n      type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    });\n    const fileInput = screen.getByTestId('mock-file-input');\n\n    await act(async () => {\n      fireEvent.change(fileInput, { target: { files: [file] } });\n    });\n\n    await waitFor(() => {\n      expect(screen.getByText('1 / 2')).toBeInTheDocument();\n    });\n\n    // 次のスライドボタンをクリック\n    const nextButton = screen.getByRole('button', { name: '' }); // アイコンのみのボタン\n    await act(async () => {\n      fireEvent.click(nextButton);\n    });\n  });\n\n  it.skip('翻訳中のローディング状態が表示されること', async () => {\n    const user = userEvent.setup();\n\n    await act(async () => {\n      render(<TranslatePage />);\n    });\n\n    const file = new File(['dummy content'], 'test.pptx', {\n      type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    });\n    const fileInput = screen.getByTestId('mock-file-input');\n\n    await act(async () => {\n      fireEvent.change(fileInput, { target: { files: [file] } });\n    });\n\n    // 翻訳ボタンを取得\n    const translateButton = await screen.findByRole('button', { name: /翻訳開始/i });\n\n    // ボタンをクリック\n    await act(async () => {\n      await user.click(translateButton);\n    });\n  });\n\n  it.skip('翻訳結果が表示されること', async () => {\n    const user = userEvent.setup();\n\n    await act(async () => {\n      render(<TranslatePage />);\n    });\n\n    const file = new File(['dummy content'], 'test.pptx', {\n      type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    });\n    const fileInput = screen.getByTestId('mock-file-input');\n\n    await act(async () => {\n      fireEvent.change(fileInput, { target: { files: [file] } });\n    });\n\n    // 翻訳ボタンを取得\n    const translateButton = await screen.findByRole('button', { name: /翻訳開始/i });\n\n    // ボタンをクリック\n    await act(async () => {\n      await user.click(translateButton);\n    });\n\n    // 翻訳サービスが呼ばれたことを確認\n    expect(require('@/lib/translation/translation-service').translatePPTXSlides).toHaveBeenCalled();\n  });\n});\n"],"names":["jest","mock","useRouter","fn","usePathname","mockReturnValue","useSearchParams","URLSearchParams","useSession","mockToasts","useToast","toasts","toast","dismiss","FileUploadComponent","onUploadComplete","div","data-testid","input","type","onChange","e","target","files","button","onClick","file","File","PreviewSectionComponent","currentSlide","slides","onSlideChange","onTextSelect","onTextHover","length","__esModule","default","mockImplementation","data","error","mutate","isValidating","isLoading","getSession","mockResolvedValue","user","id","email","expires","Date","toISOString","signOut","translatePPTXSlides","texts","text","translation","props","img","global","fetch","url","includes","Promise","resolve","ok","json","imageUrl","rect","x","y","width","height","status","describe","mockRouter","push","prefetch","replace","mockSession","name","beforeEach","clearAllMocks","it","skip","act","render","TranslatePage","expect","screen","getByText","toBeInTheDocument","fileInput","getByTestId","fireEvent","change","waitFor","toHaveBeenCalledWith","stringContaining","any","Object","languageSelect","getByRole","translateButton","toHaveBeenCalled","require","mockResolvedValueOnce","nextButton","click","userEvent","setup","findByRole"],"mappings":"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"}