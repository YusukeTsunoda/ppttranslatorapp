{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/cicd-setup/tests/utils/utils.test.ts"],"sourcesContent":["import { cn, formatDate } from '@/lib/utils';\nimport { expect } from '@jest/globals';\n\ndescribe('cn function', () => {\n  it('クラス名を正しく結合する', () => {\n    // 基本的な結合\n    expect(cn('class1', 'class2')).toBe('class1 class2');\n\n    // 条件付きクラス\n    expect(cn('class1', true && 'class2', false && 'class3')).toBe('class1 class2');\n\n    // オブジェクト形式\n    expect(cn('class1', { class2: true, class3: false })).toBe('class1 class2');\n\n    // 配列形式\n    expect(cn('class1', ['class2', 'class3'])).toBe('class1 class2 class3');\n\n    // tailwindのクラス結合（競合解決）\n    expect(cn('p-4 text-red-500', 'p-6')).toBe('text-red-500 p-6');\n  });\n\n  it('空の入力を処理する', () => {\n    expect(cn()).toBe('');\n    expect(cn('')).toBe('');\n    expect(cn(null)).toBe('');\n    expect(cn(undefined)).toBe('');\n  });\n});\n\ndescribe('formatDate function', () => {\n  it('日付を日本語形式でフォーマットする', () => {\n    // 特定の日付でテスト\n    const date = new Date(2023, 0, 15); // 2023年1月15日\n    expect(formatDate(date)).toBe('2023年1月15日');\n\n    // 別の日付でテスト\n    const anotherDate = new Date(2024, 11, 31); // 2024年12月31日\n    expect(formatDate(anotherDate)).toBe('2024年12月31日');\n  });\n\n  it('現在の日付をフォーマットする', () => {\n    // 現在の日付\n    const now = new Date();\n\n    // 期待される形式（正規表現でチェック）\n    const expectedPattern = /^\\d{4}年\\d{1,2}月\\d{1,2}日$/;\n\n    expect(formatDate(now)).toMatch(expectedPattern);\n  });\n\n  it('日付オブジェクトが必要', () => {\n    // 不正な入力に対するテスト\n    expect(() => {\n      // @ts-ignore - 意図的に不正な型を渡す\n      formatDate('2023-01-15');\n    }).toThrow();\n  });\n});\n"],"names":["describe","it","expect","cn","toBe","class2","class3","undefined","date","Date","formatDate","anotherDate","now","expectedPattern","toMatch","toThrow"],"mappings":";;;;uBAA+B;yBACR;AAEvBA,SAAS,eAAe;IACtBC,GAAG,gBAAgB;QACjB,SAAS;QACTC,IAAAA,eAAM,EAACC,IAAAA,SAAE,EAAC,UAAU,WAAWC,IAAI,CAAC;QAEpC,UAAU;QACVF,IAAAA,eAAM,EAACC,IAAAA,SAAE,EAAC,UAAU,QAAQ,UAAU,SAAS,WAAWC,IAAI,CAAC;QAE/D,WAAW;QACXF,IAAAA,eAAM,EAACC,IAAAA,SAAE,EAAC,UAAU;YAAEE,QAAQ;YAAMC,QAAQ;QAAM,IAAIF,IAAI,CAAC;QAE3D,OAAO;QACPF,IAAAA,eAAM,EAACC,IAAAA,SAAE,EAAC,UAAU;YAAC;YAAU;SAAS,GAAGC,IAAI,CAAC;QAEhD,uBAAuB;QACvBF,IAAAA,eAAM,EAACC,IAAAA,SAAE,EAAC,oBAAoB,QAAQC,IAAI,CAAC;IAC7C;IAEAH,GAAG,aAAa;QACdC,IAAAA,eAAM,EAACC,IAAAA,SAAE,KAAIC,IAAI,CAAC;QAClBF,IAAAA,eAAM,EAACC,IAAAA,SAAE,EAAC,KAAKC,IAAI,CAAC;QACpBF,IAAAA,eAAM,EAACC,IAAAA,SAAE,EAAC,OAAOC,IAAI,CAAC;QACtBF,IAAAA,eAAM,EAACC,IAAAA,SAAE,EAACI,YAAYH,IAAI,CAAC;IAC7B;AACF;AAEAJ,SAAS,uBAAuB;IAC9BC,GAAG,qBAAqB;QACtB,YAAY;QACZ,MAAMO,OAAO,IAAIC,KAAK,MAAM,GAAG,KAAK,aAAa;QACjDP,IAAAA,eAAM,EAACQ,IAAAA,iBAAU,EAACF,OAAOJ,IAAI,CAAC;QAE9B,WAAW;QACX,MAAMO,cAAc,IAAIF,KAAK,MAAM,IAAI,KAAK,cAAc;QAC1DP,IAAAA,eAAM,EAACQ,IAAAA,iBAAU,EAACC,cAAcP,IAAI,CAAC;IACvC;IAEAH,GAAG,kBAAkB;QACnB,QAAQ;QACR,MAAMW,MAAM,IAAIH;QAEhB,qBAAqB;QACrB,MAAMI,kBAAkB;QAExBX,IAAAA,eAAM,EAACQ,IAAAA,iBAAU,EAACE,MAAME,OAAO,CAACD;IAClC;IAEAZ,GAAG,eAAe;QAChB,eAAe;QACfC,IAAAA,eAAM,EAAC;YACL,2BAA2B;YAC3BQ,IAAAA,iBAAU,EAAC;QACb,GAAGK,OAAO;IACZ;AACF"}