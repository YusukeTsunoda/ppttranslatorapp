{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/feature-test-coverage-improvement/tests/lib/utils/activity-logger.test.ts"],"sourcesContent":["import { ActivityAction, logActivity, getUserActivityLogs } from '@/lib/utils/activity-logger';\n\n// コンソール出力のモック\nconst originalConsoleLog = console.log;\nconsole.log = jest.fn();\n\ndescribe('アクティビティログユーティリティ', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  afterAll(() => {\n    // テスト後にコンソール関数を元に戻す\n    console.log = originalConsoleLog;\n  });\n\n  describe('logActivity', () => {\n    it('有効なデータでログを記録できる', async () => {\n      const logData = {\n        userId: 'test-user-123',\n        action: ActivityAction.sign_in,\n        metadata: { ipAddress: '127.0.0.1', device: 'Chrome/Windows' },\n      };\n\n      await logActivity(logData);\n\n      expect(console.log).toHaveBeenCalledWith('Activity logged (dummy):', logData);\n    });\n\n    it('最小限のデータでログを記録できる', async () => {\n      const logData = {\n        userId: 'test-user-123',\n        action: ActivityAction.file_upload,\n      };\n\n      await logActivity(logData);\n\n      expect(console.log).toHaveBeenCalledWith('Activity logged (dummy):', logData);\n    });\n\n    it('すべてのアクティビティタイプでログを記録できる', async () => {\n      // すべてのActivityActionタイプをテスト\n      for (const action of Object.values(ActivityAction)) {\n        const logData = {\n          userId: 'test-user-123',\n          action: action as ActivityAction,\n        };\n\n        await logActivity(logData);\n\n        expect(console.log).toHaveBeenCalledWith('Activity logged (dummy):', logData);\n      }\n    });\n  });\n\n  describe('getUserActivityLogs', () => {\n    it('特定ユーザーのログを取得できる', async () => {\n      const userId = 'test-user-123';\n      const result = await getUserActivityLogs(userId);\n\n      expect(console.log).toHaveBeenCalledWith('Get user activity logs (dummy):', { userId, limit: 50, cursor: undefined });\n      expect(result).toEqual({ logs: [], nextCursor: undefined });\n    });\n\n    it('制限とカーソルを指定してログを取得できる', async () => {\n      const userId = 'test-user-123';\n      const limit = 10;\n      const cursor = 'last-log-id';\n      const result = await getUserActivityLogs(userId, limit, cursor);\n\n      expect(console.log).toHaveBeenCalledWith('Get user activity logs (dummy):', { userId, limit, cursor });\n      expect(result).toEqual({ logs: [], nextCursor: undefined });\n    });\n  });\n}); "],"names":["originalConsoleLog","console","log","jest","fn","describe","beforeEach","clearAllMocks","afterAll","it","logData","userId","action","ActivityAction","sign_in","metadata","ipAddress","device","logActivity","expect","toHaveBeenCalledWith","file_upload","Object","values","result","getUserActivityLogs","limit","cursor","undefined","toEqual","logs","nextCursor"],"mappings":";;;;gCAAiE;AAEjE,cAAc;AACd,MAAMA,qBAAqBC,QAAQC,GAAG;AACtCD,QAAQC,GAAG,GAAGC,KAAKC,EAAE;AAErBC,SAAS,oBAAoB;IAC3BC,WAAW;QACTH,KAAKI,aAAa;IACpB;IAEAC,SAAS;QACP,oBAAoB;QACpBP,QAAQC,GAAG,GAAGF;IAChB;IAEAK,SAAS,eAAe;QACtBI,GAAG,mBAAmB;YACpB,MAAMC,UAAU;gBACdC,QAAQ;gBACRC,QAAQC,8BAAc,CAACC,OAAO;gBAC9BC,UAAU;oBAAEC,WAAW;oBAAaC,QAAQ;gBAAiB;YAC/D;YAEA,MAAMC,IAAAA,2BAAW,EAACR;YAElBS,OAAOlB,QAAQC,GAAG,EAAEkB,oBAAoB,CAAC,4BAA4BV;QACvE;QAEAD,GAAG,oBAAoB;YACrB,MAAMC,UAAU;gBACdC,QAAQ;gBACRC,QAAQC,8BAAc,CAACQ,WAAW;YACpC;YAEA,MAAMH,IAAAA,2BAAW,EAACR;YAElBS,OAAOlB,QAAQC,GAAG,EAAEkB,oBAAoB,CAAC,4BAA4BV;QACvE;QAEAD,GAAG,2BAA2B;YAC5B,4BAA4B;YAC5B,KAAK,MAAMG,UAAUU,OAAOC,MAAM,CAACV,8BAAc,EAAG;gBAClD,MAAMH,UAAU;oBACdC,QAAQ;oBACRC,QAAQA;gBACV;gBAEA,MAAMM,IAAAA,2BAAW,EAACR;gBAElBS,OAAOlB,QAAQC,GAAG,EAAEkB,oBAAoB,CAAC,4BAA4BV;YACvE;QACF;IACF;IAEAL,SAAS,uBAAuB;QAC9BI,GAAG,mBAAmB;YACpB,MAAME,SAAS;YACf,MAAMa,SAAS,MAAMC,IAAAA,mCAAmB,EAACd;YAEzCQ,OAAOlB,QAAQC,GAAG,EAAEkB,oBAAoB,CAAC,mCAAmC;gBAAET;gBAAQe,OAAO;gBAAIC,QAAQC;YAAU;YACnHT,OAAOK,QAAQK,OAAO,CAAC;gBAAEC,MAAM,EAAE;gBAAEC,YAAYH;YAAU;QAC3D;QAEAnB,GAAG,wBAAwB;YACzB,MAAME,SAAS;YACf,MAAMe,QAAQ;YACd,MAAMC,SAAS;YACf,MAAMH,SAAS,MAAMC,IAAAA,mCAAmB,EAACd,QAAQe,OAAOC;YAExDR,OAAOlB,QAAQC,GAAG,EAAEkB,oBAAoB,CAAC,mCAAmC;gBAAET;gBAAQe;gBAAOC;YAAO;YACpGR,OAAOK,QAAQK,OAAO,CAAC;gBAAEC,MAAM,EAAE;gBAAEC,YAAYH;YAAU;QAC3D;IACF;AACF"}