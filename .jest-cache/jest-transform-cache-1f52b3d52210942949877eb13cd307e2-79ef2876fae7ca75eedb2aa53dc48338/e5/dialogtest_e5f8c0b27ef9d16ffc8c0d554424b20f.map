{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/feature-test-coverage-improvement/tests/components/ui/dialog.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport {\n  Dialog,\n  DialogTrigger,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport '@testing-library/jest-dom';\n\n// Radixコンポーネントのモック\njest.mock('@radix-ui/react-dialog', () => {\n  const original = jest.requireActual('@radix-ui/react-dialog');\n  return {\n    ...original,\n    Root: ({ children, open, onOpenChange }: any) => (\n      <div data-testid=\"dialog-root\" data-open={open} onClick={() => onOpenChange && onOpenChange(!open)}>\n        {children}\n      </div>\n    ),\n    Trigger: ({ children }: any) => <button data-testid=\"dialog-trigger\">{children}</button>,\n    Portal: ({ children }: any) => <div data-testid=\"dialog-portal\">{children}</div>,\n    Overlay: React.forwardRef(({ children, className, ...props }: any, ref) => (\n      <div data-testid=\"dialog-overlay\" className={className} {...props} ref={ref}>\n        {children}\n      </div>\n    )),\n    Content: React.forwardRef(({ children, className, ...props }: any, ref) => (\n      <div data-testid=\"dialog-content\" className={className} {...props} ref={ref}>\n        {children}\n      </div>\n    )),\n    Title: React.forwardRef(({ children, className, ...props }: any, ref) => (\n      <h2 data-testid=\"dialog-title\" className={className} {...props} ref={ref}>\n        {children}\n      </h2>\n    )),\n    Description: React.forwardRef(({ children, className, ...props }: any, ref) => (\n      <p data-testid=\"dialog-description\" className={className} {...props} ref={ref}>\n        {children}\n      </p>\n    )),\n    Close: ({ children }: any) => <button data-testid=\"dialog-close\">{children}</button>,\n  };\n});\n\ndescribe('Dialog', () => {\n  it('すべてのコンポーネントが正しくレンダリングされること', () => {\n    render(\n      <Dialog>\n        <DialogTrigger>ダイアログを開く</DialogTrigger>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>ダイアログタイトル</DialogTitle>\n            <DialogDescription>\n              これはダイアログの説明です。\n            </DialogDescription>\n          </DialogHeader>\n          <div>ダイアログの内容</div>\n          <DialogFooter>\n            <DialogClose>閉じる</DialogClose>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    );\n\n    expect(screen.getByText('ダイアログを開く')).toBeInTheDocument();\n    expect(screen.getByTestId('dialog-root')).toBeInTheDocument();\n    expect(screen.getByTestId('dialog-trigger')).toBeInTheDocument();\n    expect(screen.getByTestId('dialog-portal')).toBeInTheDocument();\n    expect(screen.getByTestId('dialog-content')).toBeInTheDocument();\n    expect(screen.getByTestId('dialog-title')).toHaveTextContent('ダイアログタイトル');\n    expect(screen.getByTestId('dialog-description')).toHaveTextContent('これはダイアログの説明です。');\n    expect(screen.getAllByTestId('dialog-close')).toHaveLength(2);\n  });\n\n  it('クラス名が正しく適用されること', () => {\n    render(\n      <Dialog>\n        <DialogContent className=\"custom-content\">\n          <DialogHeader className=\"custom-header\">\n            <DialogTitle className=\"custom-title\">タイトル</DialogTitle>\n            <DialogDescription className=\"custom-description\">説明</DialogDescription>\n          </DialogHeader>\n          <DialogFooter className=\"custom-footer\">\n            <DialogClose>閉じる</DialogClose>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    );\n\n    expect(screen.getByTestId('dialog-content').className).toContain('custom-content');\n    expect(screen.getByTestId('dialog-title').className).toContain('custom-title');\n    expect(screen.getByTestId('dialog-description').className).toContain('custom-description');\n  });\n}); "],"names":["jest","mock","original","requireActual","Root","children","open","onOpenChange","div","data-testid","data-open","onClick","Trigger","button","Portal","Overlay","React","forwardRef","className","props","ref","Content","Title","h2","Description","p","Close","describe","it","render","Dialog","DialogTrigger","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","DialogClose","expect","screen","getByText","toBeInTheDocument","getByTestId","toHaveTextContent","getAllByTestId","toHaveLength","toContain"],"mappings":"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"}