{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/feature-test-coverage-improvement/tests/components/ui/button.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Button } from '@/components/ui/button';\n\ndescribe('Button', () => {\n  it('ボタンをレンダリングする', () => {\n    render(<Button>テストボタン</Button>);\n    const button = screen.getByRole('button', { name: 'テストボタン' });\n    expect(button).toBeInTheDocument();\n  });\n\n  it('クリックイベントを処理する', () => {\n    const handleClick = jest.fn();\n    render(<Button onClick={handleClick}>クリック</Button>);\n\n    const button = screen.getByRole('button', { name: 'クリック' });\n    fireEvent.click(button);\n\n    expect(handleClick).toHaveBeenCalledTimes(1);\n  });\n\n  it('異なるバリアントをレンダリングする', () => {\n    render(\n      <>\n        <Button variant=\"default\" data-testid=\"default\">\n          デフォルト\n        </Button>\n        <Button variant=\"destructive\" data-testid=\"destructive\">\n          破壊的\n        </Button>\n        <Button variant=\"outline\" data-testid=\"outline\">\n          アウトライン\n        </Button>\n        <Button variant=\"secondary\" data-testid=\"secondary\">\n          セカンダリ\n        </Button>\n        <Button variant=\"ghost\" data-testid=\"ghost\">\n          ゴースト\n        </Button>\n        <Button variant=\"link\" data-testid=\"link\">\n          リンク\n        </Button>\n      </>,\n    );\n\n    expect(screen.getByTestId('default')).toHaveClass('bg-primary');\n    expect(screen.getByTestId('destructive')).toHaveClass('bg-destructive');\n    expect(screen.getByTestId('outline')).toHaveClass('border-input');\n    expect(screen.getByTestId('secondary')).toHaveClass('bg-secondary');\n    expect(screen.getByTestId('ghost')).toHaveClass('hover:bg-accent');\n    expect(screen.getByTestId('link')).toHaveClass('text-primary');\n  });\n\n  it('異なるサイズをレンダリングする', () => {\n    render(\n      <>\n        <Button size=\"default\" data-testid=\"default\">\n          デフォルト\n        </Button>\n        <Button size=\"sm\" data-testid=\"sm\">\n          小\n        </Button>\n        <Button size=\"lg\" data-testid=\"lg\">\n          大\n        </Button>\n        <Button size=\"icon\" data-testid=\"icon\">\n          アイコン\n        </Button>\n      </>,\n    );\n\n    expect(screen.getByTestId('default')).toHaveClass('h-10');\n    expect(screen.getByTestId('sm')).toHaveClass('h-9');\n    expect(screen.getByTestId('lg')).toHaveClass('h-11');\n    expect(screen.getByTestId('icon')).toHaveClass('h-10 w-10');\n  });\n\n  it('無効状態をレンダリングする', () => {\n    render(\n      <Button disabled data-testid=\"disabled\">\n        無効\n      </Button>,\n    );\n\n    const button = screen.getByTestId('disabled');\n    expect(button).toBeDisabled();\n    expect(button).toHaveClass('disabled:opacity-50');\n  });\n\n  it('カスタムクラス名を適用する', () => {\n    render(\n      <Button className=\"custom-class\" data-testid=\"custom\">\n        カスタム\n      </Button>,\n    );\n\n    const button = screen.getByTestId('custom');\n    expect(button).toHaveClass('custom-class');\n  });\n\n  it('asChildプロパティを使用して別の要素としてレンダリングする', () => {\n    render(\n      <Button asChild>\n        <a href=\"#\" data-testid=\"link-button\">\n          リンクボタン\n        </a>\n      </Button>,\n    );\n\n    const link = screen.getByTestId('link-button');\n    expect(link).toBeInTheDocument();\n    expect(link.tagName).toBe('A');\n    expect(link).toHaveAttribute('href', '#');\n  });\n});\n"],"names":["describe","it","render","Button","button","screen","getByRole","name","expect","toBeInTheDocument","handleClick","jest","fn","onClick","fireEvent","click","toHaveBeenCalledTimes","variant","data-testid","getByTestId","toHaveClass","size","disabled","toBeDisabled","className","asChild","a","href","link","tagName","toBe","toHaveAttribute"],"mappings":";;;;;8DAAkB;wBACwB;wBACnB;;;;;;AAEvBA,SAAS,UAAU;IACjBC,GAAG,gBAAgB;QACjBC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;sBAAC;;QACf,MAAMC,SAASC,cAAM,CAACC,SAAS,CAAC,UAAU;YAAEC,MAAM;QAAS;QAC3DC,OAAOJ,QAAQK,iBAAiB;IAClC;IAEAR,GAAG,iBAAiB;QAClB,MAAMS,cAAcC,KAAKC,EAAE;QAC3BV,IAAAA,cAAM,gBAAC,qBAACC,cAAM;YAACU,SAASH;sBAAa;;QAErC,MAAMN,SAASC,cAAM,CAACC,SAAS,CAAC,UAAU;YAAEC,MAAM;QAAO;QACzDO,iBAAS,CAACC,KAAK,CAACX;QAEhBI,OAAOE,aAAaM,qBAAqB,CAAC;IAC5C;IAEAf,GAAG,qBAAqB;QACtBC,IAAAA,cAAM,gBACJ;;8BACE,qBAACC,cAAM;oBAACc,SAAQ;oBAAUC,eAAY;8BAAU;;8BAGhD,qBAACf,cAAM;oBAACc,SAAQ;oBAAcC,eAAY;8BAAc;;8BAGxD,qBAACf,cAAM;oBAACc,SAAQ;oBAAUC,eAAY;8BAAU;;8BAGhD,qBAACf,cAAM;oBAACc,SAAQ;oBAAYC,eAAY;8BAAY;;8BAGpD,qBAACf,cAAM;oBAACc,SAAQ;oBAAQC,eAAY;8BAAQ;;8BAG5C,qBAACf,cAAM;oBAACc,SAAQ;oBAAOC,eAAY;8BAAO;;;;QAM9CV,OAAOH,cAAM,CAACc,WAAW,CAAC,YAAYC,WAAW,CAAC;QAClDZ,OAAOH,cAAM,CAACc,WAAW,CAAC,gBAAgBC,WAAW,CAAC;QACtDZ,OAAOH,cAAM,CAACc,WAAW,CAAC,YAAYC,WAAW,CAAC;QAClDZ,OAAOH,cAAM,CAACc,WAAW,CAAC,cAAcC,WAAW,CAAC;QACpDZ,OAAOH,cAAM,CAACc,WAAW,CAAC,UAAUC,WAAW,CAAC;QAChDZ,OAAOH,cAAM,CAACc,WAAW,CAAC,SAASC,WAAW,CAAC;IACjD;IAEAnB,GAAG,mBAAmB;QACpBC,IAAAA,cAAM,gBACJ;;8BACE,qBAACC,cAAM;oBAACkB,MAAK;oBAAUH,eAAY;8BAAU;;8BAG7C,qBAACf,cAAM;oBAACkB,MAAK;oBAAKH,eAAY;8BAAK;;8BAGnC,qBAACf,cAAM;oBAACkB,MAAK;oBAAKH,eAAY;8BAAK;;8BAGnC,qBAACf,cAAM;oBAACkB,MAAK;oBAAOH,eAAY;8BAAO;;;;QAM3CV,OAAOH,cAAM,CAACc,WAAW,CAAC,YAAYC,WAAW,CAAC;QAClDZ,OAAOH,cAAM,CAACc,WAAW,CAAC,OAAOC,WAAW,CAAC;QAC7CZ,OAAOH,cAAM,CAACc,WAAW,CAAC,OAAOC,WAAW,CAAC;QAC7CZ,OAAOH,cAAM,CAACc,WAAW,CAAC,SAASC,WAAW,CAAC;IACjD;IAEAnB,GAAG,iBAAiB;QAClBC,IAAAA,cAAM,gBACJ,qBAACC,cAAM;YAACmB,QAAQ;YAACJ,eAAY;sBAAW;;QAK1C,MAAMd,SAASC,cAAM,CAACc,WAAW,CAAC;QAClCX,OAAOJ,QAAQmB,YAAY;QAC3Bf,OAAOJ,QAAQgB,WAAW,CAAC;IAC7B;IAEAnB,GAAG,iBAAiB;QAClBC,IAAAA,cAAM,gBACJ,qBAACC,cAAM;YAACqB,WAAU;YAAeN,eAAY;sBAAS;;QAKxD,MAAMd,SAASC,cAAM,CAACc,WAAW,CAAC;QAClCX,OAAOJ,QAAQgB,WAAW,CAAC;IAC7B;IAEAnB,GAAG,oCAAoC;QACrCC,IAAAA,cAAM,gBACJ,qBAACC,cAAM;YAACsB,OAAO;sBACb,cAAA,qBAACC;gBAAEC,MAAK;gBAAIT,eAAY;0BAAc;;;QAM1C,MAAMU,OAAOvB,cAAM,CAACc,WAAW,CAAC;QAChCX,OAAOoB,MAAMnB,iBAAiB;QAC9BD,OAAOoB,KAAKC,OAAO,EAAEC,IAAI,CAAC;QAC1BtB,OAAOoB,MAAMG,eAAe,CAAC,QAAQ;IACvC;AACF"}