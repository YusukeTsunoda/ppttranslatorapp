{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/feature-test-coverage-improvement/tests/components/ui/textarea.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Textarea } from '@/components/ui/textarea';\nimport '@testing-library/jest-dom';\n\ndescribe('Textarea', () => {\n  it('正しくレンダリングされること', () => {\n    render(<Textarea placeholder=\"テキストを入力\" />);\n    \n    const textarea = screen.getByPlaceholderText('テキストを入力');\n    expect(textarea).toBeInTheDocument();\n    expect(textarea.tagName).toBe('TEXTAREA');\n  });\n\n  it('テキスト入力を処理できること', () => {\n    render(<Textarea placeholder=\"テキストを入力\" />);\n    \n    const textarea = screen.getByPlaceholderText('テキストを入力');\n    fireEvent.change(textarea, { target: { value: 'テストメッセージ' } });\n    \n    expect(textarea).toHaveValue('テストメッセージ');\n  });\n\n  it('追加のクラス名が適用されること', () => {\n    render(<Textarea className=\"custom-class\" />);\n    \n    const textarea = screen.getByRole('textbox');\n    expect(textarea).toHaveClass('custom-class');\n  });\n\n  it('禁止状態が正しく反映されること', () => {\n    render(<Textarea disabled />);\n    \n    const textarea = screen.getByRole('textbox');\n    expect(textarea).toBeDisabled();\n  });\n\n  it('読み取り専用状態が正しく反映されること', () => {\n    render(<Textarea readOnly />);\n    \n    const textarea = screen.getByRole('textbox');\n    expect(textarea).toHaveAttribute('readOnly');\n  });\n\n  it('フォームイベントが正しく処理されること', () => {\n    const handleChange = jest.fn();\n    const handleFocus = jest.fn();\n    const handleBlur = jest.fn();\n    \n    render(\n      <Textarea\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n      />\n    );\n    \n    const textarea = screen.getByRole('textbox');\n    \n    // 変更イベント\n    fireEvent.change(textarea, { target: { value: 'テストテキスト' } });\n    expect(handleChange).toHaveBeenCalled();\n    \n    // フォーカスイベント\n    fireEvent.focus(textarea);\n    expect(handleFocus).toHaveBeenCalled();\n    \n    // ブラーイベント\n    fireEvent.blur(textarea);\n    expect(handleBlur).toHaveBeenCalled();\n  });\n}); "],"names":["describe","it","render","Textarea","placeholder","textarea","screen","getByPlaceholderText","expect","toBeInTheDocument","tagName","toBe","fireEvent","change","target","value","toHaveValue","className","getByRole","toHaveClass","disabled","toBeDisabled","readOnly","toHaveAttribute","handleChange","jest","fn","handleFocus","handleBlur","onChange","onFocus","onBlur","toHaveBeenCalled","focus","blur"],"mappings":";;;;;8DAAkB;wBACwB;0BACjB;QAClB;;;;;;AAEPA,SAAS,YAAY;IACnBC,GAAG,kBAAkB;QACnBC,IAAAA,cAAM,gBAAC,qBAACC,kBAAQ;YAACC,aAAY;;QAE7B,MAAMC,WAAWC,cAAM,CAACC,oBAAoB,CAAC;QAC7CC,OAAOH,UAAUI,iBAAiB;QAClCD,OAAOH,SAASK,OAAO,EAAEC,IAAI,CAAC;IAChC;IAEAV,GAAG,kBAAkB;QACnBC,IAAAA,cAAM,gBAAC,qBAACC,kBAAQ;YAACC,aAAY;;QAE7B,MAAMC,WAAWC,cAAM,CAACC,oBAAoB,CAAC;QAC7CK,iBAAS,CAACC,MAAM,CAACR,UAAU;YAAES,QAAQ;gBAAEC,OAAO;YAAW;QAAE;QAE3DP,OAAOH,UAAUW,WAAW,CAAC;IAC/B;IAEAf,GAAG,mBAAmB;QACpBC,IAAAA,cAAM,gBAAC,qBAACC,kBAAQ;YAACc,WAAU;;QAE3B,MAAMZ,WAAWC,cAAM,CAACY,SAAS,CAAC;QAClCV,OAAOH,UAAUc,WAAW,CAAC;IAC/B;IAEAlB,GAAG,mBAAmB;QACpBC,IAAAA,cAAM,gBAAC,qBAACC,kBAAQ;YAACiB,QAAQ;;QAEzB,MAAMf,WAAWC,cAAM,CAACY,SAAS,CAAC;QAClCV,OAAOH,UAAUgB,YAAY;IAC/B;IAEApB,GAAG,uBAAuB;QACxBC,IAAAA,cAAM,gBAAC,qBAACC,kBAAQ;YAACmB,QAAQ;;QAEzB,MAAMjB,WAAWC,cAAM,CAACY,SAAS,CAAC;QAClCV,OAAOH,UAAUkB,eAAe,CAAC;IACnC;IAEAtB,GAAG,uBAAuB;QACxB,MAAMuB,eAAeC,KAAKC,EAAE;QAC5B,MAAMC,cAAcF,KAAKC,EAAE;QAC3B,MAAME,aAAaH,KAAKC,EAAE;QAE1BxB,IAAAA,cAAM,gBACJ,qBAACC,kBAAQ;YACP0B,UAAUL;YACVM,SAASH;YACTI,QAAQH;;QAIZ,MAAMvB,WAAWC,cAAM,CAACY,SAAS,CAAC;QAElC,SAAS;QACTN,iBAAS,CAACC,MAAM,CAACR,UAAU;YAAES,QAAQ;gBAAEC,OAAO;YAAU;QAAE;QAC1DP,OAAOgB,cAAcQ,gBAAgB;QAErC,YAAY;QACZpB,iBAAS,CAACqB,KAAK,CAAC5B;QAChBG,OAAOmB,aAAaK,gBAAgB;QAEpC,UAAU;QACVpB,iBAAS,CAACsB,IAAI,CAAC7B;QACfG,OAAOoB,YAAYI,gBAAgB;IACrC;AACF"}