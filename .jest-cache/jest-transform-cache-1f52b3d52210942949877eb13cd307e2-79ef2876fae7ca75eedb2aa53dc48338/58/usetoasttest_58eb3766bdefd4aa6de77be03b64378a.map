{"version":3,"sources":["/Users/yusuketsunoda/Documents/cursor/ppttranslatorapp/worktrees/feature-test-coverage-improvement/tests/components/ui/use-toast.test.tsx"],"sourcesContent":["import { useToast, toast, reducer } from '@/components/ui/use-toast';\nimport { renderHook, act } from '@testing-library/react';\n\n// モックタイムアウトを設定\njest.useFakeTimers();\n\ndescribe('useToast', () => {\n  it('toast関数を呼び出してトーストを追加できる', () => {\n    const { result } = renderHook(() => useToast());\n\n    act(() => {\n      result.current.toast({\n        title: 'テストタイトル',\n        description: 'テスト説明',\n      });\n    });\n\n    expect(result.current.toasts).toHaveLength(1);\n    expect(result.current.toasts[0].title).toBe('テストタイトル');\n    expect(result.current.toasts[0].description).toBe('テスト説明');\n    expect(result.current.toasts[0].open).toBe(true);\n  });\n\n  it('dismiss関数を呼び出してトーストを閉じる', () => {\n    const { result } = renderHook(() => useToast());\n    let toastId: string;\n\n    act(() => {\n      const response = result.current.toast({\n        title: 'テストタイトル',\n      });\n      toastId = response.id;\n    });\n\n    expect(result.current.toasts).toHaveLength(1);\n    expect(result.current.toasts[0].open).toBe(true);\n\n    act(() => {\n      result.current.dismiss(toastId);\n    });\n\n    expect(result.current.toasts[0].open).toBe(false);\n  });\n\n  it('IDなしでdismiss関数を呼び出すと全てのトーストを閉じる', () => {\n    const { result } = renderHook(() => useToast());\n\n    act(() => {\n      result.current.toast({ title: 'トースト1' });\n      result.current.toast({ title: 'トースト2' });\n    });\n\n    expect(result.current.toasts).toHaveLength(2);\n    expect(result.current.toasts.every((t) => t.open)).toBe(true);\n\n    act(() => {\n      result.current.dismiss();\n    });\n\n    expect(result.current.toasts.every((t) => !t.open)).toBe(true);\n  });\n});\n\n// グローバルトースト関数のテスト\ndescribe('toast', () => {\n  it('トーストを生成し、IDとメソッドを返す', () => {\n    const result = toast({ title: 'テストトースト' });\n\n    expect(result).toHaveProperty('id');\n    expect(result).toHaveProperty('dismiss');\n    expect(result).toHaveProperty('update');\n    expect(typeof result.id).toBe('string');\n    expect(typeof result.dismiss).toBe('function');\n    expect(typeof result.update).toBe('function');\n  });\n});\n\n// リデューサーのテスト\ndescribe('reducer', () => {\n  it('ADD_TOASTアクションでトーストを追加する', () => {\n    const initialState = { toasts: [] };\n    const newToast = { id: '1', title: 'テストトースト', open: true };\n\n    const newState = reducer(initialState, {\n      type: 'ADD_TOAST',\n      toast: newToast,\n    });\n\n    expect(newState.toasts).toHaveLength(1);\n    expect(newState.toasts[0]).toEqual(newToast);\n  });\n\n  it('UPDATE_TOASTアクションでトーストを更新する', () => {\n    const initialState = { toasts: [{ id: '1', title: '元のタイトル', open: true }] };\n\n    const newState = reducer(initialState, {\n      type: 'UPDATE_TOAST',\n      toast: { id: '1', title: '新しいタイトル' },\n    });\n\n    expect(newState.toasts).toHaveLength(1);\n    expect(newState.toasts[0].title).toBe('新しいタイトル');\n    expect(newState.toasts[0].open).toBe(true); // 他のプロパティは保持される\n  });\n\n  it('DISMISS_TOASTアクションでトーストを閉じる', () => {\n    const initialState = { toasts: [{ id: '1', title: 'タイトル', open: true }] };\n\n    const newState = reducer(initialState, {\n      type: 'DISMISS_TOAST',\n      toastId: '1',\n    });\n\n    expect(newState.toasts).toHaveLength(1);\n    expect(newState.toasts[0].open).toBe(false);\n  });\n\n  it('REMOVE_TOASTアクションでトーストを削除する', () => {\n    const initialState = { toasts: [{ id: '1', title: 'タイトル', open: false }] };\n\n    const newState = reducer(initialState, {\n      type: 'REMOVE_TOAST',\n      toastId: '1',\n    });\n\n    expect(newState.toasts).toHaveLength(0);\n  });\n\n  it('IDなしのREMOVE_TOASTアクションで全てのトーストを削除する', () => {\n    const initialState = {\n      toasts: [\n        { id: '1', title: 'タイトル1', open: false },\n        { id: '2', title: 'タイトル2', open: false },\n      ],\n    };\n\n    const newState = reducer(initialState, {\n      type: 'REMOVE_TOAST',\n    });\n\n    expect(newState.toasts).toHaveLength(0);\n  });\n});\n"],"names":["jest","useFakeTimers","describe","it","result","renderHook","useToast","act","current","toast","title","description","expect","toasts","toHaveLength","toBe","open","toastId","response","id","dismiss","every","t","toHaveProperty","update","initialState","newToast","newState","reducer","type","toEqual"],"mappings":"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"}