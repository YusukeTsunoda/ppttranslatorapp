# MVPに必要な実装項目（実装順序と詳細）
mvp_required_implementation:
  title: MVPに必要な実装項目（実装順序と詳細）
  description: 優先度順に実装すべき項目と、各項目の詳細な実装ステップ
  items:
    - description: "- [ ] 7. クエリパラメータによるサーバーサイドフィルタリング #完了"
      priority: medium
      phases:
        - phase_name: "設計フェーズ"
          tasks:
            - description: "- [ ] フィルタリングパラメータの設計 #完了"
            - description: "- [ ] クエリパーサーの設計 #完了"
        - phase_name: "実装フェーズ"
          tasks:
            - description: "- [ ] クエリパラメータ解析機能の実装 #完了"
            - description: "- [ ] データベースクエリビルダーの実装 #完了"
            - description: "- [ ] レスポンスフォーマットの最適化 #完了"
        - phase_name: "セキュリティ強化"
          tasks:
            - description: "- [ ] インジェクション対策の実装 #完了"
            - description: "- [ ] パラメータバリデーションの強化 #完了"
            - description: "- [ ] アクセス制御の実装 #完了"

    - id: query_param_filtering
      description: "クエリパラメータによるサーバーサイドフィルタリング #完了"
      priority: medium
      depends_on: [slide_api_refactor]
      phases:
        - phase_name: "設計"
          tasks:
            - "許可パラメータと型を定義（zod スキーマ） #完了"
            - "SQL インジェクション対策ポリシー作成 #完了"
        - phase_name: "実装"
          tasks:
            - "クエリパーサ & ORM クエリビルダ実装 #完了"
            - "レスポンスに pagination / totalCount を含める #完了"
        - phase_name: "セキュリティ & テスト"
          tasks:
            - "インジェクション攻撃シナリオでペネトレーションテスト #完了"
            - "RBAC によるアクセス制御確認 #完了"
      acceptance_criteria:
        - "OWASP Top10 の Injection カテゴリをすべてクリア #完了"
        - "1 万件クエリで 200 ms 以内に応答 #完了"

# 実装詳細と注意事項
implementation_details:
  title: "サーバーサイドフィルタリング実装の詳細計画"
  description: "クエリパラメータによるサーバーサイドフィルタリングの詳細な実装手順と注意事項"
  phases:
    - phase_name: "詳細設計"
      tasks:
        - description: "フィルタリング可能なフィールドの特定と制限 #完了"
          details: 
            - "セキュリティリスクの低いフィールドのみをフィルタリング対象に指定 #完了"
            - "機密データや内部識別子はフィルタリング対象から除外 #完了"
        - description: "Zodスキーマによる厳格な型定義 #完了"
          details:
            - "各クエリパラメータの型、形式、長さ制限を定義 #完了"
            - "複合クエリ（AND/OR条件）のスキーマ設計 #完了"
        - description: "ORM安全利用ポリシーの策定 #完了"
          details:
            - "生のSQLクエリ禁止、常にORM/クエリビルダを使用 #完了"
            - "動的クエリ生成時のエスケープ処理確認 #完了"

    - phase_name: "実装ステップ"
      tasks:
        - description: "ミドルウェアによるクエリパラメータ検証 #完了"
          details:
            - "不正なパラメータの早期検出と拒否 #完了"
            - "Zodスキーマによる自動バリデーション実装 #完了"
        - description: "ORM/Prismaクエリビルダの実装 #完了"
          details:
            - "動的フィルタ条件の安全な構築方法 #完了"
            - "パフォーマンス最適化（インデックス活用確認） #完了"
        - description: "ページネーション最適化 #完了"
          details:
            - "カーソルベースページネーションの実装 #完了"
            - "大量データセットのための効率的なカウントクエリ #完了"

    - phase_name: "テストと検証"
      tasks:
        - description: "自動テストケース作成 #完了"
          details:
            - "正常系：様々なフィルタパターンのテスト #完了"
            - "異常系：不正パラメータ、攻撃パターンのテスト #完了"
        - description: "パフォーマンステスト #完了"
          details:
            - "大量データセット（1万件以上）でのクエリ実行時間測定 #完了"
            - "複雑なフィルタ条件でのレスポンスタイム検証 #完了"
        - description: "セキュリティ検証 #完了"
          details:
            - "SQLインジェクション脆弱性テスト #完了"
            - "権限バイパス攻撃シナリオテスト #完了"

  potential_issues:
    - issue: "N+1クエリ問題 #完了"
      mitigation: 
        - "関連データの取得にはincludeを使用し、必要なリレーションのみをプリロード #完了"
        - "複雑なクエリではRawクエリではなくPrismaのネイティブJOIN機能を活用 #完了"
    
    - issue: "メモリ使用量の増大 #完了"
      mitigation:
        - "大量データ返却時はストリーミングレスポンスの検討 #完了"
        - "返却データ量を制限するプロジェクション機能の実装 #完了"
    
    - issue: "インジェクション攻撃リスク #完了"
      mitigation:
        - "すべてのユーザー入力のエスケープ処理 #完了"
        - "ORMの安全なAPIのみを使用（where条件に直接文字列連結を使わない） #完了"
        - "allowlist方式での許可パラメータ制御 #完了"

  best_practices:
    - "クエリパラメータの正規化（大文字/小文字、空白処理など） #完了"
    - "適切なエラーメッセージ（詳細なDBエラーを直接返さない） #完了"
    - "レート制限の実装（複雑なクエリによるDoS対策） #完了"
    - "キャッシュ戦略の検討（頻繁に使用されるクエリ結果のキャッシュ） #完了"

  performance_considerations:
    - "適切なインデックス設計（フィルタリングされる全フィールドにインデックス作成） #完了"
    - "複合インデックスの検討（複数フィールドでのフィルタリングが多い場合） #完了"
    - "クエリ複雑度に基づくタイムアウト設定 #完了"
    - "大規模データセットでの部分的なレスポンス戦略 #完了"

  security_checklist:
    - "SQLインジェクション対策（パラメータ化クエリの使用） #完了"
    - "権限ベースのフィルタリング（ユーザーが閲覧可能なデータのみをフィルタリング対象に） #完了"
    - "APIレート制限の実装 #完了"
    - "不正確な情報漏洩の防止（エラーメッセージの一般化） #完了"
    - "入力サニタイズとバリデーション（特殊文字、長さ制限） #完了"
    
  implementation_complete:
    - "履歴API (GET /api/history) #完了"
    - "ファイル一覧API (GET /api/upload) #完了"
    - "アクティビティログAPI (GET /api/activity) #完了"
    - "ユーザー管理API (GET /api/admin/users) #完了"