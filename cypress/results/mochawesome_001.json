{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-16T02:35:12.004Z",
    "end": "2025-03-16T02:36:00.813Z",
    "duration": 48809,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 3,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "312ed96c-a8a8-4bcc-a939-60fe60dd2dc2",
      "title": "",
      "fullFile": "cypress/e2e/translate-flow.cy.ts",
      "file": "cypress/e2e/translate-flow.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9054e492-6f1b-4c32-a9d3-72c58bc034f8",
          "title": "翻訳フロー",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "翻訳ページにアクセスできる",
              "fullTitle": "翻訳フロー 翻訳ページにアクセスできる",
              "timedOut": null,
              "duration": 16244,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit('/translate');\ncy.contains('ファイルをアップロード', { timeout: 15000 }).should('be.visible');\n// ページの主要要素が表示されることを確認\ncy.get('[data-testid=\"upload-area\"]', { timeout: 10000 }).should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'ファイルをアップロード' but never did.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `翻訳フロー`",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'ファイルをアップロード' but never did.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `翻訳フロー`\n    at Context.eval (webpack://ppttranslatorapp/./cypress/e2e/translate-flow.cy.ts:53:53)",
                "diff": null
              },
              "uuid": "ff935d35-508a-421e-aea8-30d3fedc7edc",
              "parentUUID": "9054e492-6f1b-4c32-a9d3-72c58bc034f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PPTファイルをアップロードして翻訳できる",
              "fullTitle": "翻訳フロー PPTファイルをアップロードして翻訳できる",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/translate');\ncy.get('[data-testid=\"upload-area\"]', { timeout: 10000 }).should('be.visible');\n// APIリクエストをモック\ncy.intercept('POST', '/api/upload', {\n    statusCode: 200,\n    body: mockSlideData\n}).as('uploadRequest');\n// ファイルをアップロード（実際のファイルを使用）\ncy.get('input[type=\"file\"]').selectFile('cypress/fixtures/sample.pptx', { force: true });\n// アップロードリクエストが完了するまで待機\ncy.wait('@uploadRequest', { timeout: 30000 });\n// スライドが表示されることを確認\ncy.get('[data-testid=\"slide-preview\"]', { timeout: 20000 }).should('be.visible');\n// 翻訳ボタンをクリック\ncy.contains('button', '翻訳する', { timeout: 10000 })\n    .should('be.visible')\n    .click();\n// 翻訳処理の完了を待機\ncy.get('[data-testid=\"translating-indicator\"]', { timeout: 60000 })\n    .should('exist')\n    .then(function () {\n    cy.get('[data-testid=\"translating-indicator\"]', { timeout: 60000 })\n        .should('not.exist')\n        .then(function () {\n        cy.log('翻訳処理が完了しました');\n    });\n});\n// 翻訳結果が表示されることを確認\ncy.get('[data-testid=\"translation-text\"]', { timeout: 20000 }).should('be.visible');",
              "err": {},
              "uuid": "1c2c3442-04a6-4246-837b-6c609a2e3d8f",
              "parentUUID": "9054e492-6f1b-4c32-a9d3-72c58bc034f8",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "翻訳テキストを編集できる",
              "fullTitle": "翻訳フロー 翻訳テキストを編集できる",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/translate');\ncy.get('[data-testid=\"upload-area\"]', { timeout: 10000 }).should('be.visible');\n// APIリクエストをモック（翻訳済みデータを返す）\ncy.intercept('POST', '/api/upload', {\n    statusCode: 200,\n    body: translatedMockData\n}).as('uploadRequest');\n// ファイルをアップロード（実際のファイルを使用）\ncy.get('input[type=\"file\"]').selectFile('cypress/fixtures/sample.pptx', { force: true });\n// アップロードリクエストが完了するまで待機\ncy.wait('@uploadRequest', { timeout: 30000 });\n// スライドが表示されるまで待機\ncy.get('[data-testid=\"slide-preview\"]', { timeout: 20000 }).should('be.visible');\n// 翻訳テキストが表示されるまで待機\ncy.get('[data-testid=\"translation-text\"]', { timeout: 20000 }).first().should('be.visible');\n// 翻訳テキストをクリックして編集モードに入る\ncy.get('[data-testid=\"translation-text\"]').first().click();\n// テキストを編集\nvar editedText = 'This is an edited translation text';\ncy.get('textarea', { timeout: 10000 })\n    .should('be.visible')\n    .clear()\n    .type(editedText);\n// 保存ボタンをクリック\ncy.get('[data-testid=\"save-translation-button\"]').click();\n// 編集したテキストが表示されることを確認\ncy.get('[data-testid=\"translation-text\"]').first()\n    .should('contain', editedText, { timeout: 10000 });",
              "err": {},
              "uuid": "080ce063-589c-46e4-bee1-00a39e73a979",
              "parentUUID": "9054e492-6f1b-4c32-a9d3-72c58bc034f8",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "翻訳したPPTをダウンロードできる",
              "fullTitle": "翻訳フロー 翻訳したPPTをダウンロードできる",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/translate');\ncy.get('[data-testid=\"upload-area\"]', { timeout: 10000 }).should('be.visible');\n// APIリクエストをモック（翻訳済みデータを返す）\ncy.intercept('POST', '/api/upload', {\n    statusCode: 200,\n    body: translatedMockData\n}).as('uploadRequest');\n// ファイルをアップロード（実際のファイルを使用）\ncy.get('input[type=\"file\"]').selectFile('cypress/fixtures/sample.pptx', { force: true });\n// アップロードリクエストが完了するまで待機\ncy.wait('@uploadRequest', { timeout: 30000 });\n// スライドが表示されるまで待機\ncy.get('[data-testid=\"slide-preview\"]', { timeout: 20000 }).should('be.visible');\n// ダウンロードボタンをクリック\ncy.get('[data-testid=\"download-button\"]', { timeout: 10000 })\n    .should('be.visible')\n    .click();\n// ダウンロード処理の完了を待機\ncy.get('[data-testid=\"downloading-indicator\"]', { timeout: 30000 })\n    .should('exist')\n    .then(function () {\n    cy.get('[data-testid=\"downloading-indicator\"]', { timeout: 30000 })\n        .should('not.exist')\n        .then(function () {\n        cy.log('ダウンロードが完了しました');\n    });\n});\n// ダウンロード成功のメッセージが表示されることを確認\ncy.contains('ダウンロード完了', { timeout: 15000 }).should('exist');",
              "err": {},
              "uuid": "54ff86b8-32b9-4944-b755-6463fac379b3",
              "parentUUID": "9054e492-6f1b-4c32-a9d3-72c58bc034f8",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ff935d35-508a-421e-aea8-30d3fedc7edc"
          ],
          "pending": [],
          "skipped": [
            "1c2c3442-04a6-4246-837b-6c609a2e3d8f",
            "080ce063-589c-46e4-bee1-00a39e73a979",
            "54ff86b8-32b9-4944-b755-6463fac379b3"
          ],
          "duration": 16244,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}