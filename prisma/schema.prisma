generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ActivityLog {
  id        String         @id @default(uuid())
  userId    String
  action    ActivityAction
  ipAddress String
  metadata  Json?
  createdAt DateTime       @default(now())
  user      users          @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([createdAt])
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  users             users   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  users        users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Translation {
  id           String   @id
  slides       Json
  translations Json
  currentSlide Int
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime
  users        users    @relation(fields: [userId], references: [id])

  @@index([userId])
}

model users {
  id                   String        @id
  name                 String?
  email                String?       @unique
  emailVerified        DateTime?
  image                String?
  role                 String        @default("user")
  lastLogin            DateTime?
  sessionExpires       DateTime?
  createdAt            DateTime      @default(now())
  updatedAt            DateTime
  deletedAt            DateTime?
  stripeCustomerId     String?       @unique
  stripeSubscriptionId String?
  stripeProductId      String?
  planName             String?
  subscriptionStatus   String?
  lastMagicLinkSent    DateTime?
  magicLinkExpires     DateTime?
  magicLinkToken       String?       @unique
  passwordHash         String?
  lastPasswordReset    DateTime?
  resetToken           String?       @unique
  resetTokenExpires    DateTime?
  Account              Account[]
  activityLogs         ActivityLog[]
  Session              Session[]
  Translation          Translation[]

  @@index([email])
  @@index([lastLogin])
  @@index([magicLinkToken])
  @@index([resetToken])
  @@index([sessionExpires])
}

enum ActivityAction {
  sign_in
  sign_up
  sign_out
  update_account
  update_password
  delete_account
  file_upload
  translation
  download
  settings_change
}
